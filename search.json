[{"path":"https://irsn.github.io/Renext/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yves Deville. Author. Bardet. Author. Yann Richet. Maintainer.","code":""},{"path":"https://irsn.github.io/Renext/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Deville Y, Bardet (2025). Renext: Renewal Method Extreme Values Extrapolation. R package version 3.1-5, https://github.com/IRSN/Renext.","code":"@Manual{,   title = {Renext: Renewal Method for Extreme Values Extrapolation},   author = {Yves Deville and {Bardet}},   year = {2025},   note = {R package version 3.1-5},   url = {https://github.com/IRSN/Renext}, }"},{"path":[]},{"path":"https://irsn.github.io/Renext/index.html","id":"renext","dir":"","previous_headings":"","what":"Renext","title":"Renewal Method for Extreme Values Extrapolation","text":"repository contains complete source code Renext package, released CRAN since 2010. package still maintained new development planned. package vignette , yet Renext Guide available shipped package pdf file (extra compression). Renext Computing Details document available , included package source tarball tar.gz. Although document 10 years old, re-compiled time time slight fixes/changes.","code":""},{"path":"https://irsn.github.io/Renext/reference/Brest.html","id":null,"dir":"Reference","previous_headings":"","what":"Surge heights at Brest — Brest","title":"Surge heights at Brest — Brest","text":"Surge heights near high tide Brest tide gauge station (France),   detailed version","code":""},{"path":"https://irsn.github.io/Renext/reference/Brest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Surge heights at Brest — Brest","text":"","code":"Brest"},{"path":"https://irsn.github.io/Renext/reference/Brest.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Surge heights at Brest — Brest","text":"format :   List 5 $info : List 6 $name        : chr \"Brest\" $shortLab    : chr \"Surge Heights Brest (France)\" $longLab     : chr \"Surge Heights near high tide,  Brest (France)\" $varName     : chr \"Surge\" $varShortLab : chr \"Surge\" $varUnit : chr \"cm\" $describe : chr     \"High tide sea surge 30 cm Brest (France)...\" $OTinfo : List 4 $start       : chr POSIXct[1:1], format: \"1846-01-01\" $end         : chr POSIXct[1:1], format: \"2009-01-01\" $effDuration : num 148 $threshold   : num 30 $OTdata : 'data.frame':\t1289 obs.  2 variables: $date : POSIXct[1:1289], format: \"1846-01-14\" \"1846-01-21\" ... $Surge : num [1:1289] 36 60 46 40 33 ... $OTmissing : 'data.frame':\t43 obs.  3 variables: $start   : POSIXct[1:43], format: \"1846-01-01\" \"1847-01-01\" ... $end     : POSIXct[1:43], format: \"1846-01-04\" \"1847-01-21\" ... $comment : chr [1:43] \"\" \"\" \"\" \"\" ... - attr(*, \"class\")= chr \"Rendata\"","code":""},{"path":"https://irsn.github.io/Renext/reference/Brest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Surge heights at Brest — Brest","text":"Data provided list.  info gives general information data OTinfo gives general information     Threshold part data. effective duration (effDuration     element) total duration periods effective     measurements. OTdata give OT measurements OTmissing gives start end missing periods     OT measurements. Data come hourly sea levels measured predicted french   Service Hydrogéographique et   Océanographique de la Marine (SHOM).  Observed   sea levels available REFMAR data url   https://data.shom.fr/.  Data processed (declustered) IRSN   order provide series independent surge heights high   tide. Surge height high tide defined difference   observed predicted maximal sea levels near high tide.    correction applied account trend sea-level   observation period. effective duration given years defined small   fraction year due leap years leap seconds.","code":""},{"path":"https://irsn.github.io/Renext/reference/Brest.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Surge heights at Brest — Brest","text":"https://data.shom.fr/","code":""},{"path":"https://irsn.github.io/Renext/reference/Brest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Surge heights at Brest — Brest","text":"","code":"str(Brest) #> List of 5 #>  $ info     :List of 6 #>   ..$ name       : chr \"Brest\" #>   ..$ shortLab   : chr \"Surge Heights at Brest (France)\" #>   ..$ longLab    : chr \"Surge Heights near high tide,  Brest (France)\" #>   ..$ varName    : chr \"Surge\" #>   ..$ varShortLab: chr \"Surge\" #>   ..$ varUnit    : chr \"cm\" #>  $ describe : chr \"High tide sea surge over 30 cm atBrest(France) separated byat least two days.\" #>  $ OTinfo   :List of 4 #>   ..$ start      : POSIXct[1:1], format: \"1846-01-01\" #>   ..$ end        : POSIXct[1:1], format: \"2009-01-01\" #>   ..$ effDuration: num 148 #>   ..$ threshold  : num 30 #>  $ OTdata   :'data.frame':\t1289 obs. of  3 variables: #>   ..$ date   : POSIXct[1:1289], format: \"1846-01-14\" \"1846-01-21\" ... #>   ..$ Surge  : num [1:1289] 36 60 46 40 33 ... #>   ..$ comment: chr [1:1289] \"\" \"\" \"\" \"\" ... #>  $ OTmissing:'data.frame':\t43 obs. of  3 variables: #>   ..$ start  : POSIXct[1:43], format: \"1846-01-01\" \"1847-01-01\" ... #>   ..$ end    : POSIXct[1:43], format: \"1846-01-04\" \"1847-01-21\" ... #>   ..$ comment: chr [1:43] \"\" \"\" \"\" \"\" ... #>  - attr(*, \"class\")= chr \"Rendata\" Brest$OTinfo$start #> [1] \"1846-01-01 GMT\" plot(Brest)"},{"path":"https://irsn.github.io/Renext/reference/Brest.years.html","id":null,"dir":"Reference","previous_headings":"","what":"Surge heights at Brest partial data — Brest.years","title":"Surge heights at Brest partial data — Brest.years","text":"Surge heights Brest (France)","code":""},{"path":"https://irsn.github.io/Renext/reference/Brest.years.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Surge heights at Brest partial data — Brest.years","text":"","code":"Brest.years"},{"path":"https://irsn.github.io/Renext/reference/Brest.years.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Surge heights at Brest partial data — Brest.years","text":"data frame 954 observations following 2 variables. year Year e.g; 1980 Surge Surge heights threshold 30 cm.","code":""},{"path":"https://irsn.github.io/Renext/reference/Brest.years.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Surge heights at Brest partial data — Brest.years","text":"data simplified version Brest.   surge event year retained timestamp. Years   missing periods available vector Brest.years.missing. dataset useful testing since similar data sometimes   met analyses.","code":""},{"path":"https://irsn.github.io/Renext/reference/Brest.years.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Surge heights at Brest partial data — Brest.years","text":"","code":"names(Brest.years) #> [1] \"year\"  \"Surge\""},{"path":"https://irsn.github.io/Renext/reference/Brest.years.missing.html","id":null,"dir":"Reference","previous_headings":"","what":"Years with missing periods in 'Brest.year' dataset — Brest.years.missing","title":"Years with missing periods in 'Brest.year' dataset — Brest.years.missing","text":"Years missing periods 'Brest.years' dataset","code":""},{"path":"https://irsn.github.io/Renext/reference/Brest.years.missing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Years with missing periods in 'Brest.year' dataset — Brest.years.missing","text":"","code":"Brest.years.missing"},{"path":"https://irsn.github.io/Renext/reference/Brest.years.missing.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Years with missing periods in 'Brest.year' dataset — Brest.years.missing","text":"format :   int [1:49] 1846 1847 1852 1857 1858 1859 1860 1861 1862 1863 ...","code":""},{"path":"https://irsn.github.io/Renext/reference/Brest.years.missing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Years with missing periods in 'Brest.year' dataset — Brest.years.missing","text":"Vector years containing missing periods   Brest.years dataset. years ignored   computing yearly statistics event rates, since time records   lost.","code":""},{"path":"https://irsn.github.io/Renext/reference/Brest.years.missing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Years with missing periods in 'Brest.year' dataset — Brest.years.missing","text":"","code":"print(Brest.years.missing) #>  [1] 1846 1847 1852 1857 1858 1859 1860 1861 1862 1863 1864 1867 1868 1872 1874 #> [16] 1877 1878 1891 1897 1907 1910 1911 1915 1916 1917 1920 1922 1923 1937 1938 #> [31] 1940 1944 1945 1946 1947 1948 1949 1950 1951 1952 1980 1981 1982 1991 1992 #> [46] 1993 1999 2000 2008"},{"path":"https://irsn.github.io/Renext/reference/CV2.html","id":null,"dir":"Reference","previous_headings":"","what":"Squared Coefficient of Variation — CV2","title":"Squared Coefficient of Variation — CV2","text":"Squared Coefficient Variation.","code":""},{"path":"https://irsn.github.io/Renext/reference/CV2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Squared Coefficient of Variation — CV2","text":"","code":"CV2(x)"},{"path":"https://irsn.github.io/Renext/reference/CV2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Squared Coefficient of Variation — CV2","text":"x Numeric vector matrix.","code":""},{"path":"https://irsn.github.io/Renext/reference/CV2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Squared Coefficient of Variation — CV2","text":"Numeric vector squared coefficients variation.","code":""},{"path":"https://irsn.github.io/Renext/reference/CV2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Squared Coefficient of Variation — CV2","text":"Compute squared Coefficient Variation one several samples   provided numeric vector matrix.","code":""},{"path":"https://irsn.github.io/Renext/reference/CV2.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Squared Coefficient of Variation — CV2","text":"squared coefficient variation ratio   \\(S^2/\\bar{X}^2\\) \\(\\bar{X}\\) \\(S^2\\)   sample mean sample variance. variance computed   using sample size \\(n\\) denominator, rather usual   \\(n-1\\).","code":""},{"path":"https://irsn.github.io/Renext/reference/CV2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Squared Coefficient of Variation — CV2","text":"","code":"n <- 30; nSamp <- 500 X <- matrix(rexp(n * nSamp), nrow= nSamp, ncol = n) W <- CV2(X) plot(density(W), main = \"CV2 of exponential samples\")"},{"path":"https://irsn.github.io/Renext/reference/CV2.test.html","id":null,"dir":"Reference","previous_headings":"","what":"CV2 test of exponentiality — CV2.test","title":"CV2 test of exponentiality — CV2.test","text":"Test exponentiality based squared coefficient variation.","code":""},{"path":"https://irsn.github.io/Renext/reference/CV2.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CV2 test of exponentiality — CV2.test","text":"","code":"CV2.test(x, method = c(\"num\", \"sim\", \"asymp\"), nSamp = 15000)"},{"path":"https://irsn.github.io/Renext/reference/CV2.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CV2 test of exponentiality — CV2.test","text":"x Numeric vector giving sample.  method Method used compute \\(p\\)-value.  Can \"asymp\",     \"num\" \"sim\" LRExp.test.  nSamp Number samples used compute \\(p\\)-value     method \"sim\".","code":""},{"path":"https://irsn.github.io/Renext/reference/CV2.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CV2 test of exponentiality — CV2.test","text":"list test results.  statistic, p.value test statistic, .e. squared coefficient     variation \\(\\textrm{CV}^2\\) \\(p\\)-value.  df sample size.  method Description test method.","code":""},{"path":"https://irsn.github.io/Renext/reference/CV2.test.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"CV2 test of exponentiality — CV2.test","text":"test sometimes referred Wilk's exponentiality   test WE1 test.  works quite well Lomax   alternative (.e.  GPD shape \\(\\xi >0\\)), hence can   compared Jackson's test Likelihood-Ratio (LR) test   exponentiality.  However, test lower power two   others comparable computation cost due   evaluation Greenwood's statistic distribution.","code":""},{"path":"https://irsn.github.io/Renext/reference/CV2.test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CV2 test of exponentiality — CV2.test","text":"distribution \\(\\textrm{CV}^2\\)   Greenwood's statistic normalising constants.    approximately normal expectation \\(1\\) standard deviation   \\(2/\\sqrt{n}\\) large sample size n. Yet   convergence normal known slow.","code":""},{"path":"https://irsn.github.io/Renext/reference/CV2.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"CV2 test of exponentiality — CV2.test","text":"S. Ascher (1990) \"Survey Tests Exponentiality\"   Commun. Statist. Theory Methods, 19(5), pp. 1811-1525.","code":""},{"path":"https://irsn.github.io/Renext/reference/CV2.test.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CV2 test of exponentiality — CV2.test","text":"Yves Deville","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/CV2.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CV2 test of exponentiality — CV2.test","text":"","code":"n <- 30; nSamp <- 500 X <- matrix(rexp(n * nSamp), nrow = nSamp, ncol = n) pVals <- apply(X, 1, function(x) CV2.test(x)$p.value) plot(pVals)  ## should be uniform on (0, 1)"},{"path":"https://irsn.github.io/Renext/reference/Dunkerque.html","id":null,"dir":"Reference","previous_headings":"","what":"Surge heights at Dunkerque — Dunkerque","title":"Surge heights at Dunkerque — Dunkerque","text":"Surge heights near high tide Dunkerque tide gauge station (France)","code":""},{"path":"https://irsn.github.io/Renext/reference/Dunkerque.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Surge heights at Dunkerque — Dunkerque","text":"","code":"Dunkerque"},{"path":"https://irsn.github.io/Renext/reference/Dunkerque.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Surge heights at Dunkerque — Dunkerque","text":"format :   List 7 $info : List 6 $name    : chr \"Dunkerque\" $shortLab   : chr \"Surge Heights Dunkerque (France)\" $longLab    : chr \"Surge Heights near high tide,  Dunkerque (France)\" $varName    : chr \"Surge\" $varShortLab : chr \"Surge\" $varUnit    : chr \"cm\" $describe : chr \"High tide sea surge 30 cm Dunkerque... \" $OTinfo : List 4 $start     : POSIXct[1:1], format: \"1956-01-01\" $end       : POSIXct[1:1], format: \"2009-01-01\" $effDuration: num 38.8 $threshold  : num \"30\" $OTdata : 'data.frame':\t740 obs. 3 variables: $date  : POSIXct[1:740], format: \"1956-11-27\" \"1956-12-03\" ... $Surge : num [1:740] 67.9 30.9 51.8 30.8 39.8 ... $comment : chr [1:740] \"\" \"\" \"\" \"\" ... $OTmissing : 'data.frame':\t83 obs.  3 variables: $start  : POSIXct[1:83], format: \"1956-01-01\" \"1956-08-08\" ... $end    : POSIXct[1:83], format: \"1956-06-07\" \"1956-11-03\" ... $comment: chr [1:83] \"\" \"\" \"\" \"\" ... $MAXinfo  : 'data.frame' : 1 obs.  3 variables: $start  : POSIXct[1:1], format: \"1706-01-01\" $end    : POSIXct[1:1], format: \"1956-01-01\" $duration : num 250 $MAXdata  :'data.frame':\t1 obs.  4 variables: $block  : int 1 $date   : POSIXct[1:1], format: \"1953-02-01\" $Surge  : num 213 $comment : chr \"1\" - attr(*, \"class\")= chr \"Rendata\"","code":""},{"path":"https://irsn.github.io/Renext/reference/Dunkerque.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Surge heights at Dunkerque — Dunkerque","text":"See Brest Garonne datasets   list structure. 'historical' surge 213 cm observed 1953-02-01   considered experts return period 250 years.","code":""},{"path":"https://irsn.github.io/Renext/reference/Dunkerque.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Surge heights at Dunkerque — Dunkerque","text":"","code":"Dunkerque$info #> $name #> [1] \"Dunkerque\" #>  #> $shortLab #> [1] \"Surge Heights at Dunkerque (France)\" #>  #> $longLab #> [1] \"Surge Heights near high tide,  Dunkerque (France)\" #>  #> $varName #> [1] \"Surge\" #>  #> $varShortLab #> [1] \"Surge\" #>  #> $varUnit #> [1] \"cm\" #>  plot(Dunkerque)"},{"path":"https://irsn.github.io/Renext/reference/EM.mixexp.html","id":null,"dir":"Reference","previous_headings":"","what":"Expectation-Maximisation for a mixture of exponential distributions — EM.mixexp","title":"Expectation-Maximisation for a mixture of exponential distributions — EM.mixexp","text":"Experimental function Expectation-Maximisation (EM) estimation","code":""},{"path":"https://irsn.github.io/Renext/reference/EM.mixexp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expectation-Maximisation for a mixture of exponential distributions — EM.mixexp","text":"","code":"EM.mixexp(x, m = 2)"},{"path":"https://irsn.github.io/Renext/reference/EM.mixexp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expectation-Maximisation for a mixture of exponential distributions — EM.mixexp","text":"x Sample vector values >0.  m Number mixture components.","code":""},{"path":"https://irsn.github.io/Renext/reference/EM.mixexp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Expectation-Maximisation for a mixture of exponential distributions — EM.mixexp","text":"EM algorithm simple exponential mixtures (well    many mixture models). According general feature EM, iterative method leads    successive estimates increasing likelihood may    converge local maximum likelihood.","code":""},{"path":"https://irsn.github.io/Renext/reference/EM.mixexp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expectation-Maximisation for a mixture of exponential distributions — EM.mixexp","text":"List estimate Estimated values named vector.  logL Vector giving log-likelihood successive iterations.  Alpha Matrix m columns giving probability weights     successive iterations. Row number contains     m probabilities iteration .  Theta Matrix m columns giving estimates     m expectations successive iterations","code":""},{"path":"https://irsn.github.io/Renext/reference/EM.mixexp.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Expectation-Maximisation for a mixture of exponential distributions — EM.mixexp","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/EM.mixexp.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Expectation-Maximisation for a mixture of exponential distributions — EM.mixexp","text":"estimation done expectation (inverse rates)   estimate vector result contains rates compatibility   reasons (e.g exponential).","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/EM.mixexp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expectation-Maximisation for a mixture of exponential distributions — EM.mixexp","text":"","code":"set.seed(1234) x <- rmixexp2(n = 100, prob1 = 0.5, rate2 = 4) EM.mixexp(x) -> res res$estimate #>     prob1     prob2     rate1     rate2  #> 0.5844083 0.4155917 1.2991665 4.7291873  matplot(res$Theta, type = \"l\", lwd = 2,         xlab = \"iteration\", ylab = \"theta\",         main = \"exponential inverse rates\")"},{"path":"https://irsn.github.io/Renext/reference/GPD.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalised Pareto Distribution — GPD","title":"Generalised Pareto Distribution — GPD","text":"Density function, distribution function, quantile function, random   generation, hazard cumulative hazard functions Generalised   Pareto Distribution.","code":""},{"path":"https://irsn.github.io/Renext/reference/GPD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalised Pareto Distribution — GPD","text":"","code":"dGPD(x, loc = 0.0, scale = 1.0, shape = 0.0, log = FALSE)    pGPD(q, loc = 0.0, scale = 1.0, shape = 0.0, lower.tail = TRUE)    qGPD(p, loc = 0.0, scale = 1.0, shape = 0.0, lower.tail = TRUE)    rGPD(n, loc = 0.0, scale = 1.0, shape = 0.0)    hGPD(x, loc = 0.0, scale = 1.0, shape = 0.0)    HGPD(x, loc = 0.0, scale = 1.0, shape = 0.0)"},{"path":"https://irsn.github.io/Renext/reference/GPD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalised Pareto Distribution — GPD","text":"x, q Vector quantiles.  p Vector probabilities.  n Number observations.  loc Location parameter \\(\\mu\\).  scale Scale parameter \\(\\sigma\\).  shape Shape parameter \\(\\xi\\).  log Logical; TRUE, log density returned.  lower.tail Logical; TRUE (default), probabilities     \\(\\textrm{Pr}[X <= x]\\), otherwise, \\(\\textrm{Pr}[X     > x]\\).","code":""},{"path":"https://irsn.github.io/Renext/reference/GPD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generalised Pareto Distribution — GPD","text":"Let \\(\\mu\\), \\(\\sigma\\) \\(\\xi\\) denote loc,   scale shape. distribution values \\(y\\)   \\(\\mu \\leq y < y_{\\textrm{max}}\\). \\(\\xi \\neq 0\\), survival function value   \\(y \\geq \\mu\\) given $$S(y) = \\left[1 + \\xi(y - \\mu)/\\sigma\\right]^{-1/ \\xi} \\qquad     \\mu < y < y_{\\textrm{max}}$$   upper end-point     \\(y_{\\textrm{max}} = \\infty\\)     \\(\\xi >0\\) \\(y_{\\textrm{max}} = \\mu -\\sigma/ \\xi\\) \\(\\xi <0\\). \\(\\xi = 0\\), distribution exponential survival    $$S(y) = \\exp\\left[- (y - \\mu)/\\sigma\\right] \\qquad \\mu \\leq y. $$","code":""},{"path":"https://irsn.github.io/Renext/reference/GPD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generalised Pareto Distribution — GPD","text":"dGPD gives density function, pGPD gives   distribution function, qGPD gives quantile function,   rGPD generates random deviates. functions   hGPD HGPD return hazard rate cumulative   hazard.","code":""},{"path":"https://irsn.github.io/Renext/reference/GPD.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Generalised Pareto Distribution — GPD","text":"functions slight adaptations [r,d,p,q]gpd   functions evd package. main difference   functions return NaN shape negative,   might needed unconstrained optimisation. quantile function   can used p=0 p=1, returning lower   upper end-point.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/GPD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalised Pareto Distribution — GPD","text":"","code":"qGPD(p = c(0, 1), shape = -0.2) #> [1] 0 5 shape <- -0.3 xlim <- qGPD(p = c(0, 1), shape = shape) x <- seq(from = xlim[1], to = xlim[2], length.out = 100) h <- hGPD(x, shape = shape) plot(x, h, type = \"o\", main = \"hazard rate for shape < 0\")  shape <- 0.2 xlim <- qGPD(p = c(0, 1 - 1e-5), shape = shape) x <- seq(from = xlim[1], to = xlim[2], length.out = 100) h <- hGPD(x, shape = shape) plot(x, h, type = \"o\", main = \"hazard rate shape > 0 \")"},{"path":"https://irsn.github.io/Renext/reference/Garonne.html","id":null,"dir":"Reference","previous_headings":"","what":"Flow of the french river La Garonne — Garonne","title":"Flow of the french river La Garonne — Garonne","text":"Flow french river La Garonne le Mas d'Agenais","code":""},{"path":"https://irsn.github.io/Renext/reference/Garonne.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flow of the french river La Garonne — Garonne","text":"","code":"Garonne"},{"path":"https://irsn.github.io/Renext/reference/Garonne.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Flow of the french river La Garonne — Garonne","text":"format :   List 7 $info : List 6 $name       : chr \"Garonne\" $shortLab   : chr \"La Garonne Le Mas d'Agenais\" $longLab    : chr \"River flow La Garonne Le Mas d'Agenais\" $varName    : chr \"Flow\" $varShortLab : chr \"Flow\" $varUnit    : chr \"m3/s\" $describe : chr \"Flow french river La Garonne ...\" $OTinfo :List 4 $start       : POSIXct[1:1], format: \"1913-01-01\" $end         : POSIXct[1:1], format: \"1978-01-01\" $effduration : num 65 $threshold   : num 2500 $OTdata : 'data.frame':\t151 obs.  3 variables: $date : POSIXct[1:151], format: \"1913-04-08\" \"1913-04-25\"  ... $Flow  : num [1:151] 2600 2800 2700 4579 3400    ... comment : chr [1:151] \"\" \"\" \"\" \"\" ... $OTmissing : NULL $MAXinfo :'data.frame':\t1 obs.  3 variables: $start    : POSIXct[1:1], format: \"1770-01-01\" $end      : POSIXct[1:1], format: \"1913-01-01\" $duration : num 143 $MAXdata :'data.frame':\t12 obs. 4 variables: $block  : num [1:12] 1 1 1 1 1 1 1 1 1 1 ... date : POSIXct[1:12], format: NA NA ... $Flow      : num [1:12]       7500 7400 7000 7000 7000 6600 6500 6500 6400 6300 ... $comment : chr [1:12] \"1 (1875)\" \"2 (1770)\" \"3 (1783)\" \"4 (1855)\" ... - attr(*, \"class\")= chr \"Rendata\"","code":""},{"path":"https://irsn.github.io/Renext/reference/Garonne.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Flow of the french river La Garonne — Garonne","text":"data concern french river La Garonne gauging    station named Le Mas d'Agenais many floods occurred    past centuries. data consist OT data historical data. variable    river flow cube meter per second \\((\\textrm{m}^3/\\textrm{s})\\) estimated    river level using rating curve. precision limited many ties present    among flow values. OT data \"OTdata\" contain flows values threshold    \\(u = 2500\\,\\mathrm{m}\\) \\(65\\) years    period 1913-1977.    historical data \"MAXdata\"  simply \\(r=12\\) largest flows period    \\(143\\) years 1770-1912. exact dates events known    precision years known given comments.","code":""},{"path":"https://irsn.github.io/Renext/reference/Garonne.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Flow of the french river La Garonne — Garonne","text":"data taken book Miquel.","code":""},{"path":"https://irsn.github.io/Renext/reference/Garonne.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Flow of the french river La Garonne — Garonne","text":"Miquel J. (1984) Guide pratique d'estimation des     probabilités de crues, Eyrolles (coll. EDF DER). Parent E. Bernier J. (2003) Bayesian POT modeling Historical   data. Journal Hydrology vol. 274, pp. 95-108.","code":""},{"path":"https://irsn.github.io/Renext/reference/Garonne.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flow of the french river La Garonne — Garonne","text":"","code":"plot(Garonne)"},{"path":"https://irsn.github.io/Renext/reference/Hpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting positions for exponential return levels — Hpoints","title":"Plotting positions for exponential return levels — Hpoints","text":"Plotting positions exponential return level plots.","code":""},{"path":"https://irsn.github.io/Renext/reference/Hpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting positions for exponential return levels — Hpoints","text":"","code":"Hpoints(n)"},{"path":"https://irsn.github.io/Renext/reference/Hpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting positions for exponential return levels — Hpoints","text":"n Sample size.","code":""},{"path":"https://irsn.github.io/Renext/reference/Hpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting positions for exponential return levels — Hpoints","text":"Numeric vector plotting positions length n.","code":""},{"path":"https://irsn.github.io/Renext/reference/Hpoints.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plotting positions for exponential return levels — Hpoints","text":"plotting positions numeric values use abscissae   corresponding order statistics exponential return level   plot. range 1 \\(\\log n\\). can   related plotting positions given ppoints. returned vector \\(\\mathbf{H}\\) elements $$H_{} =   \\frac{1}{n} + \\frac{1}{n-1} + \\dots + \\frac{1}{n + 1 -}$$ \\(1 \\leq \\leq n\\). expectation \\(\\)-th order statistic   sample standard exponential distribution, see   e.g. chap. 4 Embrechts et al.","code":""},{"path":"https://irsn.github.io/Renext/reference/Hpoints.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plotting positions for exponential return levels — Hpoints","text":"Embrechts P., Klüppelberg C. Mikosch T. (1997) Modelling    Extremal Events Insurance Finance. Springer.","code":""},{"path":"https://irsn.github.io/Renext/reference/Hpoints.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plotting positions for exponential return levels — Hpoints","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/Hpoints.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plotting positions for exponential return levels — Hpoints","text":"\\(n\\) large enough, largest value \\(H_n\\)   approximately \\(\\gamma + \\log n\\)   \\(\\gamma\\) Euler-Mascheroni constant, \\(\\exp   H_n\\) \\(1.78 n\\).  Thus Hpoints   used plotting positions return level plot, largest   observation return period \\(1.78 n\\) years.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/Hpoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting positions for exponential return levels — Hpoints","text":"","code":"n <- 30 set.seed(1234) x <- rGPD(n, shape = 0.2) plot(exp(Hpoints(n)), sort(x), log = \"x\",      main = \"Basic return level plot\")"},{"path":"https://irsn.github.io/Renext/reference/Jackson.html","id":null,"dir":"Reference","previous_headings":"","what":"Jackson's statistic — Jackson","title":"Jackson's statistic — Jackson","text":"Jackson's statistic exponentiality test.","code":""},{"path":"https://irsn.github.io/Renext/reference/Jackson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jackson's statistic — Jackson","text":"","code":"Jackson(x, norm = FALSE)"},{"path":"https://irsn.github.io/Renext/reference/Jackson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jackson's statistic — Jackson","text":"x Numeric vector matrix. second case,     rows considered samples. norm Logical: TRUE, statistic     normalized using asymptotic mean   standard deviation, respectively 2 1.","code":""},{"path":"https://irsn.github.io/Renext/reference/Jackson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Jackson's statistic — Jackson","text":"numeric vector length 1 x   vector, length nrow(x) x   matrix.","code":""},{"path":"https://irsn.github.io/Renext/reference/Jackson.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Jackson's statistic — Jackson","text":"value(s) statistic ratio two weighted   means order statistics.","code":""},{"path":"https://irsn.github.io/Renext/reference/Jackson.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Jackson's statistic — Jackson","text":"J. Beirlant T. de Weit Y. Goegebeur(2006)   Goodness--fit Statistic Pareto-Type Behaviour,   J. Comp. Appl. Math., 186(1), pp. 99-116","code":""},{"path":"https://irsn.github.io/Renext/reference/Jackson.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Jackson's test of exponentiality — Jackson.test","title":"Jackson's test of exponentiality — Jackson.test","text":"Jackson's test exponentiality","code":""},{"path":"https://irsn.github.io/Renext/reference/Jackson.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jackson's test of exponentiality — Jackson.test","text":"","code":"Jackson.test(x, method = c(\"num\", \"sim\", \"asymp\"), nSamp = 15000)"},{"path":"https://irsn.github.io/Renext/reference/Jackson.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jackson's test of exponentiality — Jackson.test","text":"x numeric vector matrix. method Character: choice method used     compute \\(p\\)-value. See Details     section. nSamp Number samples used compute     \\(p\\)-value method \"sim\".","code":""},{"path":"https://irsn.github.io/Renext/reference/Jackson.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Jackson's test of exponentiality — Jackson.test","text":"list results.  statistic, p.value statistic \\(p\\)-value.  df Number \\(n\\) observations.  method Description test implemented, regardless     \\(p\\)-value computed.","code":""},{"path":"https://irsn.github.io/Renext/reference/Jackson.test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Jackson's test of exponentiality — Jackson.test","text":"Compute Jackson's test exponentiality.  test   statistic ratio weighted sums order   statistics. sums can also written weighted sums   scalings. Jackson's statistic sample size \\(n\\)   exponential distribution can shown approximately   normal. precisely \\(\\sqrt{n}(J_n -2)\\) approximately standard normal distribution.   distribution used compute \\(p\\)-value   method \"asymp\". method   \"num\", numerical approximation distribution   used. Finally, method \"sim\"   \\(p\\)-value computed simulating nSamp   samples size length(x) estimating   probability Jackson's statistic larger   'observed' x.","code":""},{"path":"https://irsn.github.io/Renext/reference/Jackson.test.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Jackson's test of exponentiality — Jackson.test","text":"Jackson's test exponentiality works fine Lomax alternative   (GPD heavy tail). reaches nearly power   Likelihood Ratio (LR) test, see Kozubowski et al.  can   implemented easily LR test simulated values   test statistic can obtained quickly enough compute   \\(p\\)-value simulation.","code":""},{"path":"https://irsn.github.io/Renext/reference/Jackson.test.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Jackson's test of exponentiality — Jackson.test","text":"Yves Deville","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/Jackson.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Jackson's test of exponentiality — Jackson.test","text":"J. Beirlant T. de Weit Y. Goegebeur(2006) \"Goodness--fit   Statistic Pareto-Type Behaviour\", J. Comp. Appl. Math.,   186(1), pp. 99-116. T.J. Kozubowski, . K. Panorska, F. Qeadan, . Gershunov   D. Rominger (2009)   \"Testing Exponentiality Versus Pareto Distribution via Likelihood Ratio\"   Comm. Statist. Simulation Comput. 38(1), pp. 118-139.","code":""},{"path":"https://irsn.github.io/Renext/reference/Jackson.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Jackson's test of exponentiality — Jackson.test","text":"","code":"set.seed(1234) x <- rGPD(n = 50, loc = 0, scale = 1, shape = 0.1) Jackson.test(x, method = \"num\")$p.value #> [1] 0.534 Jackson.test(x, method = \"asymp\")$p.value #> [1] 0.775 Jackson.test(x, method = \"sim\")$p.value #> [1] 0.539"},{"path":"https://irsn.github.io/Renext/reference/LRExp.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood Ratio statistic for exponential vs. GPD — LRExp","title":"Likelihood Ratio statistic for exponential vs. GPD — LRExp","text":"Likelihood Ratio statistic exponential distribution vs. GPD.","code":""},{"path":"https://irsn.github.io/Renext/reference/LRExp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood Ratio statistic for exponential vs. GPD — LRExp","text":"","code":"LRExp(x, alternative = c(\"lomax\", \"GPD\", \"gpd\", \"maxlo\"))"},{"path":"https://irsn.github.io/Renext/reference/LRExp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Likelihood Ratio statistic for exponential vs. GPD — LRExp","text":"x Numeric vector positive sample values. POT context,     vector excesses threshold.  alternative Character string describing alternative hypothesis","code":""},{"path":"https://irsn.github.io/Renext/reference/LRExp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Likelihood Ratio statistic for exponential vs. GPD — LRExp","text":"LR statistic value.","code":""},{"path":"https://irsn.github.io/Renext/reference/LRExp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Likelihood Ratio statistic for exponential vs. GPD — LRExp","text":"Likelihood-Ratio statistic actually \\(W:=-2 \\log     \\textrm{LR}\\) LR ratio likelihoods     exponential alternative distribution.","code":""},{"path":"https://irsn.github.io/Renext/reference/LRExp.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Likelihood Ratio statistic for exponential vs. GPD — LRExp","text":"alternative \"lomax\" \"maxlo\",   statistic distribution mixed type null   hypothesis exponentiality. mixture distribution   continuous type (positive values) Dirac mass LR =   0. probability mass \\(\\textrm{Pr}\\{\\textrm{LR} = 0\\}\\) can computed using pGreenwood1 function.   precisely, probability mass pGreenwood1(n) Lomax   alternative 1.0 - pGreenwood1(n) maxlo alternative,   n sample size length(x).","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/LRExp.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood Ratio test of exponentiality vs. GPD — LRExp.test","title":"Likelihood Ratio test of exponentiality vs. GPD — LRExp.test","text":"Likelihood Ratio test exponentiality vs. GPD.","code":""},{"path":"https://irsn.github.io/Renext/reference/LRExp.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood Ratio test of exponentiality vs. GPD — LRExp.test","text":"","code":"LRExp.test(x,               alternative = c(\"lomax\", \"GPD\", \"gpd\", \"maxlo\"),               method = c(\"num\", \"sim\", \"asymp\"),               nSamp = 15000,               simW = FALSE)"},{"path":"https://irsn.github.io/Renext/reference/LRExp.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Likelihood Ratio test of exponentiality vs. GPD — LRExp.test","text":"x Numeric vector positive sample values. POT context     vector excesses threshold.  alternative Character string describing alternative distribution.  method Method used compute \\(p\\)-value.  nSamp Number samples simulation, method     \"sim\".  simW Logical. set TRUE method     \"sim\", simulated values returned     element W list.","code":""},{"path":"https://irsn.github.io/Renext/reference/LRExp.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Likelihood Ratio test of exponentiality vs. GPD — LRExp.test","text":"list results elements statistic, p.value   method. elements alternative Character describing alternative hypothesis.  W simW TRUE method \"sim\"     .  vector nSamp simulated values statistic     \\(W := -2 \\log \\textrm{LR}\\).","code":""},{"path":"https://irsn.github.io/Renext/reference/LRExp.test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Likelihood Ratio test of exponentiality vs. GPD — LRExp.test","text":"Lomax maxlo alternatives correspond GPD alternative   positive shape parameter \\(\\xi > 0\\) (Lomax) GPD   \\(\\xi < 0\\) (maxlo). asymptotic distribution Likelihood-ratio statistic   known. GPD alternative, chi-square distribution   one df.  Lomax alternative, distribution   product \\(BC\\) \\(B\\) \\(C\\) two independent random   variables following Bernoulli distribution probability   parameter \\(p = 0.5\\) chi-square distribution one df.  method \"num\", numerical     approximation distribution used. method     unlike used Kozubowski et al., different     approximation used. However, x length     \\(n > 500\\), method turned \"asymp\". method \"sim\", nSamp samples     exponential distribution size x drawn     LR statistic computed sample. \\(p\\)-value     simply estimated probability simulated LR greater     observed LR. Finally method \"asymp\", asymptotic     distribution used.","code":""},{"path":"https://irsn.github.io/Renext/reference/LRExp.test.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Likelihood Ratio test of exponentiality vs. GPD — LRExp.test","text":"Lomax alternative, distribution test   statistic mixed type: can take positive value   well value \\(0\\) positive probability mass.   probability mass probability ML estimate GPD   shape parameter negative, good approximation   provided pGreenwood1 function. Note   probability converges limit \\(0.5\\) slowly,   suggests asymptotic distribution provides poor results   medium sample sizes, say \\(< 100\\). Similarly maxlo alternative, distribution test   statistic mixed type: can take positive value   well value \\(0\\) positive probability mass   approximately given 1 -pGreenwood1(n) \\(n\\)   sample size.","code":""},{"path":"https://irsn.github.io/Renext/reference/LRExp.test.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Likelihood Ratio test of exponentiality vs. GPD — LRExp.test","text":"Yves Deville","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/LRExp.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Likelihood Ratio test of exponentiality vs. GPD — LRExp.test","text":"T.J. Kozubowski, . K. Panorska, F. Qeadan, . Gershunov   D. Rominger (2009)   \"Testing Exponentiality Versus Pareto Distribution via Likelihood Ratio\"   Comm. Statist. Simulation Comput. 38(1),   pp. 118-139. approximation method used described Renext     Computing Details report.","code":""},{"path":"https://irsn.github.io/Renext/reference/LRExp.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Likelihood Ratio test of exponentiality vs. GPD — LRExp.test","text":"","code":"set.seed(1234) x <- rGPD(n = 50, loc = 0, scale = 1, shape = 0.1) LRExp.test(x, method = \"num\")$p.value #> [1] 0.403011 LRExp.test(x, method = \"asymp\")$p.value #> [1] 0.5 if (FALSE) { # \\dontrun{ ## requires much time LRExp.test(x, method = \"sim\")$p.value } # }"},{"path":"https://irsn.github.io/Renext/reference/LRGumbel.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood Ratio statistic for Gumbel vs. GEV — LRGumbel","title":"Likelihood Ratio statistic for Gumbel vs. GEV — LRGumbel","text":"Likelihood Ratio statistic Gumbel distribution vs. GEV.","code":""},{"path":"https://irsn.github.io/Renext/reference/LRGumbel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood Ratio statistic for Gumbel vs. GEV — LRGumbel","text":"","code":"LRGumbel(x, alternative = c(\"frechet\", \"GEV\"))"},{"path":"https://irsn.github.io/Renext/reference/LRGumbel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Likelihood Ratio statistic for Gumbel vs. GEV — LRGumbel","text":"x Numeric vector sample values.  alternative Character string describing alternative.","code":""},{"path":"https://irsn.github.io/Renext/reference/LRGumbel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Likelihood Ratio statistic for Gumbel vs. GEV — LRGumbel","text":"LR statistic value.","code":""},{"path":"https://irsn.github.io/Renext/reference/LRGumbel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Likelihood Ratio statistic for Gumbel vs. GEV — LRGumbel","text":"Likelihood-Ratio statistic actually \\(W:=-2 \\log     \\textrm{LR}\\) LR ratio likelihoods     Gumbel alternative distribution.","code":""},{"path":"https://irsn.github.io/Renext/reference/LRGumbel.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Likelihood Ratio statistic for Gumbel vs. GEV — LRGumbel","text":"alternative \"frechet\", statistic   distribution mixed type null hypothesis Gumbel   distribution.","code":""},{"path":"https://irsn.github.io/Renext/reference/LRGumbel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Likelihood Ratio statistic for Gumbel vs. GEV — LRGumbel","text":"Yves Deville","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/LRGumbel.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Likelihood Ratio test for the Gumbel distribution — LRGumbel.test","title":"Likelihood Ratio test for the Gumbel distribution — LRGumbel.test","text":"Likelihood Ratio test Gumbel vs. GEV","code":""},{"path":"https://irsn.github.io/Renext/reference/LRGumbel.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Likelihood Ratio test for the Gumbel distribution — LRGumbel.test","text":"","code":"LRGumbel.test(x,                  alternative = c(\"frechet\", \"GEV\"),                  method = c(\"num\", \"sim\", \"asymp\"),                  nSamp = 1500,                  simW = FALSE)"},{"path":"https://irsn.github.io/Renext/reference/LRGumbel.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Likelihood Ratio test for the Gumbel distribution — LRGumbel.test","text":"x Numeric vector sample values.  alternative Character string describing alternative distribution.  method Method used compute \\(p\\)-value.  nSamp Number samples simulation, method     \"sim\".  simW Logical. set TRUE method     \"sim\", simulated values returned     element W list.","code":""},{"path":"https://irsn.github.io/Renext/reference/LRGumbel.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Likelihood Ratio test for the Gumbel distribution — LRGumbel.test","text":"list results elements statistic, p.value   method. elements alternative Character describing alternative hypothesis.  W simW TRUE method \"sim\"     .  vector nSamp simulated values statistic     \\(W := -2 \\log \\textrm{LR}\\).","code":""},{"path":"https://irsn.github.io/Renext/reference/LRGumbel.test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Likelihood Ratio test for the Gumbel distribution — LRGumbel.test","text":"asymptotic distribution Likelihood-ratio statistic   known. GEV alternative, chi-square distribution   one df.  Fréchet alternative, distribution   product \\(XY\\) \\(X\\) \\(Y\\) two independent random   variables following Bernoulli distribution probability   parameter \\(p = 0.5\\) chi-square distribution one df.  method \"num\", numerical approximation     distribution used. method \"sim\", nSamp samples     Gumbel distribution size x drawn     LR statistic computed sample. \\(p\\)-value     simply estimated probability simulated LR greater     observed LR. method requires computation time     tow others. Finally method \"asymp\", asymptotic     distribution used.","code":""},{"path":"https://irsn.github.io/Renext/reference/LRGumbel.test.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Likelihood Ratio test for the Gumbel distribution — LRGumbel.test","text":"Fréchet alternative, distribution test statistic   mixed type: can take positive value well   value \\(0\\) positive probability mass. probability mass   probability ML estimate GEV shape parameter   negative. method \"sim\", computation can slow   nSamp simulated values requires two   optimisations. \"asymp\" method provides acceptable   precision \\(n \\geq 50\\), may even used   \\(n \\geq 30\\).","code":""},{"path":"https://irsn.github.io/Renext/reference/LRGumbel.test.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Likelihood Ratio test for the Gumbel distribution — LRGumbel.test","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/LRGumbel.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Likelihood Ratio test for the Gumbel distribution — LRGumbel.test","text":"","code":"set.seed(1234) x <- rgumbel(60) res <- LRGumbel.test(x)"},{"path":"https://irsn.github.io/Renext/reference/Lomax.html","id":null,"dir":"Reference","previous_headings":"","what":"Lomax distribution — Lomax","title":"Lomax distribution — Lomax","text":"Density function, distribution function, quantile function   random generation Lomax distribution.","code":""},{"path":"https://irsn.github.io/Renext/reference/Lomax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lomax distribution — Lomax","text":"","code":"dlomax(x, scale = 1.0, shape = 4.0, log = FALSE)    plomax(q, scale = 1.0, shape = 4.0, lower.tail = TRUE)    qlomax(p, scale = 1.0, shape = 4.0)    rlomax(n, scale = 1.0, shape = 4.0)"},{"path":"https://irsn.github.io/Renext/reference/Lomax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lomax distribution — Lomax","text":"x, q Vector quantiles.  p Vector probabilities.  n Number observations.  scale, shape Scale shape parameters. Vectors length > 1 accepted.  log Logical; TRUE, log density returned.  lower.tail Logical; TRUE (default), probabilities     \\(\\textrm{Pr}[X <= x]\\), otherwise, \\(\\textrm{Pr}[X     > x]\\).","code":""},{"path":"https://irsn.github.io/Renext/reference/Lomax.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lomax distribution — Lomax","text":"Lomax distribution function shape \\(\\alpha > 0\\) scale   \\(\\beta > 0\\) survival function   $$S(y) = \\left[1 + y/\\beta \\right]^{-\\alpha} \\qquad (y > 0)$$   distribution increasing hazard decreasing mean   residual life (MRL). coefficient variation decreases   \\(\\alpha\\), tends \\(1\\) large \\(\\alpha\\).    default value \\(\\alpha=4\\) corresponds \\(\\textrm{CV} =   \\sqrt{2}\\).","code":""},{"path":"https://irsn.github.io/Renext/reference/Lomax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lomax distribution — Lomax","text":"dlomax gives density function, plomax gives   distribution function, qlomax gives quantile function,   rlomax generates random deviates.","code":""},{"path":"https://irsn.github.io/Renext/reference/Lomax.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Lomax distribution — Lomax","text":"distribution sometimes called log-exponential.   special case Generalised Pareto Distribution (GPD) positive   shape \\(\\xi > 0\\), scale \\(\\sigma\\) location \\(\\mu=0\\).    Lomax GPD parameters related according $$\\alpha =   1/\\xi, \\qquad \\beta = \\sigma/\\xi.$$  Lomax distribution can used POT describe   excesses following GPD shape \\(\\xi>0\\) thus decreasing   hazard increasing Mean Residual Life. Note exponential distribution rate \\(\\nu\\)   limit Lomax distribution large scale \\(\\beta\\) large   shape \\(\\alpha\\), constraint shape/scale ratio   \\(\\alpha/\\beta = \\nu\\).","code":""},{"path":"https://irsn.github.io/Renext/reference/Lomax.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Lomax distribution — Lomax","text":"Johnson N. Kotz S. N. Balakrishnan   Continuous Univariate Distributions vol. 1, Wiley 1994. Lomax distribution Wikipedia","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/Lomax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lomax distribution — Lomax","text":"","code":"shape <- 5; scale <- 10 xl <- qlomax(c(0.00, 0.99), scale = scale, shape = shape) x <- seq(from = xl[1], to = xl[2], length.out = 200) f <- dlomax(x, scale = scale, shape = shape) plot(x, f, type = \"l\", main = \"Lomax density\")  F <- plomax(x, scale = scale, shape = shape) plot(x, F, type =\"l\", main =\"Lomax distribution function\")"},{"path":"https://irsn.github.io/Renext/reference/Maxlo.html","id":null,"dir":"Reference","previous_headings":"","what":"'maxlo' distribution — Maxlo","title":"'maxlo' distribution — Maxlo","text":"Density function, distribution function, quantile function   random generation 'maxlo' distribution.","code":""},{"path":"https://irsn.github.io/Renext/reference/Maxlo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"'maxlo' distribution — Maxlo","text":"","code":"dmaxlo(x, scale = 1.0, shape = 4.0, log = FALSE)    pmaxlo(q, scale = 1.0, shape = 4.0, lower.tail = TRUE)    qmaxlo(p, scale = 1.0, shape = 4.0)    rmaxlo(n, scale = 1.0, shape = 4.0)"},{"path":"https://irsn.github.io/Renext/reference/Maxlo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"'maxlo' distribution — Maxlo","text":"x, q Vector quantiles.  p Vector probabilities.  n Number observations.  scale, shape Shift shape parameters. Vectors length     > 1 accepted.  log Logical; TRUE, log density returned.  lower.tail Logical; TRUE (default), probabilities     \\(\\textrm{Pr}[X <= x]\\), otherwise, \\(\\textrm{Pr}[X     > x]\\).","code":""},{"path":"https://irsn.github.io/Renext/reference/Maxlo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"'maxlo' distribution — Maxlo","text":"'maxlo' distribution function shape \\(\\alpha>0\\) scale   \\(\\beta>0\\) special case Generalised Pareto (GPD)   negative shape \\(\\xi < 0\\) location zero.   finite upper endpoint case GPD. name nonstandard   chosen suggest form symmetry respect Lomax   distribution. survival  function   $$S(y) = \\left[1-y/\\beta\\right]^\\alpha \\qquad 0 < y < \\beta$$ distribution coefficient variation smaller \\(1\\).","code":""},{"path":"https://irsn.github.io/Renext/reference/Maxlo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"'maxlo' distribution — Maxlo","text":"dmaxlo gives density function, pmaxlo gives   distribution function, qmaxlo gives quantile function,   rmaxlo generates random deviates.","code":""},{"path":"https://irsn.github.io/Renext/reference/Maxlo.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"'maxlo' distribution — Maxlo","text":"'maxlo' GPD parameters related according $$\\alpha =   -1/\\xi, \\qquad \\beta = -\\sigma/\\xi.$$  \\(\\sigma\\) scale parameter   GPD. Since GPD \\(\\xi > -0.5\\) seem used practice,   distribution used \\(\\alpha > 2\\). distribution can used POT describe bounded excesses   following GPD shape \\(\\xi < 0\\). scale parameter   \\(\\beta\\) represents upper end-point excesses,   implying finite upper end-point \\(u + \\beta\\) levels,   \\(u\\) threshold. can used Renouv   fixed scale parameter, thus allowing control upper   end-point. distribution simply rescaled version beta distribution   also rescaled version Kumaraswamy distribution. name   \"maxlo\" used suggest form symmetry Lomax   distribution.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/Maxlo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"'maxlo' distribution — Maxlo","text":"","code":"xs <- rmaxlo(500, shape = 2.2, scale = 1000) hist(xs, main = \"'maxlo' distribution\"); rug(xs)   xs <- rmaxlo(500, shape = 4, scale = 1000) hist(xs, main = \"'maxlo' distribution\"); rug(xs)   x <- seq(from = -10, to = 1010, by = 2) plot(x = x, y = dmaxlo(x, shape = 4, scale = 1000),      type = \"l\", ylab = \"dens\",      col = \"orangered\", main = \"dmaxlo and dgpd\") abline(h = 0) lines(x = x, y = dgpd(x, shape = -1/4, scale = 250),      type = \"l\",      col = \"SpringGreen3\", lty = \"dashed\")"},{"path":"https://irsn.github.io/Renext/reference/MixExp2.html","id":null,"dir":"Reference","previous_headings":"","what":"Mixture of two exponential distributions — MixExp2","title":"Mixture of two exponential distributions — MixExp2","text":"Probability functions associated mixture   two exponential distributions.","code":""},{"path":"https://irsn.github.io/Renext/reference/MixExp2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mixture of two exponential distributions — MixExp2","text":"","code":"dmixexp2(x, prob1,             rate1 = 1.0, rate2 = rate1 + delta, delta,             log = FALSE)    pmixexp2(q, prob1,             rate1 = 1.0, rate2 = rate1 + delta, delta,             log = FALSE)    qmixexp2(p, prob1,             rate1 = 1.0, rate2 = rate1 + delta, delta)    rmixexp2(n, prob1,             rate1 = 1.0, rate2 = rate1 + delta, delta)    hmixexp2(x, prob1,             rate1 = 1.0, rate2 = rate1 + delta, delta)    Hmixexp2(x, prob1,             rate1 = 1.0, rate2 = rate1 + delta, delta)"},{"path":"https://irsn.github.io/Renext/reference/MixExp2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mixture of two exponential distributions — MixExp2","text":"x, q Vector quantiles.  p Vector probabilities.  n Number observations.  log Logical; TRUE, log density returned.  prob1 Probability weight \"number 1\" exponential density.  rate1 Rate (inverse expectation) \"number 1\" exponential density.  rate2 Rate (inverse expectation) \"number 2\" exponential     density. cases > rate1. See Details.  delta Alternative parameterisation delta = rate2 - rate1.","code":""},{"path":"https://irsn.github.io/Renext/reference/MixExp2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mixture of two exponential distributions — MixExp2","text":"dmiwexp2, pmiwexp2, qmiwexp2, evaluates   density, distribution quantile functions.  dmixexp2   generates vector n random draws distribution.   hmixep2 gives hazard rate Hmixexp2 gives cumulative   hazard.","code":""},{"path":"https://irsn.github.io/Renext/reference/MixExp2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mixture of two exponential distributions — MixExp2","text":"density function mixture two exponential densities   $$     f(x) = \\alpha_1 \\lambda_1 \\, e^{-\\lambda_1 x} + (1-\\alpha_1)     \\lambda_2 \\, e^{-\\lambda_2x} \\qquad x > 0   $$   \\(\\alpha_1\\) probability given   prob1   \\(\\lambda_1\\) \\(\\lambda_2\\)   two rates given rate1 rate2. 'naive' identifiability constraint $$\\lambda_1 < \\lambda_2$$   .e.  rate1 < rate2, corresponding simple constraint   delta > 0.  parameter delta can given instead   rate2. mixture distribution decreasing hazard, increasing Mean   Residual Life (MRL) thicker tail usual   exponential. However hazard, MRL finite non zero limit   distribution behaves exponential large return   levels/periods. quantile function available closed form computed   using dedicated numerical method.","code":""},{"path":"https://irsn.github.io/Renext/reference/MixExp2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mixture of two exponential distributions — MixExp2","text":"","code":"rate1 <- 1.0 rate2 <- 4.0 prob1 <- 0.8 qs <- qmixexp2(p = c(0.99, 0.999), prob1 = prob1,                rate1 = rate1, rate2 = rate2)  x <- seq(from = 0, to = qs[2], length.out = 200) F <- pmixexp2(x, prob1 = prob1, rate1 = rate1, rate2 = rate2) plot(x, F, type = \"l\", col = \"orangered\", lwd = 2,      main = \"Mixexp2 distribution and quantile for p = 0.99\") abline(v = qs[1]) abline(h = 0.99)"},{"path":"https://irsn.github.io/Renext/reference/NBlevy.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative Binomial Levy process — NBlevy","title":"Negative Binomial Levy process — NBlevy","text":"Negative Binomial Lévy process estimation partial observations (counts)","code":""},{"path":"https://irsn.github.io/Renext/reference/NBlevy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative Binomial Levy process — NBlevy","text":"","code":"NBlevy(N,        gamma = NA,        prob = NA,        w = rep(1, length(N)),        sum.w = sum(w),        interval = c(0.01, 1000),        optim = TRUE,        plot = FALSE, ...)"},{"path":"https://irsn.github.io/Renext/reference/NBlevy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative Binomial Levy process — NBlevy","text":"N Vector counts, one count time period.  gamma gamma parameter known (IMPLEMENTED YET).  prob prob parameter known (IMPLEMENTED YET).  w Vector time length (durations).  sum.w IMPLEMENTED YET. effective duration. sum.w     strictly inferior sum(w), understood     missing periods occur within counts period. can taken     account suitable algorithm (Expectation Maximisation,     etc.)  interval Interval giving min max values gamma.  optim TRUE one-dimensional optimisation used. Else zero     derivative (concentrated) log-likelihood searched     .  plot plot drawn? May removed future.  ... Arguments passed plot.","code":""},{"path":"https://irsn.github.io/Renext/reference/NBlevy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Negative Binomial Levy process — NBlevy","text":"vector \\(\\mathbf{N}\\) contains counts events occurring   non-overlapping time periods lengths given   \\(\\mathbf{w}\\).  NB Lévy process   assumptions, observed counts (.e. elements   \\(\\mathbf{N}\\)) independent random variables, following   negative binomial distribution.  size parameter \\(r_k\\)   \\(N_k\\) \\(r_k = \\gamma w_k\\)   probability parameter \\(p\\) prob.  vector   \\(\\boldsymbol{\\mu}\\) expected counts elements   $$\\mu_k=\\mathrm{E}(N_k)=\\frac{1-p}{p} \\,\\gamma \\,w_k.$$ parameters \\(\\gamma\\) \\(p \\:(\\code{prob})\\)   estimated Maximum Likelihood using likelihood concentrated   respect prob parameter.","code":""},{"path":"https://irsn.github.io/Renext/reference/NBlevy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Negative Binomial Levy process — NBlevy","text":"list results estimate Parameter estimates.  sd Standard deviation estimate.  score Score vector estimated parameter vector.  info Observed information matrix.  cov Covariance matrix (approx.).","code":""},{"path":"https://irsn.github.io/Renext/reference/NBlevy.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Negative Binomial Levy process — NBlevy","text":"Kozubowski T.J. Podgórsky K. (2009)   \"Distributional properties negative binomial Lévy process\".   Probability Mathematical Statistics 29, pp. 43-71.   Lund University Publications.","code":""},{"path":"https://irsn.github.io/Renext/reference/NBlevy.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Negative Binomial Levy process — NBlevy","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/NBlevy.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Negative Binomial Levy process — NBlevy","text":"Negative Binomial Lévy process alternative   Homogeneous Poisson Process counts subject   overdispersion. NB process, counts share index   dispersion (variance/expectation ratio), namely 1/prob.   prob close 1, counts nearly Poisson-distributed.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/NBlevy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Negative Binomial Levy process — NBlevy","text":"","code":"## known parameters nint <- 100 gam <- 6; prob <- 0.20  ## draw random w, then the counts N w <- rgamma(nint, shape = 3, scale = 1/5) N <- rnbinom(nint, size = w * gam, prob = prob) mu <- w * gam * (1 - prob) / prob Res <- NBlevy(N = N, w = w)  ## Use example data 'Brest' ## compute the number of event and duration of the non-skipped periods gof1 <- gof.date(date = Brest$OTdata$date,                  skip = Brest$OTmissing,                  start = Brest$OTinfo$start,                  end = Brest$OTinfo$end,                  plot.type = \"omit\")  ns1 <- gof1$noskip ## fit the NBlevy fit1 <- NBlevy(N = ns1$nevt, w = ns1$duration)  ## use a higher threshold OT2 <- subset(Brest$OTdata, Surge > 50) gof2 <- gof.date(date = OT2$date,                  skip = Brest$OTmissing,                  start = Brest$OTinfo$start,                  end = Brest$OTinfo$end,                  plot.type = \"omit\")  ns2 <- gof2$noskip ## the NBlevy prob is now closer to 1 fit2 <- NBlevy(N = ns2$nevt, w = ns2$duration)  c(fit1$prob, fit2$prob) #> [1] 0.3203404 0.5162115"},{"path":"https://irsn.github.io/Renext/reference/OT2MAX.html","id":null,"dir":"Reference","previous_headings":"","what":"Temporal aggregation of a Marked Process — OT2MAX","title":"Temporal aggregation of a Marked Process — OT2MAX","text":"Temporal aggregation Marked Process, leading block maxima   \\(r\\)-largest observations.","code":""},{"path":"https://irsn.github.io/Renext/reference/OT2MAX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Temporal aggregation of a Marked Process — OT2MAX","text":"","code":"OT2MAX(OTdata,          OTmissing = NULL,          start = NULL,          end = NULL,          MAX.r = 1L,          blockDuration = \"year\",          monthGapStat = TRUE,          maxMissingFrac = 0.05,          dataFrames = FALSE,          infMAX = FALSE,          plot = TRUE,          plotType = c(\"max\", \"gaps\"),          jitterSeed = 123,          trace = 0L,          ...)"},{"path":"https://irsn.github.io/Renext/reference/OT2MAX.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Temporal aggregation of a Marked Process — OT2MAX","text":"OTdata Data frame containing POSIXct     column date marks variable.  OTmissing Optional data frame columns start end     (coerced POSIXct) giving beginning end     gaps.  start object coerced POSIXct indicating beginning     reliable/usable information. Unless beginning block     (1-st January years), 1-st block begin     start order use qualified information.  end object indicating end reliable/usable     information. Unless end block (1-st January     years), last block end end order     use qualified information.  MAX.r Target number observations blocks. Can length     one (number observations blocks) length equal     number blocks, values blocks     order. cases, target number may impossible     reach smaller number events block.     infMAX TRUE, target number observations     reached filling needed -Inf values.     rationale non-existing event assumed     arbitrarily small mark.  blockDuration Duration blocks. Can \"year\" now.  monthGapStat Logical. Setting TRUE compute statistics     concerning gaps return show plot.  maxMissingFrac Maximal fraction block duration (0 1) can     missing without leading NA aggregated value.  dataFrames TRUE, result contain data frames similar     found object class \"Rendata\".     FALSE result contain list vector     objects, similar used inputs Renouv     function names MAX.data     MAX.effDuration. Note however, -Inf values can     found objects infMAX TRUE. infMAX FALSE, target number values blocks generally     reached, total number events block can     lower target number. , target number value revised     number found values block. TRUE,     target number values reached filling values     -Inf datetimes (POSIXct) NAs. plot TRUE simple plot shown.  plotType Character controlling plot. \"max\", block maxima     shown. plotType = \"gap\", daily monthly gap     rates shown. possible suitable information     concerning gaps provided OTmissing. plot shows     probability given day year falls gap, well     monthly gap rates. often one wants gap rate     show seasonal behaviour. Note gap rates month-year     combinations shown grey segments jitterizing since     values 0 1 may observed several     years. alternative way using monthGapTS     multivariate time series returned function, see     Examples.  jitterSeed Random seed jittering. Used plot     TRUE, plotType \"gap\" suitable     information provided OTmissing.  trace Integer level verbosity.  ... arguments passed plot.","code":""},{"path":"https://irsn.github.io/Renext/reference/OT2MAX.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Temporal aggregation of a Marked Process — OT2MAX","text":"list, content depends value   dataFrames. value TRUE,   following elements returned.  MAXdata data frame largest values block one row     observation. largest values given columns     names equal OTdata data     frame.  MAXinfo data frame describing blocks, one row     block. two (POSIXct) columns \"start\"     \"end\" provide beginning end     block.  numeric column duration gives     effective duration (year) within block.  probMissing vector values corresponding days block     (year). value estimation probability     day falls gap. dataFrames FALSE, list still     contains probMissing , well     lists used Renouv.  effDuration, r Vectors containing effective duration (      years) number value blocks.  data List maxima \\(r\\)-largest values blocks.  monthGapStat, monthGapTS Summary information concerning gaps, monthGapStat     TRUE relevant information provide via     OTmissing formal. element monthGapTS     multivariate time series yearly observations one series     (column) 12 months. series contains missing     fraction month considered year, ranging     0.0 (gap) 1.0 (full gap). object can     dealt standard methods time-series, plot     method require select reduced number columns first,     see Examples.","code":""},{"path":"https://irsn.github.io/Renext/reference/OT2MAX.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Temporal aggregation of a Marked Process — OT2MAX","text":"data frame given OTdata contains events (  arrivals) given date column, well one mark   column. Depending argument MAX.r, maxima   \\(r\\)-largest observations marks computed time   block. known gaps exist data given   OTmissing, block total duration gaps   large omitted.","code":""},{"path":"https://irsn.github.io/Renext/reference/OT2MAX.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Temporal aggregation of a Marked Process — OT2MAX","text":"Remind even maxMissingFrac set maximum   value 1.0, can still blocks data. result   intended used Renouv function, formal   dataFrames FALSE; elements data   effDuration can passed MAX.data   MAX.effDuration. time infMAX also   set FALSE since -Inf values yet allowed   \\(r\\)-largest values.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/OTjitter.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a small amount of noise to a numeric vector — OTjitter","title":"Add a small amount of noise to a numeric vector — OTjitter","text":"Add small amount noise numeric vector keeping   values given threshold.","code":""},{"path":"https://irsn.github.io/Renext/reference/OTjitter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a small amount of noise to a numeric vector — OTjitter","text":"","code":"OTjitter(x, threshold = NULL)"},{"path":"https://irsn.github.io/Renext/reference/OTjitter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a small amount of noise to a numeric vector — OTjitter","text":"x numeric vector jitter added. threshold threshold elements     modified vector must stay.","code":""},{"path":"https://irsn.github.io/Renext/reference/OTjitter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a small amount of noise to a numeric vector — OTjitter","text":"vector length nearly values   x. jitter, small amount noise   added value x. noise level adjusted   every noisy value remains specified threshold.   value close threshold, small amount   negative noise can added.","code":""},{"path":"https://irsn.github.io/Renext/reference/OTjitter.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Add a small amount of noise to a numeric vector — OTjitter","text":"aim function remove possible ties experimental OT   data. Ties cause problems warnings goodness--fit tests   Kolmogorov-Smirnov.","code":""},{"path":"https://irsn.github.io/Renext/reference/OTjitter.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Add a small amount of noise to a numeric vector — OTjitter","text":"Yves Deville","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/OTjitter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a small amount of noise to a numeric vector — OTjitter","text":"","code":"## Garonne data (heavily rounded) x <- Garonne$OTdata$Flow min(x)  #> [1] 2530 xmod <- OTjitter(x, threshold = 2500) length(x) #> [1] 151 nlevels(as.factor(x)) #> [1] 49 nlevels(as.factor(xmod)) #> [1] 151 max(abs(x-xmod)) #> [1] 5.545804"},{"path":"https://irsn.github.io/Renext/reference/PPplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnostic plots for Renouv objects — PPplot","title":"Diagnostic plots for Renouv objects — PPplot","text":"Diagnostic plots Renouv objects.","code":""},{"path":"https://irsn.github.io/Renext/reference/PPplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnostic plots for Renouv objects — PPplot","text":"","code":"PPplot(x, ...)  QQplot(x, ...)  # S3 method for class 'Renouv' PPplot(x,        showHist = FALSE,        legend = FALSE,        par = NULL,        posOptions = NULL,        ...)  # S3 method for class 'Renouv' QQplot(x,        showHist = FALSE,        legend = FALSE,        par = NULL,        posOptions = NULL,        ...)"},{"path":"https://irsn.github.io/Renext/reference/PPplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagnostic plots for Renouv objects — PPplot","text":"x Object containing fitted model.  legend legend shown identify historical blocks?     IMPLEMENTED YET.  par list graphical parameters returned RLpar     used control appearance points. IMPLEMENTED YET.  posOptions pair list passed list formals SandT     function computing plotting positions.  showHist TRUE, historical information contained object     x () shown using special plotting positions     computed SandT.  ... arguments passed plot.","code":""},{"path":"https://irsn.github.io/Renext/reference/PPplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diagnostic plots for Renouv objects — PPplot","text":"value returned.","code":""},{"path":"https://irsn.github.io/Renext/reference/PPplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Diagnostic plots for Renouv objects — PPplot","text":"Yves Deville","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/RLlegend.html","id":null,"dir":"Reference","previous_headings":"","what":"Legend management for return level plots — RLlegend","title":"Legend management for return level plots — RLlegend","text":"Legend management return level plots produced plot   lines method \"Renouv\" class.","code":""},{"path":"https://irsn.github.io/Renext/reference/RLlegend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Legend management for return level plots — RLlegend","text":"","code":"RLlegend.ini(x = \"topleft\", bty = \"n\", ...)     RLlegend.show()"},{"path":"https://irsn.github.io/Renext/reference/RLlegend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Legend management for return level plots — RLlegend","text":"x possible value x argument legend.     usually character giving position e.g,     \"topleft\" \"bottomleft\". See     legend function help.  bty legend. default value \"n\" differs     default value legend.   ... arguments kept list passed later     legend. arguments chosen among     legend modifying global legend appearance (e.g.,     bg) among modifying legend content     (e.g. col pt.bg, legend, ...) since content     built semi-automatically.","code":""},{"path":"https://irsn.github.io/Renext/reference/RLlegend.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Legend management for return level plots — RLlegend","text":"function used conjunction   plot.Renouv lines.Renouv methods.   allows construction legend semi-automatic fashion, using   value par argument plot   lines methods specify legend construction. call plot.Renouv   lines.Renouv changes content list variable   named .RLlegend special environment bound   package. list re-created RLlegend.ini called,   used later draw legend active device   RLlegend.show called.  two calls,   plot lines methods used arg   legend set FALSE.","code":""},{"path":"https://irsn.github.io/Renext/reference/RLlegend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Legend management for return level plots — RLlegend","text":"RLlegend.ini returns copy variable set. RLlegend.show returns nothing.","code":""},{"path":"https://irsn.github.io/Renext/reference/RLlegend.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Legend management for return level plots — RLlegend","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/RLlegend.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Legend management for return level plots — RLlegend","text":"size symbols (.e, plotting characters) can set   using RLpar function par   argument methods plot.Renouv   lines.Renouv. However can changed   legend.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/RLlegend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Legend management for return level plots — RLlegend","text":"","code":"## use Garonne data xG <- Garonne$OTdata$Flow ## use special \"exponential\" distribution  fit1 <- Renouv(x = xG, threshold = 2500, distname.y = \"exponential\",                effDuration = 65, plot = FALSE) #> Special inference for the exponential case without history #> Warning: uncertainty on the rate not taken into account yet  in the exponential with no history case  ## use 'exp' in black box fashion, hence with delta method fit2 <- Renouv(x = xG, , threshold = 2500, distname.y = \"exp\",                effDuration = 65, start.par.y = c(rate = 1), plot = FALSE) #> Warning: warning: distribution not in target list. Still EXPERIMENTAL RLlegend.ini() ## initialise legend ## sample points only plot(fit1, main = \"Two types of confidence lims\",      show = list(OT = TRUE, quant = FALSE, conf = FALSE),      label = \"\",      legend = FALSE) ## quant and confidence lims lines(fit1,      show = list(OT = FALSE, quant = TRUE, conf = TRUE),      label = \"exact\",      legend = FALSE) ## quant (overplot) and confidence lims lines(fit2,       show = list(OT = FALSE, quant = TRUE, conf = TRUE),       par = RLpar(quant.lty = 2, quant.col = \"SpringGreen2\",         conf.conf1.col = \"orangered\", conf.conf1.lwd = 3,         conf.conf2.col = \"orangered\", conf.conf2.lwd = 3),       label = \"delta\",       legend = FALSE) RLlegend.show() ## now draw legend"},{"path":"https://irsn.github.io/Renext/reference/RLpar.html","id":null,"dir":"Reference","previous_headings":"","what":"Graphical parameters for Return Level plots — RLpar","title":"Graphical parameters for Return Level plots — RLpar","text":"Build hierarchical list graphical parameters can   used methods plot lines class \"Renouv\".","code":""},{"path":"https://irsn.github.io/Renext/reference/RLpar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graphical parameters for Return Level plots — RLpar","text":"","code":"RLpar(mono = TRUE,       trace = 0L,       ...)"},{"path":"https://irsn.github.io/Renext/reference/RLpar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graphical parameters for Return Level plots — RLpar","text":"mono Logical. default TRUE plots possibly using colors     can printed grayscale.  value FALSE,     curves symbols appear distinctly color device     necessarily printed grayscale.  trace Integer level verbosity. default value 0 prints     nothing.  ... Arguments names corresponding hierarchical structure     graphical parameter changed.","code":""},{"path":"https://irsn.github.io/Renext/reference/RLpar.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Graphical parameters for Return Level plots — RLpar","text":"formals correspondence list hierarchy using   column \".\" separator define tree. Thus   quant.col formal argument can used specify color   quantile (return level) curve, conf.conf1.col   used first confidence limits (lower upper).","code":""},{"path":"https://irsn.github.io/Renext/reference/RLpar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graphical parameters for Return Level plots — RLpar","text":"list containing lists hierarchical fashion. root level,   element concerns single curve (e.g. return level curve),   single scatterplot (e.g. sample used POT), group curves   (e.g. confidence limits) group scatterplots (e.g.   collection MAX historical blocks). single elements   (curve scatterplot) list contains graphical elements   values given plot lines   calls. group elements, element list lists.","code":""},{"path":"https://irsn.github.io/Renext/reference/RLpar.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Graphical parameters for Return Level plots — RLpar","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/RLpar.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Graphical parameters for Return Level plots — RLpar","text":"list default parameter values built first using model   suitable mono value. values provided   user overwrite existing. Thus curve can coloured even   mono = TRUE, colour specification given   corresponding element. parameter name used several times RLpar,   warning thrown.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/RLpar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Graphical parameters for Return Level plots — RLpar","text":"","code":"## change color for quantile curve and type for confidence ## limits #1 (with largest confidence level). newRLpar <- RLpar(quant.col = \"red\", conf.conf1.lty = \"dashed\") newRLpar$quant #> $type #> [1] \"l\" #>  #> $col #> [1] \"red\" #>  #> $lwd #> [1] 2 #>  #> $lty #> [1] \"solid\" #>   ## show the names of all possible editable parameters names(unlist(RLpar())) #>   [1] \"quant.type\"      \"quant.col\"       \"quant.lwd\"       \"quant.lty\"       #>   [5] \"OT.col\"          \"OT.pch\"          \"OT.cex\"          \"OT.bg\"           #>   [9] \"conf.conf1.lty\"  \"conf.conf1.col\"  \"conf.conf1.lwd\"  \"conf.conf2.lty\"  #>  [13] \"conf.conf2.col\"  \"conf.conf2.lwd\"  \"conf.conf3.lty\"  \"conf.conf3.col\"  #>  [17] \"conf.conf3.lwd\"  \"conf.conf4.lty\"  \"conf.conf4.col\"  \"conf.conf4.lwd\"  #>  [21] \"conf.conf5.lty\"  \"conf.conf5.col\"  \"conf.conf5.lwd\"  \"conf.conf6.lty\"  #>  [25] \"conf.conf6.col\"  \"conf.conf6.lwd\"  \"MAX.block1.col\"  \"MAX.block1.pch\"  #>  [29] \"MAX.block1.cex\"  \"MAX.block1.lwd\"  \"MAX.block1.bg\"   \"MAX.block2.col\"  #>  [33] \"MAX.block2.pch\"  \"MAX.block2.cex\"  \"MAX.block2.lwd\"  \"MAX.block2.bg\"   #>  [37] \"MAX.block3.col\"  \"MAX.block3.pch\"  \"MAX.block3.cex\"  \"MAX.block3.lwd\"  #>  [41] \"MAX.block3.bg\"   \"MAX.block4.col\"  \"MAX.block4.pch\"  \"MAX.block4.cex\"  #>  [45] \"MAX.block4.lwd\"  \"MAX.block4.bg\"   \"MAX.block5.col\"  \"MAX.block5.pch\"  #>  [49] \"MAX.block5.cex\"  \"MAX.block5.lwd\"  \"MAX.block5.bg\"   \"MAX.block6.col\"  #>  [53] \"MAX.block6.pch\"  \"MAX.block6.cex\"  \"MAX.block6.lwd\"  \"MAX.block6.bg\"   #>  [57] \"MAX.block7.col\"  \"MAX.block7.pch\"  \"MAX.block7.cex\"  \"MAX.block7.lwd\"  #>  [61] \"MAX.block7.bg\"   \"MAX.block8.col\"  \"MAX.block8.pch\"  \"MAX.block8.cex\"  #>  [65] \"MAX.block8.lwd\"  \"MAX.block8.bg\"   \"MAX.block9.col\"  \"MAX.block9.pch\"  #>  [69] \"MAX.block9.cex\"  \"MAX.block9.lwd\"  \"MAX.block9.bg\"   \"MAX.block10.col\" #>  [73] \"MAX.block10.pch\" \"MAX.block10.cex\" \"MAX.block10.lwd\" \"MAX.block10.bg\"  #>  [77] \"OTS.block1.col\"  \"OTS.block1.pch\"  \"OTS.block1.cex\"  \"OTS.block1.lwd\"  #>  [81] \"OTS.block1.bg\"   \"OTS.block2.col\"  \"OTS.block2.pch\"  \"OTS.block2.cex\"  #>  [85] \"OTS.block2.lwd\"  \"OTS.block2.bg\"   \"OTS.block3.col\"  \"OTS.block3.pch\"  #>  [89] \"OTS.block3.cex\"  \"OTS.block3.lwd\"  \"OTS.block3.bg\"   \"OTS.block4.col\"  #>  [93] \"OTS.block4.pch\"  \"OTS.block4.cex\"  \"OTS.block4.lwd\"  \"OTS.block4.bg\"   #>  [97] \"OTS.block5.col\"  \"OTS.block5.pch\"  \"OTS.block5.cex\"  \"OTS.block5.lwd\"  #> [101] \"OTS.block5.bg\"   \"OTS.block6.col\"  \"OTS.block6.pch\"  \"OTS.block6.cex\"  #> [105] \"OTS.block6.lwd\"  \"OTS.block6.bg\"   \"OTS.block7.col\"  \"OTS.block7.pch\"  #> [109] \"OTS.block7.cex\"  \"OTS.block7.lwd\"  \"OTS.block7.bg\"   \"OTS.block8.col\"  #> [113] \"OTS.block8.pch\"  \"OTS.block8.cex\"  \"OTS.block8.lwd\"  \"OTS.block8.bg\"   #> [117] \"OTS.block9.col\"  \"OTS.block9.pch\"  \"OTS.block9.cex\"  \"OTS.block9.lwd\"  #> [121] \"OTS.block9.bg\"   \"OTS.block10.col\" \"OTS.block10.pch\" \"OTS.block10.cex\" #> [125] \"OTS.block10.lwd\" \"OTS.block10.bg\""},{"path":"https://irsn.github.io/Renext/reference/RLplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Return level plot — RLplot","title":"Return level plot — RLplot","text":"Return level plot \"Renouvellement\" data.","code":""},{"path":"https://irsn.github.io/Renext/reference/RLplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return level plot — RLplot","text":"","code":"RLplot(data,        x = NULL,        duration = 1,        lambda,        conf.pct = 95,        mono = TRUE,        mark.rl = 100,        mark.labels = mark.rl,        mark.col = NULL,        main = NULL,        ylim = NULL,           ...)"},{"path":"https://irsn.github.io/Renext/reference/RLplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return level plot — RLplot","text":"data data.frame object column named quant.  x Optional vector observed levels.  duration (effective) duration corresponding x     argument used.  lambda Rate, unit inverse used duration, e.g.     inverse years duration years.  conf.pct Vector (character integer) giving confidence levels. See     Details .  mono TRUE colours replaced black.  mark.rl Return levels marked plot.  mark.labels Labels shown positions mark.rl.  mark.col Colours marked levels.  main Main title return level plot (defaults empty title).  ylim Limits y axis (defaults values computed data).  ... args passed plot. removed     future versions.","code":""},{"path":"https://irsn.github.io/Renext/reference/RLplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return level plot — RLplot","text":"Percents match column names data.frame follows.   upper lower limits expected U.95 L.95   respectively. 70% confidence percentage, columns   names \"U.70\" \"L.70\". plot comparable return level described Coles'book   related packages, return level log-scale   Coles uses loglog-scale. line corresponds one parameter   exponential distribution, Coles'plot corresponds Gumbel,   however two plots differ small return periods.  plot   identical expplot x y scales changed:   axis tick-marks differ. convexity scatter plot   therefore opposed two plots.","code":""},{"path":"https://irsn.github.io/Renext/reference/RLplot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Return level plot — RLplot","text":"Coles S. (2001)  Introduction Statistical Modelling    Extremes Values, Springer.","code":""},{"path":"https://irsn.github.io/Renext/reference/RLplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return level plot — RLplot","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/RLplot.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Return level plot — RLplot","text":"Confidence limits correspond two-sided symmetrical   intervals. means (random) confidence interval may   true unknown value   probabilities. E.g. probability unknown quantile falls   U.95 2.5%. two bounds yet generally   symmetrical respect quant; behaviour follows   use \"delta\" method approximate intervals. possible add graphical material (points, lines) plot   using log(returnlev) quantile coordinates. See   Examples section.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/RLplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return level plot — RLplot","text":"","code":"## Typical probability vector prob <- c(0.0001,   seq(from = 0.01, to = 0.09, by = 0.01),   seq(from = 0.10, to = 0.80, by = 0.10),   seq(from = 0.85, to = 0.99, by = 0.01),   0.995, 0.996, 0.997, 0.998, 0.999, 0.9995)  ## Model parameters rate = #evts by year, over nyear lambda <- 4 nyear <- 30 theta.x <- 4  ## draw points n.x <- rpois(1, lambda = lambda*nyear) x <- rexp(n.x, rate = 1/theta.x)  ## ML estimation (exponential) lambda.hat <- n.x / nyear theta.x.hat <- mean(x)    ## Compute bounds (here exact) alpha <- 0.05  quant <- qexp(p = prob, rate = 1/theta.x.hat)   theta.L <- 2*n.x*theta.x.hat / qchisq(1 - alpha/2, df = 2*n.x) theta.U <- 2*n.x*theta.x.hat / qchisq(alpha/2, df = 2*n.x)  L.95 <- qexp(p = prob, rate = 1/theta.L)  U.95 <- qexp(p = prob, rate = 1/theta.U)   ## store in data.frame object data <- data.frame(prob = prob, quant = quant, L.95 = L.95, U.95 = U.95)  RLplot(data = data, x = x, lambda = lambda.hat,        duration = nyear,        main = \"Poisson-exponential return levels\")   RLplot(data = data, x = x, lambda = lambda.hat, duration = nyear,        mark.rl = 10, mark.labels = \"10 ans\", mono = FALSE, mark.col = \"SeaGreen\",        main = \"Poisson-exponential return levels\")  points(x = log(50), y = 25, pch = 18, cex = 1.4, col = \"purple\")  text(x = log(50), y = 25, col =\"purple\", pos = 4, labels = \"special event\")"},{"path":"https://irsn.github.io/Renext/reference/Ren2gev.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate a vector of coefficients from a Renewal-POT model with Pareto excesses into a vector of GEV parameters — Ren2gev","title":"Translate a vector of coefficients from a Renewal-POT model with Pareto excesses into a vector of GEV parameters — Ren2gev","text":"Translate vector coefficients Renewal-POT model   Pareto excesses vector GEV parameters.","code":""},{"path":"https://irsn.github.io/Renext/reference/Ren2gev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate a vector of coefficients from a Renewal-POT model with Pareto excesses into a vector of GEV parameters — Ren2gev","text":"","code":"Ren2gev(object,         threshold = NULL,         w = 1,         distname.y = c(\"gpd\", \"GPD\", \"lomax\", \"maxlo\"),         jacobian = (length(w) == 1L),         vcovRen = NULL)"},{"path":"https://irsn.github.io/Renext/reference/Ren2gev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate a vector of coefficients from a Renewal-POT model with Pareto excesses into a vector of GEV parameters — Ren2gev","text":"object named vector parameters object class \"Renouv\".     first case, names vector element must conform     distribution given distname.y.  threshold threshold associated renewal-POT model.  must     provided non NA finite numeric value. location     parameter GPD.  w duration blocks.  distname.y distribution excesses renewal-POT model.      normally \"gpd\" can \"lomax\"     \"maxlo\" distribution provided GEV parameters given     object specify positive negative shape     respectively.  jacobian Logical. TRUE, jacobian matrix transformation     computed. possible time w     length 1.  vcovRen covariance matrix \"Ren\" vector parameters.      object class \"Renouv\", covariance matrix     embedded object used.","code":""},{"path":"https://irsn.github.io/Renext/reference/Ren2gev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translate a vector of coefficients from a Renewal-POT model with Pareto excesses into a vector of GEV parameters — Ren2gev","text":"Given Renewal-POT parameters, possible compute   distribution block maxima. distribution Pareto   family, marginal distribution maxima GEV. location   scale GEV parameters depend block duration \\(w\\),   GEV shape parameter identical GPD input   distribution.","code":""},{"path":"https://irsn.github.io/Renext/reference/Ren2gev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate a vector of coefficients from a Renewal-POT model with Pareto excesses into a vector of GEV parameters — Ren2gev","text":"w length 1, named vector GEV parameters   one estimated fgev. vector   elements named \"loc\", \"scale\" \"shape\". w length > 1, matrix length(w)   rows, representing vector GEV parameters . returned object attributes named \"threshold\".    \"distname.y\" recall built.","code":""},{"path":"https://irsn.github.io/Renext/reference/Ren2gev.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Translate a vector of coefficients from a Renewal-POT model with Pareto excesses into a vector of GEV parameters — Ren2gev","text":"Yves Deville","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/Ren2gev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate a vector of coefficients from a Renewal-POT model with Pareto excesses into a vector of GEV parameters — Ren2gev","text":"","code":"fit1 <- Renouv(Garonne, distname.y = \"maxlo\")  Ren2gev(fit1) #>          loc        scale        shape  #> 3583.3875802 1167.9168446   -0.1630533  #> attr(,\"jacobian\") #>          lambda     scale         shape #> loc   492.32939 0.1313805 -164.50127607 #> scale -80.27593 0.1416313 -163.61021404 #> shape   0.00000 0.0000000    0.02658638 #> attr(,\"vcov\") #>                loc       scale        shape #> loc   15392.775904 4185.306693 -4.699125652 #> scale  4185.306693 5573.120054 -2.901348310 #> shape    -4.699126   -2.901348  0.003824851 #> attr(,\"threshold\") #> [1] 2500 fit2 <- Renouv(Garonne, distname.y = \"gpd\")  Ren2gev(fit2) #>          loc        scale        shape  #> 3582.6802262 1167.3071559   -0.1626228  #> attr(,\"jacobian\") #>          lambda     scale    shape #> loc   492.04884 0.8059401  456.705 #> scale -80.01834 0.8689358 1008.410 #> shape   0.00000 0.0000000    1.000 #> attr(,\"vcov\") #>                loc      scale        shape #> loc   15401.445089 4202.36991 -4.713490789 #> scale  4202.369910 5578.82193 -2.911330135 #> shape    -4.713491   -2.91133  0.003837403 #> attr(,\"threshold\") #> [1] 2500"},{"path":"https://irsn.github.io/Renext/reference/Ren2gumbel.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate a vector of coefficients from a Renewal-POT model with exponential excesses to a vector of Gumbel parameters — Ren2gumbel","title":"Translate a vector of coefficients from a Renewal-POT model with exponential excesses to a vector of Gumbel parameters — Ren2gumbel","text":"Translate vector coefficients Renewal-POT model   exponential excesses vector Gumbel parameters.","code":""},{"path":"https://irsn.github.io/Renext/reference/Ren2gumbel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate a vector of coefficients from a Renewal-POT model with exponential excesses to a vector of Gumbel parameters — Ren2gumbel","text":"","code":"Ren2gumbel(object,            threshold = NULL,            w = 1,            distname.y = c(\"exponential\", \"exp\"),            jacobian = (length(w) == 1L),            vcovRen = NULL)"},{"path":"https://irsn.github.io/Renext/reference/Ren2gumbel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate a vector of coefficients from a Renewal-POT model with exponential excesses to a vector of Gumbel parameters — Ren2gumbel","text":"object named vector parameters object class \"Renouv\".     first case, names vector element must conform     exponential distribution vector must length 2     names \"lambda\" \"rate\".  threshold threshold associated parameters. object     object class \"Renouv\", threshold slot used.  w block duration vector block durations.  distname.y name distribution excesses.  Can either     \"exponential\" \"exp\". choice impact     computations, name attached result     attribute may affect later use.  jacobian Logical. TRUE jacobian matrix transformation     computed attached result attribute.  vcovRen covariance matrix Renouv parameters.","code":""},{"path":"https://irsn.github.io/Renext/reference/Ren2gumbel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate a vector of coefficients from a Renewal-POT model with exponential excesses to a vector of Gumbel parameters — Ren2gumbel","text":"vector GEV parameters w length 1, matrix   w length > 1. returned objects attributes.","code":""},{"path":"https://irsn.github.io/Renext/reference/Ren2gumbel.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Translate a vector of coefficients from a Renewal-POT model with exponential excesses to a vector of Gumbel parameters — Ren2gumbel","text":"Yves Deville","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/Ren2gumbel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate a vector of coefficients from a Renewal-POT model with exponential excesses to a vector of Gumbel parameters — Ren2gumbel","text":"","code":"## Fit a Renouv model with exponential excesses (default) fit <- Renouv(Garonne)  ## Convert to gumbel (usable for one-year block maxima) parGumbel <- Ren2gumbel(fit) ## Retrieve the 'Renouv' model by giving the right threshold parRen <- gumbel2Ren(parGumbel,                      threshold = 2500,                      vcovGumbel = attr(parGumbel, \"vcov\"),                      plot = TRUE)  #>            loc    scale #> loc   8719.318 2564.989 #> scale 2564.989 4116.247 #>                   loc         scale #> lambda    0.002173328 -1.849022e-03 #> threshold 1.000000000  0.000000e+00 #> rate      0.000000000 -8.615349e-07 #>              lambda         rate #> lambda 3.464240e-02 1.754489e-06 #> rate   1.754489e-06 3.055253e-09 ## Build a compatible model under the assumption of one event by ## year parRen2 <- gumbel2Ren(parGumbel,                       lambda = 1.00,                       vcovGumbel = attr(parGumbel, \"vcov\"),                       plot = TRUE)  #>            loc    scale #> loc   8719.318 2564.989 #> scale 2564.989 4116.247 #>           loc         scale #> lambda      0  0.000000e+00 #> threshold   1  0.000000e+00 #> rate        0 -8.615349e-07 #>        lambda         rate #> lambda      0 0.000000e+00 #> rate        0 3.055253e-09 parRenNames <- c(\"lambda\", \"rate\") ## Build a 'Renouv' object without estimation myVcov <- attr(parRen, \"vcov\")[parRenNames, parRenNames] fitNew <- RenouvNoEst(threshold = attr(parRen, \"threshold\"),                       estimate = parRen,                       distname.y = \"exp\",                       cov = myVcov) #> Warning: warning: distribution not in target list. Still EXPERIMENTAL ## Compare return levels cbind(roundPred(fit$pred)[ , -2], roundPred(fitNew$pred)[ , -2]) #>    period L.95  U.95  L.70  U.70 period L.95  U.95  L.70  U.70 #> 30     10 5494  6300  5684  6110     10 5501  6293  5688  6107 #> 33     20 6160  7128  6388  6900     20 6161  7127  6389  6900 #> 36     50 7038  8224  7318  7945     50 7033  8230  7315  7948 #> 38    100 7701  9055  8020  8736    100 7693  9063  8016  8740 #> 41    200 8363  9887  8722  9528    200 8352  9897  8716  9533 #> 43    300 8750 10373  9132  9991    300 8738 10385  9126  9997 #> 44    400 9024 10719  9424 10320    400 9012 10731  9417 10326 #> 46    500 9237 10987  9649 10575    500 9225 11000  9643 10581 #> 47    600 9411 11206  9834 10783    600 9398 11219  9827 10790 #> 48    700 9558 11391  9990 10959    700 9545 11404  9983 10966 #> 49    800 9686 11551 10125 11112    800 9672 11565 10118 11119 #> 51    900 9798 11693 10244 11246    900 9784 11707 10237 11254 #> 52   1000 9898 11819 10351 11367   1000 9884 11833 10343 11374 ## idem for the putative 'Renouv' with rate 1 myVcov2 <- attr(parRen2, \"vcov\")[parRenNames, parRenNames] fitNew2 <- RenouvNoEst(threshold = attr(parRen2, \"threshold\"),                        estimate = parRen2,                        distname.y = \"exp\",                        cov = myVcov2) #> Warning: warning: distribution not in target list. Still EXPERIMENTAL cbind(roundPred(fit$pred)[ , -2], roundPred(fitNew2$pred)[ , -2]) #>    period L.95  U.95  L.70  U.70 period L.95  U.95  L.70  U.70 #> 30     10 5494  6300  5684  6110     10 5608  6187  5744  6050 #> 33     20 6160  7128  6388  6900     20 6268  7020  6445  6843 #> 36     50 7038  8224  7318  7945     50 7140  8123  7371  7891 #> 38    100 7701  9055  8020  8736    100 7800  8957  8072  8684 #> 41    200 8363  9887  8722  9528    200 8459  9790  8773  9477 #> 43    300 8750 10373  9132  9991    300 8845 10278  9183  9941 #> 44    400 9024 10719  9424 10320    400 9119 10624  9474 10270 #> 46    500 9237 10987  9649 10575    500 9331 10893  9699 10525 #> 47    600 9411 11206  9834 10783    600 9505 11112  9884 10733 #> 48    700 9558 11391  9990 10959    700 9652 11297 10039 10910 #> 49    800 9686 11551 10125 11112    800 9779 11458 10174 11062 #> 51    900 9798 11693 10244 11246    900 9891 11600 10293 11197 #> 52   1000 9898 11819 10351 11367   1000 9991 11726 10400 11318"},{"path":"https://irsn.github.io/Renext/reference/Renext-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Renewal Method for Extreme Values Extrapolation — Renext-package","title":"Renewal Method for Extreme Values Extrapolation — Renext-package","text":"package proposes fits diagnostics -called   méthode du renouvellement, alternative \"Peaks   Threshold\" (POT) methods.  méthode du renouvellement   generalises classical POT allowing excesses   threshold follow probability distribution can differ   Generalised Pareto Distribution (GPD). Weibull gamma   excesses sometimes preferred GPD excesses. special   case exponential excesses (falls three families:   GPD, Weibull gamma) special interest since allows exact   inference (scalar) parameter quantiles form OT   data (). package allows joint use possibly three kinds data   information. first kind classical excesses,   \"OT data\". can completed two kinds data   resulting temporal aggregation, often case   historical data. types optional, concern periods   blocks must overlap cross OT period.  MAX data correspond case one knows     \\(r\\) largest observations block. number     \\(r\\) may vary across blocks. kind data often     called '\\(r\\) largest', \"\\(r\\) Largest Order     Statistics\" (\\(r\\) LOS). OTS data (OT Supplementary data) correspond     case one knows block \\(b\\) observations     exceeded threshold \\(u_b\\) greater (usually     much greater) main threshold \\(u\\). number     \\(r_b\\) observations can zero, case     may say \\(u_b\\) unobserved level.     threshold \\(u_b\\) sometimes called perception       threshold. Historical data often available hydrology (e.g. river flood   discharges, sea-levels sea surges) can concern large   periods past centuries. unobserved level can typically   related material benchmark. Maximum likelihood estimation made possible context   heterogeneous data. Inference based asymptotic normality   parameter vector estimate linearisation (\"delta method\")   quantiles parameter functions. package allows use \"marked-process observations\" data   (datetime event level) interevent analysis can   useful. also allows event dates unknown replaced   much broader block indication, e.g. year number.   key point \"effective duration\" (total duration   observation periods) known. Event counts blocks can used   check assumption Poisson-distributed events. package development initiated, directed financed   french Institut de Radioprotection et de Sûreté     Nucléaire (IRSN). package non-academic   tool designed applied analysis case studies investigations   comparisons classical probabilistic models.","code":""},{"path":"https://irsn.github.io/Renext/reference/Renext-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Renewal Method for Extreme Values Extrapolation — Renext-package","text":"DESCRIPTION file:   package yet installed build time.   Index:  package yet installed build time. package contains function Renouv fit   \"renouvellement\" models.","code":""},{"path":"https://irsn.github.io/Renext/reference/Renext-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Renewal Method for Extreme Values Extrapolation — Renext-package","text":"Yves Deville [aut] (ORCID: <https://orcid.org/0000-0002-1233-488X>),   Bardet [aut],   Yann Richet [cre] Maintainer: Yann Richet <yann.richet@irsn.fr>","code":""},{"path":"https://irsn.github.io/Renext/reference/Renext-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Renewal Method for Extreme Values Extrapolation — Renext-package","text":"Miquel J. (1984) Guide pratique d'estimation des     probabilités de crues, Eyrolles (coll. EDF DER). Coles S. (2001) Introduction Statistical Modelling       Extremes Values, Springer. Embrechts P., Klüppelberg C. Mikosch T. (1997)     Modelling Extremal Events Insurance     Finance. Springer.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/Renext-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Renewal Method for Extreme Values Extrapolation — Renext-package","text":"","code":"## 'Garonne' data set summary(Garonne) #> o Dataset La Garonne river flow #>    data 'Garonne', variable 'Flow' (m3/s)  #>  #> o OT data (main sample) from  1913-01-01  to  1978-01-01  (eff. dur.  65.00 years) #>   #>        n     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.  #>  151.000 2530.000 2900.000 3200.000 3591.675 3995.000 7500.000  #>  #> o no missing OT periods  #>  #> o 'MAX' historical info: 1 blocks, 12 obs., total duration = 143.09 years  #>  #> o no 'OTS' historical data  #>  plot(Garonne)   ## Weibull excesses fG <- Renouv(x = Garonne,              threshold = 3000,              distname.y = \"weibull\",              main = \"Weibull fit for 'Garonne'\")   coef(fG) #>      lambda       shape       scale  #>    1.550137    1.086658 1104.135520  vcov(fG) #>               lambda        shape       scale #> lambda  0.0228075246 0.0007082357   -1.597855 #> shape   0.0007082357 0.0057833653    4.514266 #> scale  -1.5978548466 4.5142657371 8803.576238 summary(fG) #> o Main sample 'Over Threshold' #>     . Threshold         3000.00 #>     . Effect. duration    65.00 years #>     . Nb. of exceed.      98 #>  #> o Estimated rate 'lambda' for Poisson process (events):  1.55 evt/year. #>  #> o Distribution for exceedances y: \"weibull\", with 2 par. \"shape\", \"scale\"  #>  #> o No transformation applied #>  #> o Coefficients #>  #>           Estimate  Std. Error  t value #> lambda    1.550137  0.15102160 10.26434 #> shape     1.086658  0.07604844 14.28903 #> scale  1104.135520 93.82737467 11.76773 #>  #> Degrees of freedom: 3 (param.) and 110 (obs) #>  #> o Inference method used for return levels #> \"Delta method\" #>  #> o Return levels #>  #>    period quant L.95  U.95 L.70  U.70 #> 28     10  5793 5420  6165 5595  5990 #> 32     20  6436 5964  6909 6187  6686 #> 35     50  7272 6635  7909 6935  7609 #> 37    100  7895 7114  8675 7482  8307 #> 40    200  8510 7574  9446 8015  9005 #> 42    300  8868 7837  9899 8322  9413 #> 44    400  9120 8020 10221 8538  9702 #> 45    500  9315 8160 10471 8704  9926 #> 46    600  9475 8274 10675 8840 10110 #> 48    700  9609 8369 10848 8953 10264 #> 49    800  9725 8451 10998 9051 10398 #> 50    900  9827 8524 11131 9138 10516 #> 51   1000  9919 8588 11249 9215 10622 #>  #>  #> o 'MAX' historical info: 1  blocks, 12 obs., total duration = 143.09 years #>  #>   * block 1, 143.09 years, 12 obs. #>  #>      7500, 7400, 7000, 7000, 7000, 6600, 6500, 6500, 6400, 6300, 6300, 6200 #>  #> o no 'OTS' historical data #>  #> o Kolmogorov-Smirnov test #>  #> \tExact one-sample Kolmogorov-Smirnov test #>  #> data:  OTjitter(y.OT, threshold = 0) #> D = 0.12846, p-value = 0.07196 #> alternative hypothesis: two-sided #>  #>  logLik(fG) #> [1] -856.4257 #> attr(,\"df\") #> [1] 3 #> attr(,\"nobs\") #> [1] 110 ## Re-plot if needed plot(fG)   ## Classical 'predict' method with usual formal args  predict(fG, newdata = c(100, 150, 200), level = c(0.8, 0.9)) #>     period    quant     L.80     U.80     L.90     U.90 #> 100    100 7894.567 7384.096 8405.039 7239.384 8549.751 #> 150    150 8255.550 7686.549 8824.551 7525.245 8985.855 #> 200    200 8510.365 7898.410 9122.319 7724.930 9295.799"},{"path":"https://irsn.github.io/Renext/reference/Renouv.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a 'Renouvellement' model — Renouv","title":"Fit a 'Renouvellement' model — Renouv","text":"Fit 'renouvellement' POT model using Threshold data   possibly historical data two kinds.","code":""},{"path":"https://irsn.github.io/Renext/reference/Renouv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a 'Renouvellement' model — Renouv","text":"","code":"Renouv(x,        threshold = NULL,        effDuration = NULL,        distname.y = \"exponential\",        MAX.data = NULL,        MAX.effDuration = NULL,        OTS.data = NULL,        OTS.effDuration = NULL,        OTS.threshold = NULL,        fixed.par.y = NULL,        start.par.y = NULL,        force.start.H = FALSE,        numDeriv = TRUE,        trans.y = NULL,        jitter.KS = TRUE,        pct.conf = c(95, 70),        rl.prob = NULL,        prob.max = 1.0-1e-04 ,        pred.period = NULL,        suspend.warnings = TRUE,        control = list(maxit = 300, fnscale = -1),        control.H = list(maxit = 300, fnscale = -1),        trace = 0,        plot = TRUE,        label = \"\",        ...)"},{"path":"https://irsn.github.io/Renext/reference/Renouv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a 'Renouvellement' model — Renouv","text":"x Can numeric vector, object class \"Rendata\"     NULL.  first case, x contains levels     threshold variable interest.  second case,     formal arguments take values accordance object     content, can -passed giving formal explicitly.      x NULL, model fitted using data provided     using OTS MAX formals.  threshold Value threshold OT data.  effDuration Effective duration, .e. duration OT period.  distname.y Name distribution excesses threshold. See     Details .  MAX.data Either numeric vector list numeric vectors representing     historical data \\(r\\)-max blocks. vector     given, one block, data corresponding     \\(r\\)-max observed levels \\(r\\) vector     length; block duration given MAX.effDuration.     list given, list element contains data one     block, effective duration MAX.effDuration  MAX.effDuration Vector (effective) durations, one block MAX data.  OTS.data numeric vector list numeric vectors representing     supplementary Threshold data blocks. vector     given, one block, data contain     'historical' levels corresponding threshold given     OTS.threshold. block duration given     OTS.effDuration. list given, list     element contains data one block, threshold     effective duration OTS.threshold     OTS.effDuration.  OTS.effDuration numeric vector giving (effective) durations OTS     blocks.  OTS.threshold vector giving thresholds different OTS blocks.     given values must greater equal value     threshold.  fixed.par.y Named list known (fixed) parameter values     y-distribution.  start.par.y Named list parameter initial values     y-distribution. used distribution     belong list special distributions.  force.start.H Logical. TRUE, values start.par.y (    must correct) used also starting values     maximisation global likelihood : OT data historical     data. useful e.g. historical data fall outside     support distribution fitted without historical data. See     Details section.  numDeriv Logical: hessian computed using numDeriv     package (value TRUE) taken results     optim?  trans.y Transformation levels thresholding (    NULL).  possible \"exponential\"     value distname.y. two allowed choices \"square\"     \"log\" meaning fitted (exponentially distributed)     values x.OT^2 -threshold^2 log(x.OT)     -log(threshold) respectively.  corresponding     distributions x.OT may called \"square-exponential\"     \"log-exponential\".  jitter.KS Logical. set TRUE, small amount noise added     \"OT\" data used Kolmogorov-Smirnov test order     remove ties. done using OTjitter function.  pct.conf Character numeric vector specifying percentages     confidence (bilateral) limits quantiles.  rl.prob Vector probabilities computation return levels.      used plots (hence must dense enough) appear output     data.frame ret.lev.  prob.max Max value probability return level confidence limits     evaluations. argument 'shortens' default prob     vector: values > prob.max default prob vector     omitted. Ignored prob argument given.  pred.period vector \"pretty\" periods return level probability     evaluated returned pred data.frame.  suspend.warnings Logical. TRUE, warnings suspended     optimisation steps. useful parameters subject     constraints usually case.  control named list used optim -history stage     (). Note fnscale = -1 says maximisation     required (minimisation) must changed!  control.H named list used optim historical stage     ().  trace Level verbosity. Value 0 prints nothing.  plot Draw return level plot?  label Label used legend plot TRUE.   ... Arguments passed plot.Renouv, e.g. main,     ylim.","code":""},{"path":"https://irsn.github.io/Renext/reference/Renouv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit a 'Renouvellement' model — Renouv","text":"model fitted using Maximum Likelihood (ML). distributions listed called \"special\"   considered special manner.  distributions,   necessary give starting values parameter names   unambiguous.  distributions can used. probability functions   used \"black-box\" fashion, distributions respect   following formal requirements:  name density, distribution     quantile functions must obey classical     \"prefixing convention\". Prefixes must respectively: \"d\",     \"p\", \"q\".  rules applies distribution     stats package many packages     evd. first (main) argument must vectorisable     three functions, .e. vector x, q p     must accepted density, distribution quantile     functions. density must log formal     argument. log TRUE, log-density     returned instead density. distribution, necessary give arguments names   start.par.y. arguments list must exactly required   number parameters family (e.g. 2 gamma).   parameters can fixed (known); parameter set   reunion appearing start.par.y   fixed.par.y. Anyway, present version, least one   parameter must unknown y part model. Mathematical requirements exist correct use ML.   referred \"regularity conditions\" ML theory. Note   support distribution must set non-negative real   numbers. estimation procedure differs according existence   different types data: main sample, MAX OTS.  historical data given, whole set parameters     contains orthogonal subsets: \"point process\" part     concerning process events, \"observation\" part     concerning excesses threshold. parameters can     case estimated separately. rate Poisson process estimated     empirical rate, .e. number events divided total     duration given effDuration.  \"Threshold\"     parameters estimated excesses computed x.OT     minus threshold. historical data given, two parameter vectors must     coped together maximising global likelihood. case,     begin estimation ignoring historical data use     estimates starting values maximisation global     likelihood. circumstances, estimates obtained first     stage can used historical data fall     outside support distribution fitted. can happen     e.g. distname.y = \"gpd\" historical data exceed     threshold - scale/shape values     shape scale computed first stage. version 2.1-1 , possible use OTS /    MAX data OT data specifying x =       NULL. Yet time possible distname.y takes     one two values: \"exp\", \"gpd\".  initial     values parameter obtained using     parIni.OTS, parIni.MAX functions     possibly combining two resulting initial parameter     vectors. possibility can used fit model block       maxima \\(r\\)-largest classical data     flexibility since duration blocks may constant. returned Renouv object contains MAX element   concerning distribution block maxima two following   cases.  distname.y \"exponential\" \"exp\",     distribution maximum Gumbel. estimated parameters     can used gumbel function evd package.  distname.y \"gpd\", \"lomax\",     \"maxlo\" \"GPD\"  distribution maximum     Generalised Extreme Values distribution. estimated parameters     can used gev function evd package.","code":""},{"path":"https://irsn.github.io/Renext/reference/Renouv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a 'Renouvellement' model — Renouv","text":"object class \"Renouv\". mainly list   various results.  est.N Estimate(s) count \"N\" part. estimate     use historical data, even available.  est.y Estimate(s) excess \"y\" part. estimate     use historical data, even available.  cov.N, cov.y (co-)variances estimates .  estimate Estimate(s) whole set parameters based OT data     historical data available.  ks.test Kolmogorov-Smirnov goodness--fit test.  ret.lev data frame containing return levels confidence limits.     corresponding probabilities either provided user taken     default values.  pred data frame similar ret.lev, \"pretty\" return     periods. taken provided values pred.period     chosen \"round\" multiples time unit (taken     effDuration). periods chosen order cover     periods ranging 1/10 10 time units.  MAX list providing estimated distribution maximum     marks block unit duration. list element exists     distribution can deduced fit,     case distname.y GPD broad sense,     see Details.  results available. Use names(result) see   list. Except special case distname.y   \"exponential\" historical data used,   inference quantiles obtained delta method   using numerical derivatives. Confidence limits unreliable   return levels much greater observation-historical period. Due presence estimated parameters, Kolmogorov-Smirnov   test unreliable less 30 observations available.","code":""},{"path":"https://irsn.github.io/Renext/reference/Renouv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit a 'Renouvellement' model — Renouv","text":"Miquel J. (1984) Guide pratique d'estimation des       probabilités de crues, Eyrolles (coll. EDF DER). Coles S. (2001) Introduction Statistical Modelling Extremes       Values, Springer. Embrechts P., Klüppelberg C. Mikosch T. (1997) Modelling       Extremal Events Insurance Finance. Springer.","code":""},{"path":"https://irsn.github.io/Renext/reference/Renouv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit a 'Renouvellement' model — Renouv","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/Renouv.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fit a 'Renouvellement' model — Renouv","text":"model concerns \"Threshold\" part   distribution observations. historical data used,   observations larger threshold. name elements returned list indicative,   likely changed future versions. time, effect   historical data estimation (data exist) can evaluated   comparing c(res$est.N, res$est.y) res$estimate   res results list. warnings may indicate missing values met   optimisation process. due evaluation density tail   values. time ML estimates computed using unconstrained   optimisation, invalid parameter values can met   maximisation even returned (invalid) estimates.","code":""},{"path":"https://irsn.github.io/Renext/reference/Renouv.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Fit a 'Renouvellement' model — Renouv","text":"distributions presence historical data,   estimation can fail due problem optimisation. Even   optimisation converges, determination (numerical)   hessian can impossible: can happen one   parameter small compute finite difference approximation   gradient. instance 'rate' parameter exponential   distribution (= inverse mean) small mean   excesses large. possible solution rescale data e.g. dividing   10 100. rule thumb, acceptable scaling leads   data (excesses) units hundreds,   order magnitude thousands avoided reduced   scaling. rescaling recommended square exponential   distribution (obtained trans = \"square\") since   observations squared. Another possible way solve problem change   numDeriv value.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/Renouv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a 'Renouvellement' model — Renouv","text":"","code":"## Garonne data. Use a \"Rendata\" object as 'x'. Historical data are used! fit <- Renouv(x = Garonne, distname = \"weibull\", trace = 1,               main = \"'Garonne' data\") #> processing the 'Rendata' object 'x' #>  #> Number of obs > threshold 151  #> o Estimate of the process rate (evt/bloc length) 2.323077  #> o Estimated values / covariance for the exceedances part #>       shape       scale  #>    1.139363 1145.889216  #>             shape       scale #> shape 0.005149901    1.993273 #> scale 1.993272635 7470.100657 #>  #>    Take into account MAX historical data of time-length 143.09 units #> o Optimisation #> o Initial values for 2nd stage optimization #>       shape       scale  #>    1.139363 1145.889216  #>   parscale used in 'control.H' #>       75%  #>    1 1000  #>   ndeps used in 'control.H' #> [1] 1e-06 1e-06 #>   fnscale used in 'control.H' #> [1] -1 #>    Fixed parameters in historical optimization and hessian #> lambda  shape  scale  #>  FALSE  FALSE  FALSE  #>    Maximising parameter #>       shape       scale  #>    1.139296 1190.400483  #>    Maximised log-likelihood #> [1] -1196.906 #>    Hessian #>              [,1]         [,2]          [,3] #> [1,] -29.00244229   15.5051926 -0.0130855252 #> [2,]  15.50519261 -410.4807227  0.2028223362 #> [3,]  -0.01308553    0.2028223 -0.0002574086  summary(fit) #> o Main sample 'Over Threshold' #>     . Threshold         2500.00 #>     . Effect. duration    65.00 years #>     . Nb. of exceed.     151 #>  #> o Estimated rate 'lambda' for Poisson process (events):  2.37 evt/year. #>  #> o Distribution for exceedances y: \"weibull\", with 2 par. \"shape\", \"scale\"  #>  #> o No transformation applied #>  #> o Coefficients #>  #>           Estimate  Std. Error  t value #> lambda    2.370700  0.18821219 12.59589 #> shape     1.139296  0.06328141 18.00365 #> scale  1190.400483 80.02387531 14.87557 #>  #> Degrees of freedom: 3 (param.) and 163 (obs) #>  #> o Inference method used for return levels #> \"Delta method\" #>  #> o Return levels #>  #>    period quant L.95  U.95 L.70  U.70 #> 30     10  5773 5415  6131 5584  5963 #> 33     20  6395 5950  6839 6160  6629 #> 36     50  7195 6618  7773 6890  7501 #> 38    100  7789 7100  8477 7424  8153 #> 41    200  8373 7565  9180 7946  8800 #> 43    300  8710 7831  9590 8245  9175 #> 44    400  8949 8017  9880 8456  9441 #> 46    500  9133 8160 10105 8618  9647 #> 47    600  9282 8276 10289 8750  9814 #> 48    700  9408 8373 10444 8861  9956 #> 49    800  9518 8457 10578 8957 10078 #> 51    900  9614 8531 10696 9041 10186 #> 52   1000  9699 8597 10802 9116 10283 #>  #>  #> o 'MAX' historical info: 1  blocks, 12 obs., total duration = 143.09 years #>  #>   * block 1, 143.09 years, 12 obs. #>  #>      7500, 7400, 7000, 7000, 7000, 6600, 6500, 6500, 6400, 6300, 6300, 6200 #>  #> o no 'OTS' historical data #>  #> o Kolmogorov-Smirnov test #>  #> \tAsymptotic one-sample Kolmogorov-Smirnov test #>  #> data:  OTjitter(y.OT, threshold = 0) #> D = 0.10754, p-value = 0.06086 #> alternative hypothesis: two-sided #>  #>   ## generates a warning because of the ties fit2 <- Renouv(x = Garonne, distname = \"GPD\",                jitter.KS = FALSE,                threshold = 2800, trace = 1,                main = \"'Garonne' data with threshold = 2800 and GPD fit\") #> processing the 'Rendata' object 'x' #>  #> Number of obs > threshold 119  #> o Estimate of the process rate (evt/bloc length) 1.830769  #> o Estimated values / covariance for the exceedances part #>        scale        shape  #> 1158.6426355   -0.1131778  #>            scale        shape #> scale 23744.9148 -11.85919779 #> shape   -11.8592   0.00939199 #>  #>    Take into account MAX historical data of time-length 143.09 units #> o Optimisation #> o Initial values for 2nd stage optimization #>        scale        shape  #> 1158.6426355   -0.1131778  #>   parscale used in 'control.H' #>  75%       #> 1000    1  #>   ndeps used in 'control.H' #> [1] 1e-06 1e-06 #>   fnscale used in 'control.H' #> [1] -1 #>    Fixed parameters in historical optimization and hessian #> lambda  scale  shape  #>  FALSE  FALSE  FALSE  #>    Maximising parameter #>        scale        shape  #> 1293.7155458   -0.1613623  #>    Maximised log-likelihood #> [1] -991.0444 #>    Hessian #>              [,1]          [,2]          [,3] #> [1,] -37.06678421 -0.0165187809   -33.1950619 #> [2,]  -0.01651878 -0.0002367487    -0.4550967 #> [3,] -33.19506190 -0.4550966706 -1062.0175205 #> Warning: ties should not be present for the one-sample Kolmogorov-Smirnov test   ## use a numeric vector as 'x' fit3 <-     Renouv(x = Garonne$OTdata$Flow,            threshold = 2500,            effDuration = 100,            distname = \"GPD\",            OTS.data = list(numeric(0), c(6800, 7200)),            OTS.effDuration = c(100, 150),            OTS.threshold = c(7000, 6000),             trace = 1,            main = \"'Garonne' data with artificial \\\"OTS\\\" data\") #> Number of obs > threshold 151  #> o Estimate of the process rate (evt/bloc length) 1.51  #> o Estimated values / covariance for the exceedances part #>       scale       shape  #> 1241.421464   -0.136232  #>              scale        shape #> scale 19496.458520 -8.603624361 #> shape    -8.603624  0.006151174 #>  #>    Take into account OTS historical data on time-length 250 units  #> o Optimisation #> o Initial values for 2nd stage optimization #>       scale       shape  #> 1241.421464   -0.136232  #>   parscale used in 'control.H' #>  75%       #> 1000    1  #>   ndeps used in 'control.H' #> [1] 1e-06 1e-06 #>   fnscale used in 'control.H' #> [1] -1 #>    Fixed parameters in historical optimization and hessian #> lambda  scale  shape  #>  FALSE  FALSE  FALSE  #>    Maximising parameter #>        scale        shape  #> 1212.0996888   -0.1658686  #>    Maximised log-likelihood #> [1] -1170.334 #>    Hessian #>              [,1]          [,2]          [,3] #> [1,] -69.68831050 -0.0159618171   -35.9669755 #> [2,]  -0.01596182 -0.0002892484    -0.5715069 #> [3,] -35.96697546 -0.5715068629 -1480.0838254  ## Add historical (fictive) data fit4 <- Renouv(x = Garonne$OTdata$Flow,                threshold = 2500,                effDuration = 100,                distname = \"weibull\",                fixed.par.y = list(shape = 1.1),                OTS.data = list(numeric(0), c(6800, 7200)),                OTS.effDuration = c(100, 150),                OTS.threshold = c(7000, 6000),                trace = 0,                main = \"'Garonne' data with artificial \\\"OTS\\\" data\")   ##============================================================================ ## use the 'venice' dataset in a r-largest fit from the 'evd' package ##============================================================================ ## transform data: each row is a block MAX.data <- as.list(as.data.frame(t(venice))) ## remove the NA imposed by the rectangular matrix format MAX.data <- lapply(MAX.data, function(x) x[!is.na(x)]) MAX.effDuration <- rep(1, length(MAX.data))  ## fit a Renouv model with no OT data. The threshold ## must be in the support of the gev distribution u <- 66 fit.gpd <- Renouv(x = NULL,                   MAX.data = MAX.data,                   MAX.effDuration = MAX.effDuration,                   distname.y = \"GPD\",                   threshold = u,                   numDeriv = FALSE,                   trace = 0,                   plot = FALSE) if (FALSE) { # \\dontrun{   require(ismev)   ## compare with results from the ismev package    fit.gev <- rlarg.fit(venice)   est.gev <- fit.gev$mle   names(est.gev) <- c(\"loc\", \"scale\", \"shape\")      ## transform the 'gev' fit into a Ren parameter set.   cov.gev <- fit.gev$cov   rownames(cov.gev) <- colnames(cov.gev) <-  c(\"loc\", \"scale\", \"shape\")   trans <- gev2Ren(est.gev,                    threshold = u,                    vcovGev = cov.gev)   est <- cbind(ismev = trans, RenextLab = coef(fit.gpd))   colnames(est) <- c(\"ismev\", \"RenextLab\")   print(est)      ## fill a 3d array with the two gpd covariance matrices   cov2 <- attr(trans, \"vcov\")[c(1, 3, 4), c(1, 3, 4)]      ## covariance   covs <-     array(dim = c(2, 3, 3),           dimnames = list(c(\"ismev\", \"RenextLab\"),             colnames(fit.gpd$cov), colnames(fit.gpd$cov)))      covs[\"ismev\", , ] <- cov2   covs[\"RenextLab\", , ] <- fit.gpd$cov   print(covs) } # }"},{"path":"https://irsn.github.io/Renext/reference/RenouvNoEst.html","id":null,"dir":"Reference","previous_headings":"","what":"Define a 'renouvellement' model without estimation — RenouvNoEst","title":"Define a 'renouvellement' model without estimation — RenouvNoEst","text":"Build 'renouvellement' model using parameters   given user.","code":""},{"path":"https://irsn.github.io/Renext/reference/RenouvNoEst.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define a 'renouvellement' model without estimation — RenouvNoEst","text":"","code":"RenouvNoEst(threshold,             estimate = NULL,             distname.y = \"exponential\",             fixed.par.y = NULL,             trans.y = NULL,             pct.conf = c(95, 70),             rl.prob = NULL,             prob.max = 1 - 1e-04,             pred.period = NULL,             cov = NULL,             nb.OT = NULL,             infer.method = NULL)"},{"path":"https://irsn.github.io/Renext/reference/RenouvNoEst.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define a 'renouvellement' model without estimation — RenouvNoEst","text":"threshold threshold.  estimate Numeric named vector containing estimates parameters.     must compatible distribution chosen, must contain     first position element named \"lambda\" representing     estimated event rate events year.  distname.y Character giving name distribution.  fixed.par.y Numeric named vector containing values vectors     considered fixed (estimated).  trans.y Transformation Renouv. Used     distname.y equal \"exponential\".  pct.conf Vector percents confidence limits.  rl.prob Probability used return level computations. values     used instance return level plots produced     plot.Renouv method. NULL default vector     used.  prob.max Maximal probability computations done.  pred.period Vector periods predicted return levels computed.  cov Covariance matrix provided estimated parameters.  Must     rownames colnames accordance     estimate. covariance matrix used build confidence     limits parameters return levels using delta     method.  nb.OT Number data threshold used estimation.      used distname.y equal \"exponential\".  infer.method Inference method. normally delta method.","code":""},{"path":"https://irsn.github.io/Renext/reference/RenouvNoEst.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Define a 'renouvellement' model without estimation — RenouvNoEst","text":"function used plotting comparing models known   parameter estimates data available. parameters estimates accompanied covariance   matrix assuming approximately normal joint distribution   . matrix usually obtained computing numerical   derivatives log-likelihood second order   estimates. covariance used compute approximate confidence   limits return levels unknown true distribution   estimated.","code":""},{"path":"https://irsn.github.io/Renext/reference/RenouvNoEst.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define a 'renouvellement' model without estimation — RenouvNoEst","text":"object class \"Renouv\" representing 'renouvellement'   model similar built Renouv. mainly   list. Note however list elements found Renouv   objects built Renouv can found .  instance,   returned objects embeds goodness--fit results since   object created without making use data.","code":""},{"path":"https://irsn.github.io/Renext/reference/RenouvNoEst.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Define a 'renouvellement' model without estimation — RenouvNoEst","text":"Yves Deville","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/RenouvNoEst.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define a 'renouvellement' model without estimation — RenouvNoEst","text":"","code":"##====================================================================== ## Example from S. Coles' book, page 86 'rainfall data'. ## Note that the first parameter is here the rate 'lambda', and no the ## probability of exceedance as in Coles' book. ##====================================================================== estimate <- c(lambda = 152 / 48, scale = 7.44, shape = 0.184)           cov <- matrix(c(4.9e-7 * (17531 / 48)^2,  0.0000,  0.0000,                 0.0000,  0.9180, -0.0655,                 0.0000, -0.0655,  0.0102),               nrow = 3) colnames(cov) <- rownames(cov) <- names(estimate) renNE <- RenouvNoEst(threshold = 30, distname.y = \"gpd\",                      pct.conf = c(95, 70),                      estimate = estimate,                      nb.OT = 152, cov = cov) summary(renNE) #> o Estimated rate 'lambda' for Poisson process (events):  3.17 evt/year. #>  #> o Distribution for exceedances y: \"gpd\", with 2 par. \"scale\", \"shape\"  #>  #> o No transformation applied #>  #> o Coefficients #>  #>        Estimate Std. Error   t value #> lambda 3.166667  0.2556604 12.386222 #> scale  7.440000  0.9581232  7.765181 #> shape  0.184000  0.1009950  1.821871 #>  #> Degrees of freedom: 3 (param.) and 152 (obs) #>  #> o Inference method used for return levels #> \"Delta method\" #>  #> o Return levels #>  #>    period quant L.95 U.95 L.70 U.70 #> 31     10    66   56   76   61   71 #> 34     20    76   60   92   68   85 #> 36     50    92   64  120   78  107 #> 39    100   106   66  147   85  128 #> 42    200   122   65  179   92  152 #> 43    300   132   63  201   96  169 #> 45    400   140   62  218   99  182 #> 46    500   146   60  233  101  192 #> 47    600   152   58  245  102  201 #> 49    700   156   57  256  104  209 #> 51    800   161   55  266  105  216 #> 52    900   164   54  275  106  223 #> 53   1000   168   52  283  107  229 #>  #>  #> o no 'MAX' historical data #>  #> o no 'OTS' historical data #>  #> o Kolmogorov-Smirnov test #> NULL #>  plot(renNE, main = \"Daily rainfall data SW England\", ylim = c(0, 400))"},{"path":"https://irsn.github.io/Renext/reference/SLTW.html","id":null,"dir":"Reference","previous_headings":"","what":"Shifted Left Truncated Weibull (SLTW) distribution — SLTW","title":"Shifted Left Truncated Weibull (SLTW) distribution — SLTW","text":"Density function, distribution function, quantile function random   generation Shifted Left Truncated Weibull distribution.","code":""},{"path":"https://irsn.github.io/Renext/reference/SLTW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shifted Left Truncated Weibull (SLTW) distribution — SLTW","text":"","code":"dSLTW(x, delta = 1.0, shape = 1.0, scale = 1.0, log = FALSE)    pSLTW(q, delta = 1.0, shape = 1.0, scale = 1.0, lower.tail = FALSE)    qSLTW(p, delta = 1.0, shape = 1.0, scale = 1.0)    rSLTW(n, delta = 1.0, shape = 1.0, scale = 1.0)"},{"path":"https://irsn.github.io/Renext/reference/SLTW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shifted Left Truncated Weibull (SLTW) distribution — SLTW","text":"x, q Vector quantiles.  p Vector probabilities.  n Number observations.  delta, shape, scale Shift, shape scale parameters. Vectors length > 1     accepted.  log Logical; TRUE, log density returned.  lower.tail Logical; TRUE (default), probabilities     \\(\\textrm{Pr}[X \\le x]\\), otherwise,     \\(\\textrm{Pr}[X > x]\\).","code":""},{"path":"https://irsn.github.io/Renext/reference/SLTW.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shifted Left Truncated Weibull (SLTW) distribution — SLTW","text":"SLTW distribution function shape \\(\\alpha > 0\\), scale   \\(\\beta > 0\\) shift \\(\\delta > 0\\) survival function   $$S(y) =     \\exp\\left\\{        -\\left[  \\left( \\frac{y + \\delta}{\\beta} \\right)^\\alpha        -        \\left( \\frac{\\delta}{\\beta}   \\right)^\\alpha        \\right]     \\right\\} \\qquad (y > 0)   $$   distribution \\(Y := X - \\delta\\) conditional   \\(X > \\delta\\) \\(X\\) follows Weibull distribution   shape \\(\\alpha\\) scale \\(\\beta\\). hazard mean residual life (MRL) monotonous functions   monotonicity Weibull equivalent (shape   scale). moments even expectation simple   expression. distribution sometimes called power exponential.   occasionally used POT shift delta taken   threshold distribution level \\(X\\)   (exceedance \\(Y\\)) known standard   Weibull distribution.","code":""},{"path":"https://irsn.github.io/Renext/reference/SLTW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shifted Left Truncated Weibull (SLTW) distribution — SLTW","text":"dSLTW gives density   function, pSLTW gives distribution function, qSLTW   gives quantile function, rSLTW generates random   deviates.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/SLTW.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shifted Left Truncated Weibull (SLTW) distribution — SLTW","text":"","code":"shape <- rexp(1)+1   delta = 10  xl <- qSLTW(c(0.001, 0.99), delta = delta, shape = shape) x <- seq(from = xl[1], to = xl[2], length.out = 200) f <- dSLTW(x, delta = delta, shape = shape) plot(x, f, type = \"l\", main = \"SLTW density\")   F <- pSLTW(x, delta = delta, shape = shape) plot(x, F, type = \"l\", main = \"SLTW distribution\")   X <- rSLTW(5000, delta = delta, shape = shape) ## Should be close to the uniform repartition plot(ecdf(pSLTW(X, delta = delta, shape = shape)))"},{"path":"https://irsn.github.io/Renext/reference/SandT.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute empirical survivals (S) and return periods (T) — SandT","title":"Compute empirical survivals (S) and return periods (T) — SandT","text":"Compute empirical survival values empirical return periods   observations object. used plotting positions   several plots.","code":""},{"path":"https://irsn.github.io/Renext/reference/SandT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute empirical survivals (S) and return periods (T) — SandT","text":"","code":"SandT(object, points = c(\"p\", \"H\"), a = 0, naive = FALSE)"},{"path":"https://irsn.github.io/Renext/reference/SandT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute empirical survivals (S) and return periods (T) — SandT","text":"object object containing data, class \"Renouv\"     \"Rendata\".  points Option computation plotting positions.      points set \"p\", \\(p\\)-points formula     used selected value . formula used     compute survival return period computed.     instead points set \"H\", Nelson's formula     used compute return periods, survival value still     given \\(p\\)-points formula. data     heterogeneous, .e.  object contains MAX /    OTS data, Nelson's formula used compute return     periods upper slice levels.  Parameter used interpolation formula inverse return     periods Hirsch Stedinger (1987).  naive Logical. TRUE, naive plotting positions used     display MAX OTS data. can defined     main sample exists object x.OT element.     MAX OTS block, positions use     number events predicted using rate events estimated     main sample. main sample small durations,     predictions likely misleading.","code":""},{"path":"https://irsn.github.io/Renext/reference/SandT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute empirical survivals (S) and return periods (T) — SandT","text":"list following elements  x Numeric vector containing ordered values available     sources object: main sample, historical periods either 'MAX'     'OTS'.  group, groupNames Integer character vectors giving source values     x, order values. instance,     group[10] gives group form x[10]     extracted, name group groupNames[group[10]].  S, T Numeric vectors length x containing     corresponding estimation survival value return     period.  thresh, lambda.thresh, S.thresh, T.thresh Vector thresholds corresponding estimation event     rate, survival return period. estimations       threshold values. value T.thresh[] threshold     thresh[] results simple computation: divide sum     durations blocks thresholds >= thresh[]     number events blocks.","code":""},{"path":"https://irsn.github.io/Renext/reference/SandT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute empirical survivals (S) and return periods (T) — SandT","text":"object contains historical information (MAX   OTS), computation adaptation Hirsch Stedinger   (1987) Marked Process (MP) context. original method   devoted block maxima interpolates survival values   thresholds computed first. MP, interpolation   done inverse return periods, survival values   deduced inverse return periods. Nelson's formula provides unbiased estimates values   cumulative hazard \\(H(x)\\) order statistics, thus   can used estimate log-return periods required   return level plot.","code":""},{"path":"https://irsn.github.io/Renext/reference/SandT.html","id":"seealso","dir":"Reference","previous_headings":"","what":"seealso","title":"Compute empirical survivals (S) and return periods (T) — SandT","text":"ppoints Hpoints functions.","code":""},{"path":"https://irsn.github.io/Renext/reference/SandT.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Compute empirical survivals (S) and return periods (T) — SandT","text":"using points = \"H\" estimated values survival   returned S return period T   longer verify T=1/S/lambda, lambda   estimated rate. case, values T used   return level plot, values S used   PP-plot.","code":""},{"path":"https://irsn.github.io/Renext/reference/SandT.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute empirical survivals (S) and return periods (T) — SandT","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/SandT.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute empirical survivals (S) and return periods (T) — SandT","text":"original method block maxima described Hirsch R.M. Stedinger J.R.(1887) Plotting Positions   Historical Floods precision. Water     Ressources Research, vol. 23, N. 4 pp. 715-727. Millard S. Neerchal N. (2001). Environmental     Statistics S-Plus. CRC Press adaptation Marked Process context described Renext Computing Details document.","code":""},{"path":"https://irsn.github.io/Renext/reference/SandT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute empirical survivals (S) and return periods (T) — SandT","text":"","code":"## use an object with class \"Rendata\" ST1 <- SandT(object = Garonne) ## basic return level plot plot(ST1$T, ST1$x, col = ST1$group, log = \"x\")  ## use an object with class \"Renouv\" fit <- Renouv(x = Garonne, plot = FALSE) ST2 <- SandT(object = fit) plot(ST2$T, ST2$x, col = ST2$group, log = \"x\")"},{"path":"https://irsn.github.io/Renext/reference/anova.Renouv.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute an analysis of deviance table for two nested Renouv objects — anova.Renouv","title":"Compute an analysis of deviance table for two nested Renouv objects — anova.Renouv","text":"Compute analysis deviance table two nested Renouv objects","code":""},{"path":"https://irsn.github.io/Renext/reference/anova.Renouv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute an analysis of deviance table for two nested Renouv objects — anova.Renouv","text":"","code":"# S3 method for class 'Renouv' anova(object, object1, trace = 1L, ...)"},{"path":"https://irsn.github.io/Renext/reference/anova.Renouv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute an analysis of deviance table for two nested Renouv objects — anova.Renouv","text":"object Renouv model fitted Renouv.  object1 Renouv object object nested     object1.  trace Level verbosity. value 0 prints nothing.  ... used yet.","code":""},{"path":"https://irsn.github.io/Renext/reference/anova.Renouv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute an analysis of deviance table for two nested Renouv objects — anova.Renouv","text":"object class \"anova\" inheriting class \"data.frame\".","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/anova.Renouv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute an analysis of deviance table for two nested Renouv objects — anova.Renouv","text":"special interest case distribution excesses used object exponential object1 uses two-parameters alternative GPD family. know convergence asymptotic distribution slow, numerical approximation true distribution test statistic used possible, .e. objects use MAX OTS data number exceedances 8 500.","code":""},{"path":"https://irsn.github.io/Renext/reference/anova.Renouv.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compute an analysis of deviance table for two nested Renouv objects — anova.Renouv","text":"deviance models can interpreted: difference deviance meaningful.","code":""},{"path":"https://irsn.github.io/Renext/reference/anova.Renouv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute an analysis of deviance table for two nested Renouv objects — anova.Renouv","text":"","code":"## test using historical data fit1Exp <- Renouv(Garonne,  distname.y = \"exponential\", plot = FALSE) fit1GPD <- Renouv(Garonne, distname.y = \"GPD\", plot = FALSE) anova(fit1Exp, fit1GPD) #> Models:  #>   o 'fit1Exp' with exceedances dist. \"exponential\" #>   o 'fit1GPD' with exceedances dist. \"GPD\" #>  #> Method used:  asymptotic approximation  #>  #> Analysis of Deviance Table #>  #>         df deviance      W  Pr(>W)   #> fit1Exp  2   2399.0                  #> fit1GPD  3   2393.4 5.5856 0.01811 * #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1  ## test without using historical data x <- Garonne$OTdata$Flow dur <- Garonne$OTinfo$effDuration  fit2Exp <- Renouv(x,  threshold = 2700,  effDuration = dur,                   distname.y = \"exponential\", plot = FALSE) #> Special inference for the exponential case without history #> Warning: uncertainty on the rate not taken into account yet  in the exponential with no history case fit2GPD <- Renouv(x, threshold = 2700, effDuration = dur,                   distname.y = \"GPD\", plot = FALSE) anova(fit2Exp, fit2GPD) #> Models:  #>   o 'fit2Exp' with exceedances dist. \"exponential\" #>   o 'fit2GPD' with exceedances dist. \"GPD\" #>  #> Method used:  numerical approximation  #>  #> Analysis of Deviance Table #>  #>         df deviance      W Pr(>W) #> fit2Exp  2   2026.7               #> fit2GPD  3   2024.7 2.0036 0.1743"},{"path":"https://irsn.github.io/Renext/reference/barplotRenouv.html","id":null,"dir":"Reference","previous_headings":"","what":"Barplot for Renouv ","title":"Barplot for Renouv ","text":"Barplot \"Threshold\" counts time blocks (usually years)","code":""},{"path":"https://irsn.github.io/Renext/reference/barplotRenouv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Barplot for Renouv ","text":"","code":"barplotRenouv(data,                blockname = colnames(data)[1],                varname = colnames(data)[2],                threshold = quantile(data[, varname], 0.2),                na.block = NULL,                plot = TRUE,                main = NULL, xlab = NULL, ylab = NULL,                mono = FALSE,                prob.theo = 0.999,                ...)"},{"path":"https://irsn.github.io/Renext/reference/barplotRenouv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Barplot for Renouv ","text":"data dataframe object containing variables.  blockname Name \"block\" variable (column data). variable     contain integers, class \"factor\", integer     values year numbers.  varname Name variable (e.g. \"Surge\").  threshold obs variable exceeds threshold     taken account.  na.block Values blocks containing missing values. See Details section.  plot FALSE tests computed without producing plot.  main Character main title NULL case default main     title used.  xlab Character x axis label NULL case default     lab used.  ylab Character y axis NULL case default lab     used.  mono FALSE barplot colors, else greyscale     used.  prob.theo total theoretical probability corresponding plotted     (theoretical) bars. ... args passed     barplot.","code":""},{"path":"https://irsn.github.io/Renext/reference/barplotRenouv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Barplot for Renouv ","text":"Blocks described na.block omitted    determination counts. object given na.block    coerced character done values block    comparing na.block values.  block    variable class factor levels representing years    (e.g. 1980, 1981, etc.) missing blocks can specified either    c(\"1980\", \"1981\") numeric c(1980, 1981). chi-square test, counts neighbouring frequency classes    grouped order reach minimum frequency 5    group. E.g. expect respectively 1.0, 3.8    7.0 blocks frequency 0, 1 2    events, three counts grouped one group frequency    1.0+3.8+7.0=11.8. Note strategy grouping    unique likely weaken power test.    grouping, higher class theoretical probability computed    probability obtain count equal greater max value.","code":""},{"path":"https://irsn.github.io/Renext/reference/barplotRenouv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Barplot for Renouv ","text":"list following objects. freq frequency table (matrix) giving observed theoretical (Poisson)     frequencies well group number chi-square test.  overdispersion overdispersion coefficient (variance/mean ratio).  disp.test list giving results ()dispersion     test. See reference Yagouti al. References     section.  chisq.test list giving results chis-square test goodness--fit     Poisson distribution.  tests matrix two tests displayed two rows. tests, statistic follows chi-square distribution   null hypothesis . list results contains statistic   statistic, number degrees freedom df   \\(p\\)-value p.value.","code":""},{"path":"https://irsn.github.io/Renext/reference/barplotRenouv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Barplot for Renouv ","text":"See Yagouti ., Abi-Zeid ., Ouarda, T.B.M.J.   B. Bobée (2001), Revue de processus ponctuels et   synthèse de tests statistiques pour le choix d'un type   de processus Revue des Sciences de l'Eau, 1,   pp. 323-361.","code":""},{"path":"https://irsn.github.io/Renext/reference/barplotRenouv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Barplot for Renouv ","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/barplotRenouv.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Barplot for Renouv ","text":"two tests: (-)dispersion chi-square one-sided (upper   tail) \\(p\\)-value. words, intend reject   statistics take \"abnormally small\" values, abnormally   large values met.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/barplotRenouv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Barplot for Renouv ","text":"","code":"## na.block influence for Brest data opar <- par(mfrow = c(2, 2))  bp1 <- barplotRenouv(data = Brest.years, threshold = 30,          main = \"missing periods ignored\") #>  #> Goodness-of-fit test (Poisson). Stat = 277.1667 df = 8 p-value = 0  #>  #> Dispersion index 4.208457 p-value 0  bp2 <- barplotRenouv(data = Brest.years, threshold = 30,          na.block = 1992, main = \"1992 missing\") #> number of obs. in NA blocks: 1  #>  #> Goodness-of-fit test (Poisson). Stat = 271.7896 df = 8 p-value = 0  #>  #> Dispersion index 4.170886 p-value 0  bp3 <- barplotRenouv(data = Brest.years, threshold = 30,          na.block = 1991:1993, main =\"1991:1993 missing\") #> number of obs. in NA blocks: 3  #>  #> Goodness-of-fit test (Poisson). Stat = 261.2294 df = 8 p-value = 0  #>  #> Dispersion index 4.094299 p-value 0  bp4 <- barplotRenouv(data = Brest.years, threshold = 30,          na.block = Brest.years.missing, main = \"all missing periods\") #> number of obs. in NA blocks: 46  #>  #> Goodness-of-fit test (Poisson). Stat = 30.97919 df = 8 p-value = 0.0001417065  #>  #> Dispersion index 1.791952 p-value 4.850723e-07    par(opar)  ## threshold influence opar <- par(mfrow = c(2,2))  thresh <- c(30, 35, 40, 50)  for (i in 1:length(thresh)) {   bp  <- barplotRenouv(data = Brest.years, threshold = thresh[i],                    na.block = Brest.years.missing,                    main = paste(\"threshold =\", thresh[i], \"cm at Brest\")) } #> number of obs. in NA blocks: 46  #>  #> Goodness-of-fit test (Poisson). Stat = 30.97919 df = 8 p-value = 0.0001417065  #>  #> Dispersion index 1.791952 p-value 4.850723e-07  #> number of obs. in NA blocks: 46  #>  #> Goodness-of-fit test (Poisson). Stat = 24.5375 df = 7 p-value = 0.0009161369  #>  #> Dispersion index 1.740394 p-value 1.827177e-06  #> number of obs. in NA blocks: 46  #>  #> Goodness-of-fit test (Poisson). Stat = 21.5105 df = 5 p-value = 0.000648504  #>  #> Dispersion index 1.605952 p-value 4.652672e-05  #> number of obs. in NA blocks: 46  #>  #> Goodness-of-fit test (Poisson). Stat = 5.722912 df = 3 p-value = 0.1258975  #>  #> Dispersion index 1.159493 p-value 0.1181542   par(opar)"},{"path":"https://irsn.github.io/Renext/reference/expplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Classical ","title":"Classical ","text":"Plot vector using \"exponential distribution\" scales","code":""},{"path":"https://irsn.github.io/Renext/reference/expplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classical ","text":"","code":"expplot(x,         plot.pos = \"exp\",         rate = NULL,         labels = NULL,         mono = TRUE,         ...)"},{"path":"https://irsn.github.io/Renext/reference/expplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classical ","text":"x vector plotted.  plot.pos Plotting position points: either \"exp\" expected ranks     \"med\" median rank approximation (see Details     ).  rate Rate parameter one several \"exponential distribution\" lines     plotted  labels Text display legend \"exponential distribution\" lines     specified mono Monochrome graph?  ... Arguments passed plot.","code":""},{"path":"https://irsn.github.io/Renext/reference/expplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Classical ","text":"plot shows \\(-\\log[1-F(x)]\\) \\(x\\)   \\(F(x)\\) point \\(\\) taken   \\(/(n+1)\\) plot.pos \"exp\",   \"median rank\" approximation \\((-0.3)/(n+0.4)\\)   plot.pos \"med\". data x sample exponential distribution,   points roughly aligned. However largest order   statistics high sampling dispersion.","code":""},{"path":"https://irsn.github.io/Renext/reference/expplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Classical ","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/expplot.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Classical ","text":"log scale y emulated via construction suitable   graduations. careful adding graphical material (points,   etc) graph functions \"add plot\" family   (points, lines, ...). ML estimate rate parameter inverse   sample mean.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/expplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classical ","text":"","code":"x <- rexp(200)  expplot(x, rate = 1/mean(x), labels = \"fitted\")"},{"path":"https://irsn.github.io/Renext/reference/fGEV.MAX.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a GEV distribution from block maxima or r largest order statistics using an aggregated Renewal POT process — fGEV.MAX","title":"Fit a GEV distribution from block maxima or r largest order statistics using an aggregated Renewal POT process — fGEV.MAX","text":"Fit GEV distribution block maxima \\(r\\) largest order   statistics using aggregated Renewal POT process.","code":""},{"path":"https://irsn.github.io/Renext/reference/fGEV.MAX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a GEV distribution from block maxima or r largest order statistics using an aggregated Renewal POT process — fGEV.MAX","text":"","code":"fGEV.MAX(MAX.data, MAX.effDuration,          MAX = NULL,          control = list(maxit = 300, fnscale = -1),          scaleData = TRUE,          cov = TRUE,          info.observed = TRUE,          trace = 0)"},{"path":"https://irsn.github.io/Renext/reference/fGEV.MAX.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a GEV distribution from block maxima or r largest order statistics using an aggregated Renewal POT process — fGEV.MAX","text":"MAX.data list block maxima \\(r\\) largest statistics     Renouv.  MAX.effDuration vector durations Renouv.       durations must identical order common GEV       distribution maxima.  MAX compact representation needed data list.     typically created using (non exported)     Renext:::makeMAXdata function.  control List control optimisation optim.  scaleData Logical. TRUE, data MAX.data scaled     used likelihood. scaling operation     carried excesses (observations minus threshold).  cov Logical. TRUE standard deviation covariance     matrix estimates computed returned sd     cov elements list. However estimated shape     parameter \\(< - 0.5\\) two elements filled     NA regularity conditions can thought     valid.  info.observed Logical. TRUE covariance computed     observed information matrix. FALSE,     expected information matrix used instead.     possible block maxima data, .e.  blocks contain     one observation. computation relies formula given     Prescott Walden. Note default value differs     functions fGPD, flomax     fmaxlo, historical reasons.  trace Integer level verbosity execution. value 0,     nothing printed.","code":""},{"path":"https://irsn.github.io/Renext/reference/fGEV.MAX.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit a GEV distribution from block maxima or r largest order statistics using an aggregated Renewal POT process — fGEV.MAX","text":"data assumed provide maxima \\(r\\) largest statistics   arising aggregated renewal POT model unknown event rate   \\(\\lambda\\) unknown two-parameter Generalised Pareto   Distribution excesses. threshold \\(u\\) fixed   given data three unknown parameters lambda,   scale shape POT model found maximising   likelihood.  vector three parameters GEV   distribution computed transformation. covariance matrix   standard deviations computed well using jacobian matrix   transformation. maximisation log-likelihood rate lambda   concentrated , two-parameter optimisation.","code":""},{"path":"https://irsn.github.io/Renext/reference/fGEV.MAX.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a GEV distribution from block maxima or r largest order statistics using an aggregated Renewal POT process — fGEV.MAX","text":"list estimate Named vector estimated parameters GEV distribution     maxima.  opt Result optimisation.  loglik Identical opt$value. maximised log-likelihood     renewal POT model.   sd Standard deviation estimates (approximation based ML     theory).  cov Covariance matrix estimates (approximation based ML     theory).","code":""},{"path":"https://irsn.github.io/Renext/reference/fGEV.MAX.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit a GEV distribution from block maxima or r largest order statistics using an aggregated Renewal POT process — fGEV.MAX","text":"Renext Computing Details document. Prescott P. Walden .T. (1980) Maximum Likelihood Estimation   Parameters Generalized Extreme-Value Distribution.   Biometrika 67(3), 723-724.","code":""},{"path":"https://irsn.github.io/Renext/reference/fGEV.MAX.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit a GEV distribution from block maxima or r largest order statistics using an aggregated Renewal POT process — fGEV.MAX","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/fGEV.MAX.html","id":"caution","dir":"Reference","previous_headings":"","what":"Caution","title":"Fit a GEV distribution from block maxima or r largest order statistics using an aggregated Renewal POT process — fGEV.MAX","text":"Whatever data, log-likelihood infinite (hence maximal)   vector GEV parameters shape \\(< -1\\)   postive scale. Hence log-likelihood maximised   constraint shape, unconstrained optimisation   used . practice, numerical reasons, estimate usually   remains inside shape > -1 region. estimation   leading shape \\(< -1\\) must considered meaningless.   estimation shape \\(< -0.5\\) considered care.","code":""},{"path":"https://irsn.github.io/Renext/reference/fGEV.MAX.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fit a GEV distribution from block maxima or r largest order statistics using an aggregated Renewal POT process — fGEV.MAX","text":"function get arguments future.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/fGEV.MAX.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a GEV distribution from block maxima or r largest order statistics using an aggregated Renewal POT process — fGEV.MAX","text":"","code":"##==================================================================== ## block maxima: simulated data and comparison with  the 'fgev' ## function from the 'evd' package ##==================================================================== set.seed(1234) u <- 10 nBlocks <- 30 nSim <- 100   ## number of samples  Par <- array(NA, dim = c(nSim, 3, 2),              dimnames = list(NULL, c(\"loc\", \"scale\", \"shape\"), c(\"MAX\", \"evd\"))) LL <- array(NA, dim = c(nSim, 2),             dimnames = list(NULL, c(\"MAX\", \"evd\")))  for (i in 1:nSim) {   rd <- rRendata(threshold = u,                  effDuration = 1,                  lambda = 12,                  MAX.effDuration = rep(1, nBlocks),                  MAX.r = rep(1, nBlocks),                  distname.y = \"exp\", par.y = c(rate = 1 / 100))    MAX <- Renext:::makeMAXdata(rd)   fit.MAX <- fGEV.MAX(MAX = MAX)   fit.evd <- fgev(x = unlist(MAX$data))   Par[i, , \"MAX\"] <- fit.MAX$estimate   Par[i, , \"evd\"] <- fit.evd$estimate   LL[i, \"MAX\"] <- fit.MAX$loglik   LL[i, \"evd\"] <- logLik(fit.evd) } #> Warning: estimated 'shape' is < -0.5. ML inference results not suitable  ##==================================================================== ## r largest: use 'ismev::rlarg.fit' on the venice data set. ## NB 'venice' is taken from the 'evd' package here. ##==================================================================== if (FALSE) { # \\dontrun{  require(ismev); fit1 <- ismev::rlarg.fit(venice)  ## transform data: each row is a block MAX.data <- as.list(as.data.frame(t(venice))) ## remove the NA imposed by the rectangular matrix format MAX.data <- lapply(MAX.data, function(x) x[!is.na(x)]) MAX.effDuration <- rep(1, length(MAX.data))  fit2 <- fGEV.MAX(MAX.data = MAX.data,                  MAX.effDuration = MAX.effDuration)  ## estimates est <- cbind(ismev = fit1$mle, RenextLab = fit2$estimate) print(est) # covariance covs <- array(dim = c(2, 3, 3),               dimnames = list(c(\"ismev\", \"RenextLab\"),                 colnames(fit2$cov), colnames(fit2$cov)))                  covs[\"ismev\", , ] <- fit1$cov covs[\"RenextLab\", , ] <- fit2$cov print(covs) } # }"},{"path":"https://irsn.github.io/Renext/reference/fGPD.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a two-parameters Generalised Pareto Distribution from a sample — fGPD","title":"Fit a two-parameters Generalised Pareto Distribution from a sample — fGPD","text":"Fit two-parameters Generalised Pareto Distribution sample.","code":""},{"path":"https://irsn.github.io/Renext/reference/fGPD.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a two-parameters Generalised Pareto Distribution from a sample — fGPD","text":"","code":"fGPD(x,      info.observed = TRUE,      shapeMin = -0.8,      dCV = 1e-04,      cov = TRUE,      trace = 0)"},{"path":"https://irsn.github.io/Renext/reference/fGPD.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a two-parameters Generalised Pareto Distribution from a sample — fGPD","text":"x sample data vector.  info.observed Logical. observed information matrix used TRUE     expected information matrix used FALSE.  shapeMin Lower bound shape parameter. must >= -1.0     since otherwise ML estimate obtained scale     parameter equal max(x).  dCV Half-length small interval centered 1.0.      Coefficient Variation (CV) falls interval, exponential     distribution fitted, see Details.  cov Logical. FALSE, minimal estimation performed      covariance matrix derivative returned. can useful      large number ML estimations required, e.g. sample      likelihood ratio.  trace Integer level verbosity. value 0 prints nothing.","code":""},{"path":"https://irsn.github.io/Renext/reference/fGPD.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit a two-parameters Generalised Pareto Distribution from a sample — fGPD","text":"function mainly relies flomax   fmaxlo functions. CV larger   1.0 + dCV, Lomax distribution fitted Maximum Likelihood   using concentrated log-likelihood.  instead CV   smaller 1.0 - dCV, maxlo distribution   fitted. Finally, CV -1.0 absolute value <= dCV,   exponential distribution fitted.  cases, result   translated parameter vector GPD. Note CV close 1.0, fitting Lomax   maxlo distribution can lead problems estimated values   shape scale parameter large,   concentrated log-likelihood flat function scale parameter.","code":""},{"path":"https://irsn.github.io/Renext/reference/fGPD.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a two-parameters Generalised Pareto Distribution from a sample — fGPD","text":"list estimate Vector containing estimated values unknown parameters.  CV coefficient variation x computed using     length(x) denominator variance estimation.  logLik, dlogLik maximised value log-likelihood vector     first order derivatives, close zero.  sd, cov Vector approximated standard deviations covariance matrix     estimated parameters. based inversion     expected information matrix.  sd, cov Vector standard deviations covariance matrix     estimates cov formal TRUE.  cvg Logical. convergence reached? logical flag set     TRUE remains compatibility reasons.","code":""},{"path":"https://irsn.github.io/Renext/reference/fGPD.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit a two-parameters Generalised Pareto Distribution from a sample — fGPD","text":"See Renext Computing Details document.","code":""},{"path":"https://irsn.github.io/Renext/reference/fGPD.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fit a two-parameters Generalised Pareto Distribution from a sample — fGPD","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/fGPD.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fit a two-parameters Generalised Pareto Distribution from a sample — fGPD","text":"may happen estimated shape parameter < -0.5,   case expected information matrix can computed,   covariance matrix standard deviations. case,   cov sd objects contain NA values.    problem can arise also shape parameter greater   close value -0.5. Even info.observed   TRUE, information matrix, covariance standard   deviations set NA. true (unknown) value < -0.5, regularity   conditions required ML approximated inference hold. default value info.observed set TRUE   version 3.0-1 standard deviations obtained   choice usually better.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/fGPD.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a two-parameters Generalised Pareto Distribution from a sample — fGPD","text":"","code":"if (FALSE) { # \\dontrun{ set.seed(123456) n <- 500 ns <- 1000 xi <- runif(ns, min = -0.5, max = 0.5) X <- matrix(nrow = n, ncol = ns)  for (i in 1:length(xi)) {   Xi <- rgpd(n, scale = 1, shape = xi[i])   X[ , i] <- Xi   res1 <- fGPD(Xi)   res2 <- try(fpot(Xi, threshold = 0.0))   if (inherits(res2, \"try-error\")) {     cat(res2, \"\\n\")     break   }   logLik1 <- res1$loglik; logLik2 <- logLik(res2)   if (abs(logLik1 - logLik2) > 0.001) {     cat(sprintf(\"i = %d, xi = %7.4f\\n\", i, xi[i]))     mat <- rbind(c(res1$estimate[1:2], logLik = logLik1),                  c(res2$estimate[1:2], logLik = logLik2))     rownames(mat) <- c(\"fGPD\", \"fpot\")     print(mat)   } } } # }"},{"path":"https://irsn.github.io/Renext/reference/fgamma.html","id":null,"dir":"Reference","previous_headings":"","what":"ML estimation of the Gamma distribution — fgamma","title":"ML estimation of the Gamma distribution — fgamma","text":"Fast Maximum Likelihood estimation Gamma distribution.","code":""},{"path":"https://irsn.github.io/Renext/reference/fgamma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ML estimation of the Gamma distribution — fgamma","text":"","code":"fgamma(x, check.loglik = FALSE)"},{"path":"https://irsn.github.io/Renext/reference/fgamma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ML estimation of the Gamma distribution — fgamma","text":"x Sample vector fitted. contain positive non-NA     values.  check.loglik TRUE, log-likelihood recomputed using dgamma     function log = TRUE. result returned     list element.","code":""},{"path":"https://irsn.github.io/Renext/reference/fgamma.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ML estimation of the Gamma distribution — fgamma","text":"likelihood concentrated respect scale   parameter. concentrated log-likelihood strictly concave   function shape parameter can easily maximised   numerically.","code":""},{"path":"https://irsn.github.io/Renext/reference/fgamma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ML estimation of the Gamma distribution — fgamma","text":"list following elements estimate Parameter ML estimates.  sd Vector (asymptotic) standard deviations estimates.  loglik maximised log-likelihood.  check.loglik checked log-likelihood.  cov (asymptotic) covariance matrix computed theoretical     observed information matrix.  info information matrix.","code":""},{"path":"https://irsn.github.io/Renext/reference/fgamma.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ML estimation of the Gamma distribution — fgamma","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/fgamma.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"ML estimation of the Gamma distribution — fgamma","text":"distribution fitted using scale parameter rather   rate (inverse scale).","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/fgamma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ML estimation of the Gamma distribution — fgamma","text":"","code":"set.seed(9876) alpha <- 0.06 beta <- rexp(1) n <- 30 x <- rgamma(n, shape = alpha, scale = beta) fit <- fgamma(x, check.loglik = TRUE)  ## compare with MASS results if (require(MASS)) {    fit.MASS <- fitdistr(x, densfun = \"gamma\")    rate <- 1 / fit$estimate[\"scale\"]    est <- c(fit$estimate, rate = rate)    der <- rate * rate ## derivative of rate w.r.t scale    sdest <- c(fit$sd, rate = der * fit$sd[\"scale\"])    tab <- rbind(sprintf(\" %10.8f \", est),                 sprintf(\"(%10.8f)\", sdest))    colnames(tab) <- c(\"shape\", \"scale\", \"rate\")    rownames(tab) <- c(\"est\", \"sd\")    noquote(tab) } #> Loading required package: MASS #>     shape        scale        rate          #> est  0.05534680   0.05686669   17.58498593  #> sd  (0.01037116) (0.04540000) (14.03912135)"},{"path":"https://irsn.github.io/Renext/reference/flomax.html","id":null,"dir":"Reference","previous_headings":"","what":"ML estimation of the Lomax distribution — flomax","title":"ML estimation of the Lomax distribution — flomax","text":"Fast Maximum Likelihood estimation Lomax distribution.","code":""},{"path":"https://irsn.github.io/Renext/reference/flomax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ML estimation of the Lomax distribution — flomax","text":"","code":"flomax(x,        info.observed = TRUE,        plot = FALSE,        scaleData = TRUE,        cov = TRUE)"},{"path":"https://irsn.github.io/Renext/reference/flomax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ML estimation of the Lomax distribution — flomax","text":"x Sample vector fitted. contain positive     non-NA values.  info.observed observed information matrix used expected one     used?  plot Logical. TRUE, plot produced showing     derivative concentrated log-likelihood, function shape     parameter.  scaleData Logical. TRUE observations x (    positive) divided mean value.  results     theory affected transformation, scaling data     improve estimation cases.  log-likelihood     plots shown using scaled values returned estimate     scale parameter abscissa maximum shown     plot.  cov Logical. FALSE, minimal estimation performed      covariance matrix derivative returned. can useful      large number ML estimations required, e.g. sample      likelihood ratio.","code":""},{"path":"https://irsn.github.io/Renext/reference/flomax.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ML estimation of the Lomax distribution — flomax","text":"likelihood concentrated respect shape parameter.   function increasing small values scale parameter   \\(\\beta\\). large \\(\\beta\\), derivative concentrated   log-likelihood tends zero, sign \\((1 -   \\textrm{CV}^2)\\) \\(\\textrm{CV}\\)   coefficient variation, computed using \\(n\\) denominator   formula standard deviation. ML estimate exist sample coefficient   variation CV less 1 may fail found CV   greater yet close 1.","code":""},{"path":"https://irsn.github.io/Renext/reference/flomax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ML estimation of the Lomax distribution — flomax","text":"list following elements estimate Parameter ML estimates.  sd Vector (asymptotic) standard deviations estimates.  loglik maximised log likelihood.  dloglik Gradient log-likelihood optimum. two      elements normally close zero.  cov (asymptotic) covariance matrix computed theoretical      observed information matrix.  info information matrix.","code":""},{"path":"https://irsn.github.io/Renext/reference/flomax.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ML estimation of the Lomax distribution — flomax","text":"J. del Castillo J. Daoudi (2009) \"Estimation Generalized   Pareto Distribution\", Statist. Probab. Lett. 79(5),   pp. 684-688. D.E. Giles, H. Feng & R.T. Godwin (2013) \"Bias Maximum   Likelihood Estimator Two-Parameter Lomax Distribution\"   Comm. Statist. Theory Methods. Vol. 42, n. 11, pp. 1934-1950. N. Johnson, S. Kotz N. Balakrishnan   Continuous Univariate Distributions vol. 1, Wiley 1994.","code":""},{"path":"https://irsn.github.io/Renext/reference/flomax.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ML estimation of the Lomax distribution — flomax","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/flomax.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"ML estimation of the Lomax distribution — flomax","text":"estimates biased small medium sized sample. bias   positive shape parameter, thus estimated shape tends   larger true unknown value. Fitting Lomax distribution exponential sample might lead   divergence since exponential limit Lomax distribution   large shape large scale constant ratio shape/scale.   Fitting distribution sample coefficient   variation smaller 1 allowed since lead   divergence estimation. default value info.observed set TRUE   version 3.0-1 standard deviations obtained   choice usually better.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/flomax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ML estimation of the Lomax distribution — flomax","text":"","code":"## generate sample set.seed(1234) n <- 200 alpha <- 2 + rexp(1) beta <- 1 + rexp(1) x <- rlomax(n, scale = beta, shape = alpha) res <- flomax(x, plot = TRUE)   ## compare with a GPD with shape 'xi' and scale 'sigma' xi <- 1 / alpha; sigma <- beta * xi   res.evd <- evd::fpot(x, threshold = 0, model = \"gpd\") xi.evd <- res.evd$estimate[\"shape\"] sigma.evd <- res.evd$estimate[\"scale\"] beta.evd <- sigma.evd / xi.evd  alpha.evd <- 1 / xi.evd cbind(Renext = res$estimate, evd = c(alpha = alpha.evd, beta = beta.evd)) #>          Renext       evd #> shape 10.370332 10.376502 #> scale  3.295373  3.297603"},{"path":"https://irsn.github.io/Renext/reference/fmaxlo.html","id":null,"dir":"Reference","previous_headings":"","what":"ML estimation of a 'maxlo' distribution — fmaxlo","title":"ML estimation of a 'maxlo' distribution — fmaxlo","text":"Fast Maximum Likelihood estimation 'maxlo' distribution.","code":""},{"path":"https://irsn.github.io/Renext/reference/fmaxlo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ML estimation of a 'maxlo' distribution — fmaxlo","text":"","code":"fmaxlo(x,        shapeMin = 1.25,        info.observed = TRUE,        plot = FALSE,        scaleData = TRUE,        cov = TRUE)"},{"path":"https://irsn.github.io/Renext/reference/fmaxlo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ML estimation of a 'maxlo' distribution — fmaxlo","text":"x Sample vector fitted. contain positive non-NA     values.  shapeMin Lower bound shape parameter. must >= 1.0     since otherwise ML estimate obtained scale     parameter equal max(x).  info.observed observed information matrix used expected one     used?  plot Logical. TRUE, plot produced showing     derivative concentrated log-likelihood, function shape     parameter. derivative function shown log-likelihood     unconstrained maximisation; used estimation.  scaleData Logical. TRUE observations x (    positive) divided mean value.  results     theory affected transformation, scaling data     improve estimation cases.  log-likelihood     plots shown using scaled values returned estimate     scale parameter abscissa maximum shown     plot.  cov Logical. FALSE, minimal estimation performed      covariance matrix derivative returned. can useful      large number ML estimations required, e.g. sample      likelihood ratio.","code":""},{"path":"https://irsn.github.io/Renext/reference/fmaxlo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ML estimation of a 'maxlo' distribution — fmaxlo","text":"'maxlo' likelihood concentrated respect shape   parameter, thus function maximised one one scalar   argument: scale parameter \\(\\beta\\). large scale   \\(\\beta\\), derivative concentrated log-likelihood tends   zero, sign \\((\\textrm{CV}^2-1)\\)   \\(\\textrm{CV}\\) coefficient variation, computed   using \\(n\\) denominator formula standard   deviation. ML estimate exist sample coefficient   variation CV greater 1.0 may fail   found CV smaller yet close 1.0. expected information matrix can obtained noticing   r.v. \\(Y\\) follows 'maxlo' distribution shape   \\(\\alpha\\) scale \\(\\beta\\) r.v \\(V:= 1/(1-Y/\\beta)\\)   follows Pareto distribution minimum 1 shape parameter   \\(\\alpha\\). information matrix involves second order   moment \\(V\\). default value info.observed set TRUE   version 3.0-1 standard deviations obtained   choice usually better.","code":""},{"path":"https://irsn.github.io/Renext/reference/fmaxlo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ML estimation of a 'maxlo' distribution — fmaxlo","text":"list following elements  estimate Parameter ML estimates.  sd Vector (asymptotic) standard deviations estimates.  loglik maximised log-likelihood.  dloglik Gradient log-likelihood optimum. two elements     normally close zero.  cov (asymptotic) covariance matrix computed theoretical     observed information matrix.  info information matrix.","code":""},{"path":"https://irsn.github.io/Renext/reference/fmaxlo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ML estimation of a 'maxlo' distribution — fmaxlo","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/fmaxlo.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"ML estimation of a 'maxlo' distribution — fmaxlo","text":"name distribution hence also fitting function   still experimental might changed.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/fmaxlo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ML estimation of a 'maxlo' distribution — fmaxlo","text":"","code":"## generate sample set.seed(1234) n <- 200 alpha <- 2 + rexp(1) beta <- 1 + rexp(1) x <- rmaxlo(n, scale = beta, shape = alpha) res <- fmaxlo(x, plot = TRUE)   ## compare with a GPD with shape 'xi' and scale 'sigma' xi <- -1 / alpha; sigma <- -beta * xi res.evd <- evd::fpot(x, threshold = 0, model = \"gpd\") xi.evd <- res.evd$estimate[\"shape\"] sigma.evd <- res.evd$estimate[\"scale\"] beta.evd <- -sigma.evd / xi.evd  alpha.evd <- -1 / xi.evd cbind(Renext = res$estimate, evd = c(alpha = alpha.evd, beta = beta.evd)) #>         Renext      evd #> shape 4.204632 4.204418 #> scale 1.175853 1.175803"},{"path":"https://irsn.github.io/Renext/reference/fweibull.html","id":null,"dir":"Reference","previous_headings":"","what":"ML estimation of classical Weibull distribution — fweibull","title":"ML estimation of classical Weibull distribution — fweibull","text":"Fast Maximum Likelihood estimation classical two parameters   Weibull distribution.","code":""},{"path":"https://irsn.github.io/Renext/reference/fweibull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ML estimation of classical Weibull distribution — fweibull","text":"","code":"fweibull(x, info.observed = TRUE, scaleData = TRUE, cov = TRUE,          check.loglik = FALSE)"},{"path":"https://irsn.github.io/Renext/reference/fweibull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ML estimation of classical Weibull distribution — fweibull","text":"x Sample vector fitted. contain positive     non-NA values.  info.observed observed information matrix used expected one     used?  scaleData data scaled estimation? TRUE,     observations x (positive) divided     mean value.  results theory affected     transformation, scaling data improve estimation     cases.  cov covariance estimates computed?  check.loglik TRUE, log-likelihood recomputed using     dweibull function log = TRUE. result     returned list element.","code":""},{"path":"https://irsn.github.io/Renext/reference/fweibull.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ML estimation of classical Weibull distribution — fweibull","text":"ML estimates obtained thanks reparameterisation   \\(\\eta = scale^{1/shape}\\) place   shape. allows maximisation one-dimensional   likelihood \\(L\\) since \\(\\eta\\) parameter can   concentrated \\(L\\). also allows determination   expected information matrix   \\([shape,\\,\\eta]\\) rather usual   observed information.","code":""},{"path":"https://irsn.github.io/Renext/reference/fweibull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ML estimation of classical Weibull distribution — fweibull","text":"list estimate Parameter ML estimates.  sd (asymptotic) standard deviation estimate.  cov (asymptotic) covariance matrix computed theoretical     observed Information matrix.  eta estimated value eta.","code":""},{"path":"https://irsn.github.io/Renext/reference/fweibull.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ML estimation of classical Weibull distribution — fweibull","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/fweibull.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"ML estimation of classical Weibull distribution — fweibull","text":"default value info.observed set TRUE   version 3.0-1 standard deviations obtained   choice usually better.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/fweibull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ML estimation of classical Weibull distribution — fweibull","text":"","code":"n <- 1000 set.seed(1234) shape <- 2 * runif(1) x <- 100 * rweibull(n, shape = 0.8, scale = 1) res <- fweibull(x)  ## compare with MASS if (require(MASS)) {    res2 <- fitdistr(x , \"weibull\")    est <- cbind(res$estimate, res2$estimate)    colnames(est) <- c(\"Renext\", \"MASS\")    loglik <- c(res$loglik, res2$loglik)    est <- rbind(est, loglik)    est } #>               Renext          MASS #> shape      0.7690861     0.7690905 #> scale     96.5701573    96.5741808 #> loglik -5659.0502224 -5659.0502229  ## Weibull plot weibplot(x,          shape = c(res$estimate[\"shape\"], res2$estimate[\"shape\"]),          scale = c(res$estimate[\"scale\"], res2$estimate[\"scale\"]),          labels = c(\"Renext 'fweibull'\", \"MASS 'fitdistr'\"),          mono = TRUE)"},{"path":"https://irsn.github.io/Renext/reference/gev2Ren.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate a vector of GEV parameters into renewal model — gev2Ren","title":"Translate a vector of GEV parameters into renewal model — gev2Ren","text":"Translate (named) vector GEV parameters renewal   model.","code":""},{"path":"https://irsn.github.io/Renext/reference/gev2Ren.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate a vector of GEV parameters into renewal model — gev2Ren","text":"","code":"gev2Ren(parGev,         threshold = NULL,         lambda = NULL,         w = 1,         distname.y = c(\"gpd\", \"GPD\", \"lomax\", \"maxlo\"),         vcovGev = NULL,         jacobian = TRUE,         plot = FALSE)"},{"path":"https://irsn.github.io/Renext/reference/gev2Ren.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate a vector of GEV parameters into renewal model — gev2Ren","text":"parGev Named vector GEV coefficients. must     vector length 3, names \"loc\", \"scale\"     \"shape\".  threshold threshold renewal model.  lambda rate renewal model.  w duration corresponding GEV parameters. Positive numeric     scalar assumed years.  distname.y name distributions excesses     renewal model.  vcovGev (co)variance matrix parameter. must     symmetric positive matrix 3 rows 3 columns,     rownames correspondence parameter names.  jacobian Logical. TRUE Jacobian matrix     returned \"jacobian\" attribute     result.  plot TRUE rough plot produced check     accordance GEV renewal models.     return level plot two return level curves     shown.","code":""},{"path":"https://irsn.github.io/Renext/reference/gev2Ren.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate a vector of GEV parameters into renewal model — gev2Ren","text":"vector parameters similar coefficient vector object   class \"Renouv\".  vector element named   \"lambda\" corresponding rate Homogeneous Poisson   Process. elements parameters distribution   POT excesses. result attributes named \"distname.y\"   \"threshold\" can used build Renouv object   using RenouvNoEst function.  result may well   attributes \"jacobian\" \"vcov\" according   arguments values. objects used attention   element names, since parameter order may one   expect.","code":""},{"path":"https://irsn.github.io/Renext/reference/gev2Ren.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Translate a vector of GEV parameters into renewal model — gev2Ren","text":"Yves Deville","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/gev2Ren.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Translate a vector of GEV parameters into renewal model — gev2Ren","text":"","code":"## GEV parameters and block duration set.seed(1234) muGev <- rnorm(1); sigmaGev <- rgamma(1, shape = 5) xiGev <- runif(1, min = -0.2, max = 0.3) parGev <- c(\"loc\" = muGev, \"scale\" = sigmaGev, \"shape\" = xiGev) parRen <- gev2Ren(parGev, lambda = 1, jacobian = TRUE, plot = TRUE)  ## check by reverse transform parGevCheck <- Ren2gev(parRen, threshold = attr(parRen, \"threshold\")) rbind(parGev, parGevCheck) #>                   loc    scale     shape #> parGev      -1.207066 5.107758 0.2304577 #> parGevCheck -1.207066 5.107758 0.2304577  ##======================================================================= ## slightly positive shape convert to \"gpd\" and \"lomax\" distributions ##======================================================================= x <- rgev(n = 100, loc = 3500, scale = 1000, shape = 0.1) fit.gev <- fgev(x, start = list(\"loc\" = 3000, \"scale\" = 1000, \"shape\" = 0.1)) #> Warning: optimization may not have succeeded distNames <- c(\"gpd\", \"lomax\") namesRen <- c(\"lambda\", \"scale\", \"shape\") # works for the 2 target dists fitNew <- list() opar <- par(mfrow = c(3, 1)) for (nm in distNames) {     parRen <- gev2Ren(parGev = fit.gev$estimate, threshold = 2800,                     vcov = fit.gev$var.cov, distname.y = nm)   namesRen <- c(\"lambda\", \"scale\", \"shape\")   myVcov <- attr(parRen, \"vcov\")[namesRen, namesRen]   fitNew[[nm]] <- RenouvNoEst(threshold = attr(parRen, \"threshold\"),                               estimate = parRen,                               distname.y = attr(parRen, \"distname.y\"),                               cov = myVcov)   plot(fitNew[[nm]], Tlim = c(1, 200)) } plot(fit.gev, which = 4)  par(opar) ##======================================================================= ## slightly negative shape convert to \"gpd\" and \"maxlo\" distribution ##======================================================================= x <- rgev(n = 100, loc = 3500, scale = 1000, shape = -0.2) fit.gev <- fgev(x, start = list(\"loc\" = 3000, \"scale\" = 1000, \"shape\" = 0.1)) #> Warning: optimization may not have succeeded distNames <- c(\"gpd\", \"maxlo\") namesRen <- c(\"lambda\", \"scale\", \"shape\") # works for the 2 target dists fitNew <- list() opar <- par(mfrow = c(3, 1)) for (nm in distNames) {   parRen <- gev2Ren(parGev = fit.gev$estimate, threshold = 2800,                     vcov = fit.gev$var.cov, distname.y = nm)   myVcov <- attr(parRen, \"vcov\")[namesRen, namesRen]   fitNew[[nm]] <- RenouvNoEst(threshold = attr(parRen, \"threshold\"),                               estimate = parRen,                               distname.y = attr(parRen, \"distname.y\"),                               cov = myVcov)   plot(fitNew[[nm]], Tlim = c(1, 200)) } plot(fit.gev, which = 4)  par(opar)"},{"path":"https://irsn.github.io/Renext/reference/gof.date.html","id":null,"dir":"Reference","previous_headings":"","what":"Goodness-of-fit for the distribution of dates — gof.date","title":"Goodness-of-fit for the distribution of dates — gof.date","text":"Goodness--fit diagnostics distribution event dates   (assumed) Poisson process","code":""},{"path":"https://irsn.github.io/Renext/reference/gof.date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Goodness-of-fit for the distribution of dates — gof.date","text":"","code":"gof.date(date,              start = NULL,              end = NULL,              plot = TRUE,              main = NULL,              skip = NULL,              plot.type = \"skip\")"},{"path":"https://irsn.github.io/Renext/reference/gof.date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Goodness-of-fit for the distribution of dates — gof.date","text":"date Object class POSIXct (can coerced     class) giving dates tested. Must strictly increasing     order.  start beginning interval, POSIXct object.     NULL, first event date used.  end Object class POSIXct end interval.     NULL, last event date used.  plot plot shown?  main Character giving main title plot. default NULL     stands default main describing period.  skip Optional data.frame columns start end     indicating start end skipped periods. two columns need     coerced POSIXct objects. can POSIXct character     POSIX datetime format.  plot.type Character indicating type plot produce skip     data.frame given. plot.type = \"skip\" plot shows     missing periods greyed rectangles displays results     Kolmogorov-Smirnov (KS) test performed events.     \"omit\" case missing periods collapsed vertical     lines plot displayed results \"effective\"     KS test uniformity performed omitting missing periods.","code":""},{"path":"https://irsn.github.io/Renext/reference/gof.date.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Goodness-of-fit for the distribution of dates — gof.date","text":"homogeneous Poisson process, events occur time interval   uniform fashion. precisely, given time interval   distribution event dates conditional number \\(n\\)   distribution order statistics sample size \\(n\\)   uniform distribution interval. interval limits taken events uniformity statement   remains true, inner events. behaviour met   start end given taken first   last events date.","code":""},{"path":"https://irsn.github.io/Renext/reference/gof.date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Goodness-of-fit for the distribution of dates — gof.date","text":"list effKS.statistic, KS.statistic Kolmogorov-Smirnov global test statistic uniformity (bilateral     test) omitting slipped periods .  effKS.pvalue, KS.pavalue Critical probability KS test omitting skipped periods .  effnevt, nevt Number events omitting skipped periods .  effduration, duration Effective duration .e. total duration non-skipped periods.     years, omitting skipped periods .  effrate, rate Occurrence rate number events year, omitting skipped       periods .  effduration, duation Total duration years, omitting missing periods .  noskip Data.frame object giving indications periods     skipped (hence usually non-missing periods). :     start, end (POSIX), duration (years)     rate (number events year) Kolmogorov test     statistic p-value. data.frame available     suitable skip given.  number events corresponding indications args   0, function returns NULL warning.   number events less 6 warning shown.","code":""},{"path":"https://irsn.github.io/Renext/reference/gof.date.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Goodness-of-fit for the distribution of dates — gof.date","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/gof.date.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Goodness-of-fit for the distribution of dates — gof.date","text":"practical contexts missing periods often met   datasets. diagnostic therefore applied every   period missing data. Even event dates seem reasonably   uniform, good idea check rates differ   significantly intervals. events missing suitable information given via   skip argument, global rate, KS.statistic   KS.pvalue little interest. Yet graph might   instructive.","code":""},{"path":"https://irsn.github.io/Renext/reference/gof.date.html","id":"warning","dir":"Reference","previous_headings":"","what":"Warning","title":"Goodness-of-fit for the distribution of dates — gof.date","text":"skipped periods exist number events, duration, rate  global KS test must computed omitting skipped periods  duration retaining valid interevents. indication given  nevt rate duration used  skipped period exist (skip = NULL input) replaced  effnevt, effrate effduration otherwise.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/gof.date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Goodness-of-fit for the distribution of dates — gof.date","text":"","code":"## Use \"Brest\" dataset ## simple plot. Kolmogorov-Smirnov is not useful gof1 <- gof.date(date = Brest$OTdata$date)   ## consider missing periods. Much better! gof2 <- gof.date(date = Brest$OTdata$date,          skip = Brest$OTmissing,          start = Brest$OTinfo$start,          end = Brest$OTinfo$end)   print(gof2$noskip) #>         start        end    duration nevt      rate         Dn           KS #> 1  1846-01-04 1847-01-01  0.99110198   17 17.152624 0.25869353 1.717288e-01 #> 2  1847-01-21 1852-01-21  4.99931554   48  9.601314 0.20577766 2.929104e-02 #> 3  1852-02-08 1857-05-31  5.30869268   67 12.620810 0.19930261 8.281010e-03 #> 4  1859-11-24 1860-01-20  0.15605749    3 19.223684 0.54385965 2.390263e-01 #> 5  1860-05-01 1861-12-19  1.63449692   17 10.400754 0.21006996 3.869240e-01 #> 6  1862-01-18 1863-08-31  1.61533196   15  9.286017 0.40790960 9.055002e-03 #> 7  1864-03-01 1867-08-11  3.44421629   40 11.613672 0.13441971 4.276681e-01 #> 8  1867-09-02 1868-07-14  0.86516085    4  4.623418 0.43670886 3.280955e-01 #> 9  1868-08-01 1872-03-27  3.65229295   36  9.856822 0.22318008 4.680336e-02 #> 10 1872-04-01 1872-04-14  0.03559206    0  0.000000         NA           NA #> 11 1872-04-20 1874-04-30  2.02600958   23 11.352365 0.31345476 1.658943e-02 #> 12 1874-05-12 1877-08-31  3.30458590   34 10.288732 0.31068766 2.056766e-03 #> 13 1877-10-02 1878-08-31  0.91170431   14 15.355856 0.24882025 2.991187e-01 #> 14 1878-10-03 1891-11-02 13.08145106  118  9.020406 0.21491511 3.689848e-05 #> 15 1891-11-30 1897-05-31  5.50034223   29  5.272399 0.18726077 2.303942e-01 #> 16 1897-08-02 1907-05-31  9.82340862   51  5.191681 0.17492950 7.782022e-02 #> 17 1907-07-01 1910-04-19  2.80082136   10  3.570381 0.26705767 4.022871e-01 #> 18 1910-05-03 1911-03-22  0.88432580    7  7.915635 0.56965944 1.126370e-02 #> 19 1911-03-29 1915-01-01  3.76180698   55 14.620633 0.13247320 2.650737e-01 #> 20 1915-01-02 1916-12-31  1.99589322   27 13.527778 0.16735254 3.925299e-01 #> 21 1917-02-02 1920-09-15  3.61670089   16  4.423921 0.16639856 7.073911e-01 #> 22 1920-09-19 1922-08-31  1.94661191    9  4.623418 0.25316456 5.312227e-01 #> 23 1922-10-02 1922-12-09  0.18617385    0  0.000000         NA           NA #> 24 1922-12-16 1923-07-17  0.58316222    6 10.288732 0.49530516 6.990292e-02 #> 25 1923-07-27 1937-08-01 14.01505818  123  8.776275 0.12200363 5.137767e-02 #> 26 1937-08-02 1937-11-01  0.24914442    2  8.027473 0.50549451 4.890714e-01 #> 27 1939-01-01 1940-06-23  1.47570157    9  6.098794 0.38486910 1.040578e-01 #> 28 1940-07-02 1944-04-30  3.82751540   35  9.144313 0.12511751 5.996061e-01 #> 29 1952-09-30 1952-11-05  0.09856263    0  0.000000         NA           NA #> 30 1952-11-08 1952-12-22  0.12046543    1  8.301136 0.56818182 8.636364e-01 #> 31 1952-12-25 1980-01-11 27.04449008  222  8.208696 0.05691417 4.683601e-01 #> 32 1980-01-28 1980-02-10  0.03559206    1 28.096154 0.61538462 7.692308e-01 #> 33 1980-02-14 1980-07-17  0.42162902    1  2.371753 0.73376623 5.324675e-01 #> 34 1980-08-17 1981-09-20  1.09240246    3  2.746241 0.44360902 4.754802e-01 #> 35 1981-09-29 1982-01-01  0.25735797    5 19.428191 0.79787234 6.747748e-04 #> 36 1982-01-07 1982-05-07  0.32854209    1  3.043750 0.70000000 6.000000e-01 #> 37 1982-05-24 1982-10-24  0.41889117    3  7.161765 0.80392157 1.507716e-02 #> 38 1982-10-31 1982-12-06  0.09856263    1 10.145833 0.77777778 4.444444e-01 #> 39 1982-12-20 1991-12-31  9.02943190   64  7.087932 0.10497840 4.504295e-01 #> 40 1992-01-01 1992-12-31  0.99931554    9  9.006164 0.34581431 1.827572e-01 #> 41 1993-01-10 1999-12-31  6.97056810   71 10.185683 0.09446467 5.200674e-01 #> 42 2000-01-06 2008-01-10  8.01095140   92 11.484279 0.15691402 1.912773e-02  ## Second type of graph gof3 <- gof.date(date = Brest$OTdata$date,          skip = Brest$OTmissing,          start = Brest$OTinfo$start,          end = Brest$OTinfo$end,          plot.type = \"omit\")   ## non-skipped periods at Brest ns <- skip2noskip(skip = Brest$OTmissing,                  start = Brest$OTinfo$start,                  end = Brest$OTinfo$end)  ## say 9 plots/diagnostics oldpar <- par(mar = c(3, 4, 3, 2), mfcol = c(3, 3))  for (i in 1:9) {   GOF <- gof.date(date = Brest$OTdata$date,            start = ns$start[i],            end = ns$end[i]) } #> Warning: gof.date called with a small number of evts (< 6) #> Warning: gof.date called with a small number of evts (< 6)   par(oldpar)"},{"path":"https://irsn.github.io/Renext/reference/gofExp.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Goodness-of-fit test for exponential distribution — gofExp.test","title":"Goodness-of-fit test for exponential distribution — gofExp.test","text":"Bartlett's goodness--fit test exponential distribution","code":""},{"path":"https://irsn.github.io/Renext/reference/gofExp.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Goodness-of-fit test for exponential distribution — gofExp.test","text":"","code":"gofExp.test(x)"},{"path":"https://irsn.github.io/Renext/reference/gofExp.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Goodness-of-fit test for exponential distribution — gofExp.test","text":"x Sample positive values.","code":""},{"path":"https://irsn.github.io/Renext/reference/gofExp.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Goodness-of-fit test for exponential distribution — gofExp.test","text":"list elements statistic Statistic.  p.value Critical value.","code":""},{"path":"https://irsn.github.io/Renext/reference/gofExp.test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Goodness-of-fit test for exponential distribution — gofExp.test","text":"See Yagouti ., Abi-Zeid ., Ouarda, T.B.M.J. B. Bobée   (2001), Revue de processus ponctuels et synthèse de   tests statistiques pour le choix d'un type de processus Revue   des Sciences de l'Eau, 1, pp. 323-361.","code":""},{"path":"https://irsn.github.io/Renext/reference/gofExp.test.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Goodness-of-fit test for exponential distribution — gofExp.test","text":"Yves Deville","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/gofExp.test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Goodness-of-fit test for exponential distribution — gofExp.test","text":"","code":"## a sample of size 30  x <- rexp(30)  res <- gofExp.test(x)   ## ns samples: p.values should look as uniform on (0, 1)  ns <- 100  xmat <- matrix(rexp(30*ns), nrow = ns, ncol = 30)  p.values <- apply(xmat, 1, function(x) gofExp.test(x)$p.value)  plot(sort(p.values), type = \"p\", pch = 16)"},{"path":"https://irsn.github.io/Renext/reference/gumbel2Ren.html","id":null,"dir":"Reference","previous_headings":"","what":"Translate a vector of Gumbel parameters into a vector of parameters for a renewal model — gumbel2Ren","title":"Translate a vector of Gumbel parameters into a vector of parameters for a renewal model — gumbel2Ren","text":"Translate (named) vector Gumbel parameters vector   parameters renewal model.","code":""},{"path":"https://irsn.github.io/Renext/reference/gumbel2Ren.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Translate a vector of Gumbel parameters into a vector of parameters for a renewal model — gumbel2Ren","text":"","code":"gumbel2Ren(parGumbel,            threshold = NULL,            lambda = NULL,            w = 1,            distname.y = c(\"exponential\"),            vcovGumbel = NULL,            jacobian = TRUE,            plot = FALSE)"},{"path":"https://irsn.github.io/Renext/reference/gumbel2Ren.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Translate a vector of Gumbel parameters into a vector of parameters for a renewal model — gumbel2Ren","text":"parGumbel Named vector Gumbel parameters, name \"scale\"     \"shape\".  threshold threshold target Renouv parameters.  lambda rate target Renouv parameters.  w block duration conversion.  distname.y distribution excesses.  vcovGumbel covariance matrix Gumbel parameters.  jacobian Logical. TRUE, jacobian used.  plot Logical. TRUE, rough plot drawn.","code":""},{"path":"https://irsn.github.io/Renext/reference/gumbel2Ren.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Translate a vector of Gumbel parameters into a vector of parameters for a renewal model — gumbel2Ren","text":"Given vector Gumbel parameters block duration, exits   infinity Renouv models exponential excesses leading   prescribed Gumbel distributions maximum marks   block duration w.  One models may chosen   specifying either threshold rate lambda.","code":""},{"path":"https://irsn.github.io/Renext/reference/gumbel2Ren.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Translate a vector of Gumbel parameters into a vector of parameters for a renewal model — gumbel2Ren","text":"vector Renouv parameters, can used   RenouvNoEst.","code":""},{"path":"https://irsn.github.io/Renext/reference/gumbel2Ren.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Translate a vector of Gumbel parameters into a vector of parameters for a renewal model — gumbel2Ren","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/gumbel2Ren.html","id":"caution","dir":"Reference","previous_headings":"","what":"Caution","title":"Translate a vector of Gumbel parameters into a vector of parameters for a renewal model — gumbel2Ren","text":"Renouv models lead return level curve whatever   choice threshold lambda. However,   covariance matrix given, covariance matrix Renouv   parameters consequently confidence bounds depend   threshold rate. computed covariance matrix must general   considered putative.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/ini.mixexp2.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple estimation for the mixture of two exponential distributions — ini.mixexp2","title":"Simple estimation for the mixture of two exponential distributions — ini.mixexp2","text":"Compute simple (preliminary) estimation tree parameters   mixture two exponential distributions","code":""},{"path":"https://irsn.github.io/Renext/reference/ini.mixexp2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple estimation for the mixture of two exponential distributions — ini.mixexp2","text":"","code":"ini.mixexp2(x, plot = FALSE)"},{"path":"https://irsn.github.io/Renext/reference/ini.mixexp2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple estimation for the mixture of two exponential distributions — ini.mixexp2","text":"x Sample: numerical vector elements >0.   plot graphic displayed?","code":""},{"path":"https://irsn.github.io/Renext/reference/ini.mixexp2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simple estimation for the mixture of two exponential distributions — ini.mixexp2","text":"function gives estimators using several methods necessary.   goal find rates rate1, rate2 mixing   probability prob1 'feasibility' constraints 0 <   rate1 < rate2 0 < prob1 < 1. First method moments used. estimates feasible   returned method = \"moments\".    , estimates derived using two linear regressions.   regression without constant using smallest values gives   estimator mean rate.  regression using largest   values gives rate1 prob1. Yet constraints must   fulfilled. , estimates returned (together   method = \"Hreg\" suggesting cumulative hazard   regression). , (poor) default estimate returned   method = \"arbitrary\".","code":""},{"path":"https://irsn.github.io/Renext/reference/ini.mixexp2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple estimation for the mixture of two exponential distributions — ini.mixexp2","text":"list estimate vector named elements \"prob1\", \"rate1\"     \"rate2\".  method method really produced estimators.","code":""},{"path":"https://irsn.github.io/Renext/reference/ini.mixexp2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simple estimation for the mixture of two exponential distributions — ini.mixexp2","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/ini.mixexp2.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Simple estimation for the mixture of two exponential distributions — ini.mixexp2","text":"method moments implemented mom.mixexp2.    investigations needed compare estimators (moments Hreg)   select best strategy. Note function returns estimate within list   longer vector named elements case .","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/ini.mixexp2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple estimation for the mixture of two exponential distributions — ini.mixexp2","text":"","code":"set.seed(1234) x <- rmixexp2(n = 100, prob1 = 0.5, rate2 = 4) res <- ini.mixexp2(x, plot = TRUE)"},{"path":"https://irsn.github.io/Renext/reference/iniMAX.html","id":null,"dir":"Reference","previous_headings":"","what":"Initial estimation of GPD parameters for an aggregated renewal model — parIni.MAX","title":"Initial estimation of GPD parameters for an aggregated renewal model — parIni.MAX","text":"Initial estimation aggregated renewal model GPD marks.","code":""},{"path":"https://irsn.github.io/Renext/reference/iniMAX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initial estimation of GPD parameters for an aggregated renewal model — parIni.MAX","text":"","code":"parIni.MAX(MAX, threshold, distname.y = \"exp\") parIni.OTS(OTS, threshold, distname.y = \"exp\")"},{"path":"https://irsn.github.io/Renext/reference/iniMAX.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initial estimation of GPD parameters for an aggregated renewal model — parIni.MAX","text":"MAX list describing partial observations MAX type.     block maxima block \\(r\\)-largest statistics. list must     contain elements named block, effDuration, r,     data (-block list \\(r\\)-largest statistics).  OTS list describing partial observations OTS type.     observations block thresholds, smaller     threshold. list contains block,     effDuration, threshold, r data (    -block list observations).  threshold threshold POT-renewal model. location     parameter marks Largest Order Statistics     observed.  distname.y name distribution. now can \"exp\"     \"exponential\" exponential excesses implying Gumbel     block maxima, \"gpd\" GPD excesses implying GEV block     maxima. initialisation cases, result     formatted according target distribution.","code":""},{"path":"https://irsn.github.io/Renext/reference/iniMAX.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Initial estimation of GPD parameters for an aggregated renewal model — parIni.MAX","text":"functions estimate Poisson rate lambda along   shape parameter say sigma exponential excesses.    target distribution GPD, initial shape parameter taken   0. \"MAX\" case, estimates obtained regressing maxima   \\(r\\)-Largest Order Statistics within blocks   log-duration blocks. response block minimum   \\(r\\) available Largest Order Statistics found within   block, \\(r\\) generally vary across block.  blocks   contain \\(r > 1\\) largest order statistics, corresponding   spacings used compute spacings-based estimation   \\(\\sigma\\). estimator independent regression   estimator \\(\\sigma\\) two estimators can combined   weighted mean. \"OTS\" case, estimate lambda obtained   Poisson regression using log durations blocks   offset. estimate sigma simply mean   available excesses, assumption share exponential   distribution.","code":""},{"path":"https://irsn.github.io/Renext/reference/iniMAX.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Initial estimation of GPD parameters for an aggregated renewal model — parIni.MAX","text":"vector containing estimate Poisson rate \\(\\lambda\\),   estimates parameters target distribution   excesses. exponential excesses, simply   rate parameter. GPD excesses,   scale shape parameters, second taken zero.","code":""},{"path":"https://irsn.github.io/Renext/reference/iniMAX.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Initial estimation of GPD parameters for an aggregated renewal model — parIni.MAX","text":"See document Renext Computing Details.","code":""},{"path":"https://irsn.github.io/Renext/reference/iniMAX.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Initial estimation of GPD parameters for an aggregated renewal model — parIni.MAX","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/iniMAX.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Initial estimation of GPD parameters for an aggregated renewal model — parIni.MAX","text":"MAX case, estimation possible number   blocks greater \\(1\\), since otherwise information   \\(\\lambda\\) can gained data; recall time   events occurred within block known used.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/iniMAX.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initial estimation of GPD parameters for an aggregated renewal model — parIni.MAX","text":"","code":"set.seed(1234) ## initialisation for 'MAX' data u <- 10 nBlocks <- 30 nSim <- 100 ParMAX <- matrix(NA, nrow = nSim, ncol = 2) colnames(ParMAX) <- c(\"lambda\", \"sigma\")  for (i in 1:nSim) {   rd <- rRendata(threshold = u,                  effDuration = 1,                  lambda = 12,                  MAX.effDuration = c(60, rexp(nBlocks)),                  MAX.r = c(5, 2 + rpois(nBlocks, lambda = 1)),                  distname.y = \"exp\", par.y = c(rate = 1 / 100))    MAX <- Renext:::makeMAXdata(rd)   pari <- parIni.MAX(MAX = MAX, threshold = u)   ParMAX[i, ] <- pari    } ## the same for OTS data u <- 10 nBlocks <- 10 nSim <- 100 ParOTS <- matrix(NA, nrow = nSim, ncol = 2) colnames(ParOTS) <- c(\"lambda\", \"sigma\") rds <- list()  for (i in 1:nSim) {   rd <- rRendata(threshold = u,                  effDuration = 1,                  lambda = 12,                  OTS.effDuration = rexp(nBlocks, rate = 1 / 10),                  OTS.threshold = u + rexp(nBlocks, rate = 1 / 10),                  distname.y = \"exp\", par.y = c(rate = 1 / 100))   rds[[i]] <- rd   OTS <-  Renext:::makeOTSdata(rd)   pari <- parIni.OTS(OTS = OTS, threshold = u)   ParOTS[i, ] <- pari    }"},{"path":"https://irsn.github.io/Renext/reference/interevt.html","id":null,"dir":"Reference","previous_headings":"","what":"Interevents (or interarrivals) from events dates — interevt","title":"Interevents (or interarrivals) from events dates — interevt","text":"Compute intervent durations events dates","code":""},{"path":"https://irsn.github.io/Renext/reference/interevt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interevents (or interarrivals) from events dates — interevt","text":"","code":"interevt(date,             skip = NULL, noskip = NULL)"},{"path":"https://irsn.github.io/Renext/reference/interevt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interevents (or interarrivals) from events dates — interevt","text":"date POSIXct vector containing date(time) events.  skip data.frame containing two POSIXct columns start     end describing periods skip .  noskip data.frame like skip periods define NON     skipped part events.","code":""},{"path":"https://irsn.github.io/Renext/reference/interevt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interevents (or interarrivals) from events dates — interevt","text":"Interevents time differences successive dates.    date argument contains occurrence times \\(T_i\\)    successive events homogeneous Poisson process, interevents    \\(T_i -T_{-1}\\) mutually independent    exponential distribution. time intervals skipped independently event    point process, may consider interevents    \\(T_i-T_{-1}\\) two non-skipped events    time interval \\((T_{-1},\\,T_i)\\)    contains skipped interval.  interevents still mutually    independent exponential distribution.  skip    noskip NULL computation therefore    retains couples two successive datetimes \"falling\"    non-skipped period, number can therefore associated    interevent.","code":""},{"path":"https://irsn.github.io/Renext/reference/interevt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interevents (or interarrivals) from events dates — interevt","text":"list mainly containing interevt data.frame.  interevt Data.frame. row describes retained interevent     period integer giving \"noskip\" period, start     end POSIXct duration days.  noskip skip noskip args given.     data.frame containing broadly information     noskip arg given information deduced     skip arg given.  axis needed, list material build axis uneven     ticks gof.date skip.action = \"omit\".","code":""},{"path":"https://irsn.github.io/Renext/reference/interevt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Interevents (or interarrivals) from events dates — interevt","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/interevt.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Interevents (or interarrivals) from events dates — interevt","text":"one two arguments skip noskip   given call. case, rows returned data.frame   objects describe periods chronological order. : start   row 2 must end value row 1   . Note usually less interevents dates since two   successive dates retained interevent   separated missing period. limit case, can   interevents noskip periods contain one date   date vector.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/interevt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interevents (or interarrivals) from events dates — interevt","text":"","code":"## Use Brest data ie <- interevt(date = Brest$OTdata$date, skip = Brest$OTmissing)  expplot(ie$interevt$duration, rate = 1 / mean(ie$interevt$duration),   main = \"No threshold\")   ## keep only data over a threshold ind1 <- Brest$OTdata$Surge >= 35 ie1 <- interevt(Brest$OTdata$date[ind1], skip = Brest$OTmissing) expplot(ie1$interevt$duration, main = \"Threshold = 35\")   ## increase threshold ind2 <- Brest$OTdata$Surge >= 55 ie2 <- interevt(date = Brest$OTdata$date[ind2], skip = Brest$OTmissing) expplot(ie2$interevt$duration, main = \"Threshold = 55 cm\")"},{"path":"https://irsn.github.io/Renext/reference/logLik.Renouv.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-likelihood of a ","title":"Log-likelihood of a ","text":"Log-likelihood, AIC, BIC number observations object class \"Renouv\".","code":""},{"path":"https://irsn.github.io/Renext/reference/logLik.Renouv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-likelihood of a ","text":"","code":"# S3 method for class 'Renouv' AIC(object, ..., k = 2) # S3 method for class 'Renouv' BIC(object, ...) # S3 method for class 'Renouv' logLik(object, ...) # S3 method for class 'Renouv' nobs(object, ...)"},{"path":"https://irsn.github.io/Renext/reference/logLik.Renouv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-likelihood of a ","text":"object Object class \"Renouv\".  k See AIC.  ... used yet.","code":""},{"path":"https://irsn.github.io/Renext/reference/logLik.Renouv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Log-likelihood of a ","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/logLik.Renouv.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Log-likelihood of a ","text":"logLik, AIC BIC can used object   class \"Renouv\" makes use historical data.   case, number observations may misleading since single   historical observation may concern dozens years thus   much greater impact estimation tail \"ordinary\"   observation.","code":""},{"path":"https://irsn.github.io/Renext/reference/logLik.Renouv.html","id":"caution","dir":"Reference","previous_headings":"","what":"Caution","title":"Log-likelihood of a ","text":"Comparing log-likelihoods, AIC BIC different Renouv   objects makes sense share data   threshold.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/mom.mixexp2.html","id":null,"dir":"Reference","previous_headings":"","what":"Moment estimation for the mixture of two exponential distributions — mom.mixexp2","title":"Moment estimation for the mixture of two exponential distributions — mom.mixexp2","text":"Compute moment estimation tree parameters mixture   two exponential distributions","code":""},{"path":"https://irsn.github.io/Renext/reference/mom.mixexp2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Moment estimation for the mixture of two exponential distributions — mom.mixexp2","text":"","code":"mom.mixexp2(x)"},{"path":"https://irsn.github.io/Renext/reference/mom.mixexp2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Moment estimation for the mixture of two exponential distributions — mom.mixexp2","text":"x Sample. Vector containing values >0.","code":""},{"path":"https://irsn.github.io/Renext/reference/mom.mixexp2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Moment estimation for the mixture of two exponential distributions — mom.mixexp2","text":"three parameters (probability two rates) computed   first three moments (theoretical sample). can shown   inverse rates obtained solving quadratic equation. However   roots can negative complex estimates valid   ones.","code":""},{"path":"https://irsn.github.io/Renext/reference/mom.mixexp2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Moment estimation for the mixture of two exponential distributions — mom.mixexp2","text":"list elements estimate vector named elements \"prob1\", \"rate1\"     \"rate2\". moment estimators valid (negative     complex rates), vector three NA returned.  method Character \"moments\".","code":""},{"path":"https://irsn.github.io/Renext/reference/mom.mixexp2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Moment estimation for the mixture of two exponential distributions — mom.mixexp2","text":"Paul R. Rider. Method Moments Applied Mixture Two   Exponential Distributions. Ann. Math. Statist. Vol. 32, Number   1 (1961), 143-147.","code":""},{"path":"https://irsn.github.io/Renext/reference/mom.mixexp2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Moment estimation for the mixture of two exponential distributions — mom.mixexp2","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/mom.mixexp2.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Moment estimation for the mixture of two exponential distributions — mom.mixexp2","text":"theoretical coefficient variation (CV) mixture two   exponential distributions always exceeds 100%. sample CV   smallest 100%, valid estimates exist since two first   moments can matched.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/mom.mixexp2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Moment estimation for the mixture of two exponential distributions — mom.mixexp2","text":"","code":"x <- rmixexp2(n = 100, prob1 = 0.5, rate1 = 1.0, rate2 = 3.0) est <- mom.mixexp2(x)"},{"path":"https://irsn.github.io/Renext/reference/mom2par.html","id":null,"dir":"Reference","previous_headings":"","what":"Parameters from moments — mom2par","title":"Parameters from moments — mom2par","text":"Compute parameters (theoretical) moments","code":""},{"path":"https://irsn.github.io/Renext/reference/mom2par.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parameters from moments — mom2par","text":"","code":"mom2par(densfun = \"exponential\",            mean,            sd = NA)"},{"path":"https://irsn.github.io/Renext/reference/mom2par.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parameters from moments — mom2par","text":"densfun Name distribution. can present time:     \"exponential\", \"weibull\", \"gpd\",     \"gamma\", \"negative binomial\". mean Theoretical mean (expectation) distribution. Can     vector, case parameters vectors. sd Standard deviation.","code":""},{"path":"https://irsn.github.io/Renext/reference/mom2par.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parameters from moments — mom2par","text":"distributions like Weibull, necessary find   numerical solution since parameters closed form   expression involving moments.","code":""},{"path":"https://irsn.github.io/Renext/reference/mom2par.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parameters from moments — mom2par","text":"named list containing parameters values e.g. names shape   scale. mean sd vector list   contains vectors.","code":""},{"path":"https://irsn.github.io/Renext/reference/mom2par.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Parameters from moments — mom2par","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/mom2par.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Parameters from moments — mom2par","text":"name formal argument densfun compatibility   fitdistr MASS package. However, unlike   fitdistr  formal can given density value, .e.   object class \"function\" dnorm.","code":""},{"path":"https://irsn.github.io/Renext/reference/mom2par.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parameters from moments — mom2par","text":"","code":"## Weibull mom2par(densfun = \"weibull\", mean = 1, sd = 2)  #> $shape #> [1] 0.5426925 #>  #> $scale #> [1] 0.5752495 #>  ## Genrealised Pareto mom2par(densfun = \"gpd\", mean = 1, sd = 2) #> $shape #> [1] 0.375 #>  #> $scale #> [1] 0.625 #>  #> $loc #> [1] 0 #>  ## Gamma mom2par(densfun = \"gamma\", mean = 1:10, sd = 1) #> $shape #>  [1]   1   4   9  16  25  36  49  64  81 100 #>  #> $scale #>  [1] 1.0000000 0.5000000 0.3333333 0.2500000 0.2000000 0.1666667 0.1428571 #>  [8] 0.1250000 0.1111111 0.1000000 #>"},{"path":"https://irsn.github.io/Renext/reference/pGreenwood1.html","id":null,"dir":"Reference","previous_headings":"","what":"Probability that the Greenwood's statistic is smaller than one — pGreenwood1","title":"Probability that the Greenwood's statistic is smaller than one — pGreenwood1","text":"Probability Greenwood's statistic smaller one.","code":""},{"path":"https://irsn.github.io/Renext/reference/pGreenwood1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probability that the Greenwood's statistic is smaller than one — pGreenwood1","text":"","code":"pGreenwood1(n)"},{"path":"https://irsn.github.io/Renext/reference/pGreenwood1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probability that the Greenwood's statistic is smaller than one — pGreenwood1","text":"n Sample size.","code":""},{"path":"https://irsn.github.io/Renext/reference/pGreenwood1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probability that the Greenwood's statistic is smaller than one — pGreenwood1","text":"Probability Greenwood's statistic smaller one.   random sample exponential distribution size \\(n\\),   probability coefficient variation less one,   probability ML estimate GPD shape parameter   \\(\\xi\\) negative.","code":""},{"path":"https://irsn.github.io/Renext/reference/pGreenwood1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Probability that the Greenwood's statistic is smaller than one — pGreenwood1","text":"probability computed using approximation   quantile function Greenwood's statistic returned   qStat. result found interpolating   distribution function \\(x = 1\\).","code":""},{"path":"https://irsn.github.io/Renext/reference/pGreenwood1.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Probability that the Greenwood's statistic is smaller than one — pGreenwood1","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/pGreenwood1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probability that the Greenwood's statistic is smaller than one — pGreenwood1","text":"","code":"n <- 8:500 plot(n, pGreenwood1(n), type = \"l\", col = \"orangered\", lwd = 2,      log =\"x\", ylim =c(0.5, 0.7), main = \"slow convergence to 0.5\") grid() ; abline(h = 0.5, col = \"SpringGreen\")"},{"path":"https://irsn.github.io/Renext/reference/parDeriv.html","id":null,"dir":"Reference","previous_headings":"","what":"Derivation of probability functions with respect to the parameters — parDeriv","title":"Derivation of probability functions with respect to the parameters — parDeriv","text":"Derivation probability functions respect parameters   using closed forms.","code":""},{"path":"https://irsn.github.io/Renext/reference/parDeriv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derivation of probability functions with respect to the parameters — parDeriv","text":"","code":"parDeriv(par, x, distname, sum = TRUE)"},{"path":"https://irsn.github.io/Renext/reference/parDeriv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derivation of probability functions with respect to the parameters — parDeriv","text":"par Vector parameter values.  x Observations data derivatives computed.  distname Name distribution. See Details.  sum Logical. TRUE, summation element x     carried. Otherwise, first dimension result corresponds     elements x.","code":""},{"path":"https://irsn.github.io/Renext/reference/parDeriv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Derivation of probability functions with respect to the parameters — parDeriv","text":"distributions available. now, :   two-parameter Weibull c(\"shape\", \"scale\"),   two-parameter Generalised Pareto, c(\"scale\", \"shape\")   two-parameter Lomax maxlo distributions.","code":""},{"path":"https://irsn.github.io/Renext/reference/parDeriv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derivation of probability functions with respect to the parameters — parDeriv","text":"list arrays containing first second order derivatives. derLogdens, der2Logdens Derivatives log-density   \\(\\log f(x)\\). derSurv, der2Surv Derivatives   survival function \\(S(x)\\). x length \\(n\\)   distribution depends \\(p\\) parameters, arrays   first second order derivatives dimension \\(n \\times   p\\) \\(n \\times p \\times p\\) sum   FALSE. sum TRUE summation drops   first dimension arrays \\(p\\) \\(p \\times   p\\).","code":""},{"path":"https://irsn.github.io/Renext/reference/parDeriv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Derivation of probability functions with respect to the parameters — parDeriv","text":"See Renext Computing Details document.","code":""},{"path":"https://irsn.github.io/Renext/reference/parDeriv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Derivation of probability functions with respect to the parameters — parDeriv","text":"Yves Deville","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/parDeriv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Derivation of probability functions with respect to the parameters — parDeriv","text":"","code":"set.seed(1234) distname <- \"maxlo\" if (distname == \"weibull\") {     logL <- function(par) {         sum(dweibull(x, shape = par[\"shape\"], scale = par[\"scale\"], log = TRUE))     }     sumS <- function(par) {         sum(pweibull(x, shape = par[\"shape\"], scale = par[\"scale\"],                      lower.tail = FALSE))     }     pars <- c(\"shape\" = rexp(1), \"scale\" = 1000 * rexp(1))     x <- rweibull(n = 100, shape = pars[\"shape\"], scale = pars[\"scale\"])     Der <- parDeriv(par = pars, x = x, distname = \"weibull\")  } else if (distname == \"gpd\") {     require(evd)     logL <- function(par) {         sum(dgpd(x, loc = 0, shape = par[\"shape\"], scale = par[\"scale\"],                  log = TRUE))     }     sumS <- function(par) {          sum(pgpd(x, loc = 0, shape = par[\"shape\"], scale = par[\"scale\"],                  lower.tail = FALSE))     }     pars <- c(\"scale\" = 1000 * rexp(1),               \"shape\" = runif(1, min = -0.4, max = 0.4))     x <- rgpd(n = 100, loc = 0, shape = pars[\"shape\"], scale = pars[\"scale\"])     Der <- parDeriv(par = pars, x = x, distname = \"gpd\") } else if (distname == \"lomax\") {     logL <- function(par) {         sum(dlomax(x, shape = par[\"shape\"], scale = par[\"scale\"], log = TRUE))     }     sumS <- function(par) {          sum(plomax(x, shape = par[\"shape\"], scale = par[\"scale\"],                    lower.tail = FALSE))     }     pars <- c( \"shape\" = 1 + rexp(1), \"scale\" = 1000 * rexp(1))     x <- rlomax(n = 100, shape = pars[\"shape\"], scale = pars[\"scale\"])     Der <- parDeriv(par = pars, x = x, distname = \"lomax\")  } else if (distname == \"maxlo\") {     logL <- function(par) {         sum(dmaxlo(x, shape = par[\"shape\"], scale = par[\"scale\"], log = TRUE))     }     sumS <- function(par) {          sum(pmaxlo(x, shape = par[\"shape\"], scale = par[\"scale\"],                    lower.tail = FALSE))     }     pars <- c( \"shape\" = 2.5 + runif(1), \"scale\" = 100 * rexp(1))     x <- rmaxlo(n = 100, shape = pars[\"shape\"], scale = pars[\"scale\"])     Der <- parDeriv(par = pars, x = x, distname = \"maxlo\")  }  ## check logdens H <- numDeriv::hessian(func = logL, x = pars) colnames(H) <- names(pars) Grad <- numDeriv::grad(func = logL, x = pars)  cat(\"gradient for log density\\n\") #> gradient for log density print(cbind(parDeriv = Der$derLogdens, num = Grad)) #>         parDeriv        num #> shape  1.7741976  1.7741976 #> scale -0.4560811 -0.4560811  cat(\"hessian for log density\\n\") #> hessian for log density print(cbind(exact = Der$der2Logdens, num = H)) #>            shape     scale      shape     scale #> shape -14.638190  2.250876 -14.638190  2.250876 #> scale   2.250876 -0.348458   2.250876 -0.348458  ## check survival HS <- numDeriv::hessian(func = sumS, x = pars) HS <- (HS + t(HS))/2 colnames(HS) <- names(pars) GradS <- numDeriv::grad(func = sumS, x = pars)  cat(\"gradient for Survival\\n\") #> gradient for Survival print(cbind(parDeriv = Der$derSurv, num = GradS)) #>        parDeriv       num #> shape -8.887358 -8.887358 #> scale  1.189740  1.189740  cat(\"hessian for Survival\\n\") #> hessian for Survival print(cbind(exact = Der$der2Surv, num = HS)) #>             shape       scale       shape       scale #> shape  3.60711045 -0.08314355  3.60711045 -0.08314355 #> scale -0.08314355 -0.04585117 -0.08314355 -0.04585117"},{"path":"https://irsn.github.io/Renext/reference/plot.Rendata.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a Rendata object — plot.Rendata","title":"Plot a Rendata object — plot.Rendata","text":"Plot 'Rendata' datasets OT historical data","code":""},{"path":"https://irsn.github.io/Renext/reference/plot.Rendata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a Rendata object — plot.Rendata","text":"","code":"# S3 method for class 'Rendata' plot(x,      textOver = quantile(x$OTdata[, x$info$varName], probs = 0.99),      showHist = TRUE,                  ...)"},{"path":"https://irsn.github.io/Renext/reference/plot.Rendata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a Rendata object — plot.Rendata","text":"x Rendata object .e. list object read readXML     function.  textOver Mark values variable OTdata part     x. Values textOver value ()     marked character version block, typically year  showHist TRUE, historical periods () shown     plot.  ... args passed plot function.","code":""},{"path":"https://irsn.github.io/Renext/reference/plot.Rendata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot a Rendata object — plot.Rendata","text":"plot shows main data object x (OTdata   part) well historical data MAXdata OTSdata   . Different colours used background. function   intended produce nice plots printed.","code":""},{"path":"https://irsn.github.io/Renext/reference/plot.Rendata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot a Rendata object — plot.Rendata","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/plot.Rendata.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot a Rendata object — plot.Rendata","text":"function mainly companion function readXML.   goal check content data read.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/plot.Rendata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot a Rendata object — plot.Rendata","text":"","code":"if (require(XML)) {    ## use 'index.xml' file shipped with Renext    dir1 <- system.file(\"Rendata\", package = \"Renext\")    BrestNew <- readXML(name = \"Brest\", dir = dir1)    plot(BrestNew)    GaronneNew <- readXML(name = \"Garonne\", dir = dir1)    plot(GaronneNew)    test1 <- readXML(name = \"test1\", dir = dir1)    plot(test1) } #> Loading required package: XML"},{"path":"https://irsn.github.io/Renext/reference/plot.Renouv.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an object of class ","title":"Plot an object of class ","text":"Plot object class \"Renouv\". plot return level plot   supplementary elements display historical data.","code":""},{"path":"https://irsn.github.io/Renext/reference/plot.Renouv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an object of class ","text":"","code":"# S3 method for class 'Renouv' plot(x,      pct.conf = x$pct.conf,      show = list(OT = TRUE, quant = TRUE, conf = TRUE,                  MAX = TRUE, OTS = TRUE),      mono = TRUE,      predict = FALSE,      par = NULL,      legend = TRUE,      label = NULL,      problim = NULL,      Tlim = NULL,      main = NULL, xlab = \"periods\", ylab = \"level\",      posOptions = NULL,      byBlockStyle = NULL,      ...) # S3 method for class 'Renouv' lines(x,       pct.conf = x$pct.conf,       show = NULL,       mono = TRUE,       predict = FALSE,       par = NULL,       legend = FALSE,       label = NULL,       posOptions = NULL,       byBlockStyle = NULL,       ...)"},{"path":"https://irsn.github.io/Renext/reference/plot.Renouv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an object of class ","text":"x Object class \"Renouv\".  pct.conf Percents confidence limits (lower    upper). levels found within computed    object x. default, computed levels used.  show list named elements specifying parts     return level plot must drawn. Element OT     sample points (Threshold data), quant     quantile curve (Return Level curve), conf     confidence limits. three elements can set TRUE     FALSE.  element conf TRUE,     percent levels given pct.conf drawn. Moreover,     levels already computed object given x     drawn predictions recomputed predict set     TRUE.  Finally, MAX OTS elements     two possible types historical data. can logical     vectors length one length equal corresponding     blocks blocks shown. two elements can     also character vectors indicating names blocks     shown (partial matching). names match one     several elements character vector named blockNames     within lists x$history.MAX x$history.OTS     respectively.  mono Logical, TRUE monochrome plot.  predict Logical. TRUE, predictions re-computed     model plotting. One effect points used draw     curves designed cover whole range (specified     user). One effect confidence limits     recomputed order include percent levels given entry.  par list returned RLpar function.  legend Logical. TRUE, legend built drawn graph.     label character label used build labels used legend.     default use name x object. Using empty     string \"\" can better cases.  problim Limits x-axis probability scale. Can used     alternative Tlim.  Tlim Limits x-axis return period scale. values given     numeric vector length 2, containing values \\(\\ge 1\\).     first element (minimal return period can 0 case     replaced small positive value.  xlab Label x-axis (time periods, log scale).  main Main title (character).  ylab Label y-axis (labels).  posOptions pair list passed list formals SandT     function computing plotting positions.    byBlockStyle Logical list (named logical vector) elements MAX     OTS. value indicates (MAX OTS) block must     plotted specific style (plotting character color),     instead common style used blocks type     (MAX OTS). first case, block create line     legend label taken history.MAX element     object given x. legend lines appear     legend FALSE can shown later using     RLlegend.show.  second case, one legend line     generated. number blocks large one type     corresponding value byBlockStyle TRUE,     styles recycled plot/legend might clear.     byBlockStyle NULL contain     needed information, default choices made.  ... arguments passed default plot function     e.g., ylim adjust y-axis.","code":""},{"path":"https://irsn.github.io/Renext/reference/plot.Renouv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot an object of class ","text":"Historical data blocks (MAX OTS) embedded x object ()   can plotted depending value corresponding   element show.  MAX element TRUE x       embeds historical data type MAX,       shown symbol differing one ordinary points. OTS element TRUE x embeds       historical data type OTS, shown       symbol differing one ordinary points. exception       one several OTS block data.       block shown horizontal segment; right end-point shows       effective duration block ordinate shows OTS       threshold block. data exceeded threshold within       block. function acts list variable named .RLlegend   stored special environment bound package. variable   used build legends plots produced multiple commands. See   RLlegend help page.   Examples possible combined uses argument plot   lines together RLlegend* functions   given \"Renext Graphics\" chapter Renext     Guide document shipped package.","code":""},{"path":"https://irsn.github.io/Renext/reference/plot.Renouv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot an object of class ","text":"value returned.","code":""},{"path":"https://irsn.github.io/Renext/reference/plot.Renouv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot an object of class ","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/plot.Renouv.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Plot an object of class ","text":"return level plot exponential type .e. uses log-scale   return periods. contrasts Gumbel plot also used   similar contexts.","code":""},{"path":"https://irsn.github.io/Renext/reference/plot.Renouv.html","id":"caution","dir":"Reference","previous_headings":"","what":"Caution","title":"Plot an object of class ","text":"Remind methods plot lines may change   value variable .RLlegend environment   legendEnvir. variable describes material used   legend next call RLlegend.show.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/plot.Renouv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot an object of class ","text":"","code":"## two fits for the Garonne data fit.exp <- Renouv(x = Garonne, plot = FALSE) fit.gpd <- Renouv(x = Garonne, distname.y = \"gpd\", plot = FALSE)  ## simple plot (legend is TRUE here) plot(fit.exp,      main = \"Two fits overlapped\",      label = \"\",      ## Tlim = c(1, 5000),      predict = TRUE)   ## Now try 'lines' and RLlegend.xxx functions plot(fit.exp,      main = \"Fancy legend\",      show = list(OT = FALSE, quant = FALSE, conf = FALSE,                  OTS = FALSE, MAX = FALSE),      legend = FALSE,      Tlim = c(1, 5000)) RLlegend.ini(x = \"bottomright\", bg = \"lightyellow\") ## initialise legend lines(fit.exp,       show = list(quant = FALSE, conf = FALSE, OT = TRUE, MAX = TRUE),       label = \"expon\",       par = RLpar(quant.col = \"orange\",          OT.pch = 21, OT.cex = 1.2, OT.col = \"SeaGreen\", OT.bg = \"yellow\",         MAX.block1.col = \"purple\", MAX.block1.bg = \"mistyrose\",         MAX.block1.lwd = 1.4)) lines(fit.gpd,       pct.conf = c(95, 70),       show = list(quant = TRUE, conf = TRUE),       label = \"GPD\",       par = RLpar(quant.col = \"darkcyan\", conf.conf1.col = \"red\")) RLlegend.show() ## now draw legend"},{"path":"https://irsn.github.io/Renext/reference/predict.Renouv.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute return levels and confidence limits for a ","title":"Compute return levels and confidence limits for a ","text":"Compute return levels confidence limits object class   \"Renouv\".","code":""},{"path":"https://irsn.github.io/Renext/reference/predict.Renouv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute return levels and confidence limits for a ","text":"","code":"# S3 method for class 'Renouv' predict(object,         newdata = c(10, 20, 50, 100, 200, 500, 1000),         cov.rate = TRUE,         level = c(0.95, 0.7),         prob = FALSE,         trace = 1, eps = 1e-06,         ...)"},{"path":"https://irsn.github.io/Renext/reference/predict.Renouv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute return levels and confidence limits for a ","text":"object object class \"Renouv\" typically created using     Renouv function.  newdata return period return levels confidence bounds     wanted.  cov.rate FALSE, delta method take account     uncertainty event rate lambda Poisson     process. Note however distname.y     \"exponential\" MAX OTS data     used, value cov.rate impact now,     delta method used .  level Confidence levels 'predict' methods (percentages).  prob TRUE prob column found returned data     frame. column can used find quantile used     compute return level.  trace details printed trace zero.  eps Level perturbation used compute numerical derivatives     delta method.  ... arguments passed methods.","code":""},{"path":"https://irsn.github.io/Renext/reference/predict.Renouv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute return levels and confidence limits for a ","text":"Unless special cases, confidence limits   approximated ones computed using delta method numerical   derivatives.","code":""},{"path":"https://irsn.github.io/Renext/reference/predict.Renouv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute return levels and confidence limits for a ","text":"data frame expected return levels (col. named   \"quant\") given return periods, confidence   limits. returned object infer.method attribute   describing method used compute confidence limits.","code":""},{"path":"https://irsn.github.io/Renext/reference/predict.Renouv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Compute return levels and confidence limits for a ","text":"Coles S. (2001)  Introduction Statistical Modelling      Extremes Values, Springer.","code":""},{"path":"https://irsn.github.io/Renext/reference/predict.Renouv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute return levels and confidence limits for a ","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/predict.Renouv.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Compute return levels and confidence limits for a ","text":"Despite name, method compute true predictions.   return period interpreted average interevent time   rather duration specific period time. instance,   expected return level given return period length 100   years level average exceeded every 100   years (assuming model description object   correct).","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/predict.Renouv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute return levels and confidence limits for a ","text":"","code":"## Use Brest data fit <- Renouv(Brest) #> Special inference for the exponential case without history #> Warning: uncertainty on the rate not taken into account yet  in the exponential with no history case  pred <- predict(fit, newdata = c(100, 125, 150, 175, 200),                 level = c(0.99, 0.95)) #> Special inference for the exponential case without history #> Warning: uncertainty on the rate not taken into account yet  in the exponential with no history case"},{"path":"https://irsn.github.io/Renext/reference/qStat.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantiles of a test statistic — qStat","title":"Quantiles of a test statistic — qStat","text":"Quantile test statistic.","code":""},{"path":"https://irsn.github.io/Renext/reference/qStat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantiles of a test statistic — qStat","text":"","code":"qStat(p, n,          type = c(\"Greenwood\", \"Jackson\", \"logLRGPD\", \"logLRLomax\",                   \"logLRGEV\", \"logLRFrechet\"),           outNorm = FALSE)"},{"path":"https://irsn.github.io/Renext/reference/qStat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantiles of a test statistic — qStat","text":"p Numeric vector probabilities. small values (p < 0.01)     large ones (p > 0.99) truncated     0.00 1.00 maintain realistic level     precision.  n Sample size.  type type statistic, see Details.  outNorm Logical. TRUE output normalized fashion     distribution asymptotic one (.e. standard normal     practice). FALSE, quantiles given true     scale statistic: \\(\\textrm{CV}^2\\), Jackson. LR     statistics argument impact.","code":""},{"path":"https://irsn.github.io/Renext/reference/qStat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantiles of a test statistic — qStat","text":"vector quantiles.","code":""},{"path":"https://irsn.github.io/Renext/reference/qStat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Quantiles of a test statistic — qStat","text":"function provides approximation distribution several   statistics.  \"Greenwood\", statistic Greenwood's     statistic. distribution squared coefficient     variation \\(\\textrm{CV}^2\\) sample size n     exponential distribution computed CV2. \"Jackson\", statistic Jackson's     statistic, see Jackson. \"logLRGPD\" \"logLRLomax\",     statistic log likelihood ratio sample     exponential distribution. log-likelihoods     exponential distribution compared GPD     non-zero shape, GPD positive shape     (equivalently, Lomax distribution). \"logLRGEV\" \"logLRFrechet\",     statistic log likelihood ratio sample     Gumbel distribution. log-likelihoods     Gumbel distribution compared GEV non-zero shape,     GEV positive shape (equivalently,     Fréchet distribution). log Likelihood Ratios multiplied 2,   compare chi-square statistic one degree freedom.","code":""},{"path":"https://irsn.github.io/Renext/reference/qStat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Quantiles of a test statistic — qStat","text":"precision result given limited,   two-digits. function intended used   provided information.","code":""},{"path":"https://irsn.github.io/Renext/reference/qStat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Quantiles of a test statistic — qStat","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/qStat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantiles of a test statistic — qStat","text":"","code":"res <- qStat(n = 40, type = \"Greenwood\") #> Warning: 'p' contains values smaller than 0.005. Truncated. #> Warning: 'p' contains values larger than 0.995. Truncated. plot(res$q, res$p, type = \"o\")"},{"path":"https://irsn.github.io/Renext/reference/rRendata.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate a random RenData object — rRendata","title":"Simulate a random RenData object — rRendata","text":"Simulate random RenData object can used within   Renouv function tests.","code":""},{"path":"https://irsn.github.io/Renext/reference/rRendata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate a random RenData object — rRendata","text":"","code":"rRendata(lambda = 1,          threshold = 0,          effDuration = 100,          distname.y = \"exp\",          par.y = c(rate = 1),          start = \"1913-01-01\",          name = NULL,          varName = \"X\", varUnit = \"?\",          simDate = TRUE, roundDate = FALSE,          MAX.effDuration = NULL,          MAX.r = rep(1L, length(MAX.effDuration)),          OTS.effDuration = NULL,          OTS.threshold = NULL)"},{"path":"https://irsn.github.io/Renext/reference/rRendata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate a random RenData object — rRendata","text":"lambda rate Homogeneous Poisson Process.  threshold threshold exceedances.  effDuration effective duration main Threshold (OT) period.     must positive value.  distname.y Name distribution excesses simulated.  See     Details.  par.y named vector list giving parameters values     distribution. name must conform chosen distribution.  start POSIXct object, character can coerced     POSIXct (e.g. date given character     \"YYYY-MM-DD\" format) giving start main OT sample.  name name dataset attached used     methods \"Rendata\".  varName Name simulated variable.  varUnit Unit simulated variable (used plot).  simDate Logical. TRUE dates reported     historical data (MAX OTS).  roundDate Logical. TRUE time part ot date column     rounded. implemented yet.  MAX.effDuration Vector durations MAX historical blocks.  MAX.r Vector (positive) numbers observations MAX     historical blocks. Must length     MAX.effDuration. See Caution effect     selection large values.  OTS.effDuration Vector durations OTS historical blocks.  OTS.threshold Vector numerical thresholds observations OTS     historical blocks. Must length     OTS.effDuration. values must >= threshold.","code":""},{"path":"https://irsn.github.io/Renext/reference/rRendata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate a random RenData object — rRendata","text":"distribution excesses named distname.y can   known distribution, provided prefixed usual   \"r\" letter, name gives wanted simulation function.   example, distname.y = \"exp\", rexp function   used par.y must thus contain element name   \"rate\". suitable numeric threshold given, simulated marks   marked process sum threshold random excess   drawn distname.y.  threshold finite   numeric value, observed marks simulated values . main OT sample assumed begin start. Historical MAX   blocks () assumed just start, OTS   just start just beginning MAX   blocks .  dates computed without taking   consideration problems leap years leap seconds.","code":""},{"path":"https://irsn.github.io/Renext/reference/rRendata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate a random RenData object — rRendata","text":"object S3 class \"Rendata\". class currently   plot summary methods.","code":""},{"path":"https://irsn.github.io/Renext/reference/rRendata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate a random RenData object — rRendata","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/rRendata.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Simulate a random RenData object — rRendata","text":"effDuration small relative inverse   lambda number simulated marks OT sample may   \\(0\\) can cause problems uses created data.","code":""},{"path":"https://irsn.github.io/Renext/reference/rRendata.html","id":"caution","dir":"Reference","previous_headings":"","what":"Caution","title":"Simulate a random RenData object — rRendata","text":"construction, MAX block contains least one   observation, random period duration might   none. simulated number events MAX block generated using   censored Poisson distribution.  Care must taken estimations   made data, since creating MAX blocks obviously   create positive bias lambda. bias also affects   parameters concerning excesses,   parameters longer orthogonal rate parameter   lambda historical data used. bias can severe   MAX blocks small durations used, large number   events chosen MAX.r.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/rRendata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate a random RenData object — rRendata","text":"","code":"set.seed(1234) rd <- rRendata(effDuration = 60,                MAX.effDuration = rep(3, 6),                MAX.r = rep(4, 6),                distname.y = \"exp\", par.y = c(rate = 1/100)) plot(rd)  summary(rd) #> o Dataset simulated \"exp\" data #>    data 'simulated \"exp\" data', variable 'X' (?)  #>  #> o OT data (main sample) from  1913-01-01  to  1972-12-17  (eff. dur.  60.00 years) #>   #>           n        Min.     1st Qu.      Median        Mean     3rd Qu.  #>  50.0000000   0.6510342  14.1203716  91.9701602 114.8248081 165.6590278  #>        Max.  #> 432.4563092  #>  #> o no missing OT periods  #>  #> o 'MAX' historical info: 6 blocks, 24 obs., total duration = 18.00 years  #>  #> o no 'OTS' historical data  #>  rd2 <- rRendata(effDuration = 10,                 MAX.effDuration = rep(60, 2),                 MAX.r = rep(3, 2),                 simDate = FALSE,                 distname.y = \"gpd\", par.y = c(scale = 20, shape = 0.16)) plot(rd2)  rd3 <- rRendata(effDuration = 10,                 OTS.effDuration = rep(60, 2),                 OTS.threshold = rep(80, 2),                 simDate = FALSE,                 distname.y = \"gpd\", par.y = c(scale = 20, shape = 0.16)) plot(rd3)  ## Renouv fit with historical data fit <- Renouv(rd)  summary(fit) #> o Main sample 'Over Threshold' #>     . Threshold            0.00 #>     . Effect. duration    60.00 years #>     . Nb. of exceed.      50 #>  #> o Estimated rate 'lambda' for Poisson process (events):  1.00 evt/year. #>  #> o Distribution for exceedances y: \"exponential\", with 1 par. \"rate\"  #>  #> o No transformation applied #>  #> o Coefficients #>  #>          Estimate  Std. Error  t value #> lambda 0.99752850 0.116045914 8.595981 #> rate   0.01042349 0.001200677 8.681345 #>  #> Degrees of freedom: 2 (param.) and 74 (obs) #>  #> o Inference method used for return levels #> \"Delta method\" #>  #> o Return levels #>  #>    period quant L.95 U.95 L.70 U.70 #> 24     10   221  167  274  192  249 #> 30     20   287  220  355  251  323 #> 34     50   375  288  462  329  421 #> 36    100   442  340  543  388  495 #> 38    200   508  392  624  447  569 #> 41    300   547  422  672  481  613 #> 43    400   575  444  705  505  644 #> 44    500   596  461  731  524  668 #> 46    600   613  474  753  540  687 #> 47    700   628  486  771  553  704 #> 48    800   641  496  787  564  718 #> 49    900   652  504  800  574  731 #> 50   1000   662  512  813  583  742 #>  #>  #> o 'MAX' historical info: 6  blocks, 24 obs., total duration = 18.00 years #>  #> o no 'OTS' historical data #>  #> o Kolmogorov-Smirnov test #>  #> \tExact one-sample Kolmogorov-Smirnov test #>  #> data:  OTjitter(y.OT, threshold = 0) #> D = 0.18402, p-value = 0.05916 #> alternative hypothesis: two-sided #>  #>  #> o Implied model for block maxima #>   Distribution: gumbel  #>   Coeffficients #>        loc      scale  #> -0.2374022 95.9371765"},{"path":"https://irsn.github.io/Renext/reference/readXML.html","id":null,"dir":"Reference","previous_headings":"","what":"Read data using an XML index file — readXML","title":"Read data using an XML index file — readXML","text":"Read one several dataset(s) using XML index file specifying   data sets read structure ","code":""},{"path":"https://irsn.github.io/Renext/reference/readXML.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read data using an XML index file — readXML","text":"","code":"readXML(name,            dir,            index = \"index.xml\",            TZ = \"GMT\",            trace = 0)"},{"path":"https://irsn.github.io/Renext/reference/readXML.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read data using an XML index file — readXML","text":"name Name dataset matched name     attribute datasets given index file.  dir Path directory index file data files     found.  index Name (short) index file. file must directory     given dir.  TZ time zone strptime. time zone \"GMT\"     preferred, since work platforms can     cope dates remote past.  trace Level verbosity (integer). Can used trace successive     steps short indications.","code":""},{"path":"https://irsn.github.io/Renext/reference/readXML.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read data using an XML index file — readXML","text":"XML index file parsed within R. according   indications within index file, files read (e.g. csv   files). way, data returned list can contain   heterogeneous data: Threshold (OT) data, missing periods, MAX   data, etc.  Various pieces information also stored list   elements name containing \"info\" string. function requires CRAN package XML.","code":""},{"path":"https://irsn.github.io/Renext/reference/readXML.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read data using an XML index file — readXML","text":"list data read. info General information data: varName,     varShorlLab varUnit give variable name unit     short label.  OTinfo Information Threshold (OT).  OTdata Threshold (OT) data.  OTmissing Missing periods within OTdata period.  MAXinfo Information MAX (\\(r\\)-largest) supplement data.  MAXdata MAX supplement data.  OTSinfo Information Threshold Supplement (OTS) data.  OTSdata Threshold (OT) supplement data.","code":""},{"path":"https://irsn.github.io/Renext/reference/readXML.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read data using an XML index file — readXML","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/readXML.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Read data using an XML index file — readXML","text":"flat files (usually .csv files) can also read   conventional way e.g. read.table. However, conform   index.xml examples index.xsd schema see   adjust reading parameters sep, etc.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/readXML.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read data using an XML index file — readXML","text":"","code":"if (FALSE) { # \\dontrun{ ## Examples of datasets that can be read ## Browse should work for browsers with xslt support browseURL(file.path(system.file(\"Rendata\", package = \"Renext\"), \"index.xml\")) if (require(XML)) {    ## use 'index.xml' file shiped with Renext    dir1 <- system.file(\"Rendata\", package = \"Renext\")    BrestNew1 <- readXML(name = \"Brest\", dir = dir1)    test1 <- readXML(name = \"test1\", dir = dir1) } } # }"},{"path":"https://irsn.github.io/Renext/reference/roundPred.html","id":null,"dir":"Reference","previous_headings":"","what":"Round quantiles in a pseudo-prediction table — roundPred","title":"Round quantiles in a pseudo-prediction table — roundPred","text":"Round quantiles pseudo prediction table   computed predict.Renouv.","code":""},{"path":"https://irsn.github.io/Renext/reference/roundPred.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round quantiles in a pseudo-prediction table — roundPred","text":"","code":"roundPred(pred, dig.quant = NA)"},{"path":"https://irsn.github.io/Renext/reference/roundPred.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round quantiles in a pseudo-prediction table — roundPred","text":"pred data.frame containing predicted quantiles     return levels. dig.quant Number digits. Guessed provided.","code":""},{"path":"https://irsn.github.io/Renext/reference/roundPred.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Round quantiles in a pseudo-prediction table — roundPred","text":"columns can considered quantiles   rounded. assumed names \"quant\"   expected return level \"L.\" \"U.\" followed   percentage lower upper confidence limits (e.g. \"L.95\"   \"U.95\" 95% percent confidence limits.   number digits guessed experimental.","code":""},{"path":"https://irsn.github.io/Renext/reference/roundPred.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round quantiles in a pseudo-prediction table — roundPred","text":"data.frame structure given,   columns rounded.","code":""},{"path":"https://irsn.github.io/Renext/reference/skip2noskip.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix non-skipped periods from skipped ones — skip2noskip","title":"Fix non-skipped periods from skipped ones — skip2noskip","text":"Compute non-skipped periods form start end skipped periods.","code":""},{"path":"https://irsn.github.io/Renext/reference/skip2noskip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix non-skipped periods from skipped ones — skip2noskip","text":"","code":"skip2noskip(skip = NULL,                start = NULL,                end = NULL)"},{"path":"https://irsn.github.io/Renext/reference/skip2noskip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix non-skipped periods from skipped ones — skip2noskip","text":"skip data.frame object start end columns     can coerced POSIXct. columns can present (    ignored). row describes missing period. Rows must sorted     chronological order periods overlap. Validity     checks time limited.  start Beginning whole period, used .POSIXct.  end End whole period used .POSIXct.","code":""},{"path":"https://irsn.github.io/Renext/reference/skip2noskip.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fix non-skipped periods from skipped ones — skip2noskip","text":"'normal' use function start end   given, respectively beginning first   skip period end last skip   period.  Thus returned dataframe nrow(skip)+1   rows. However, start end can NULL   case nrows(skip)-1 \"inner\" non-skipped periods   returned. start end NULL   skip one row, returned result NULL.","code":""},{"path":"https://irsn.github.io/Renext/reference/skip2noskip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix non-skipped periods from skipped ones — skip2noskip","text":"data.frame object two POSIXct columns named start   end. row corresponds non-skipped period","code":""},{"path":"https://irsn.github.io/Renext/reference/skip2noskip.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fix non-skipped periods from skipped ones — skip2noskip","text":"Yves Deville","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/skip2noskip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fix non-skipped periods from skipped ones — skip2noskip","text":"","code":"## Brest data embeds a description of the gaps  ns <- skip2noskip(skip = Brest$OTmissing)  ns2 <- skip2noskip(skip = Brest$OTmissing,                    start = Brest$OTinfo$start,                    end = Brest$OTinfo$end)  ## check durations. dur2 should be equal to the effective ## duration (with an error of a fraction of day) dur <- as.numeric(sum(ns$end-ns$start))/365.25 dur2 <- as.numeric(sum(ns2$end-ns2$start))/365.25"},{"path":"https://irsn.github.io/Renext/reference/spacings.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods computing spacings between Largest Order Statistics — spacings","title":"Methods computing spacings between Largest Order Statistics — spacings","text":"Methods computing random spacings Largest Order   Statistics marks POT renewal.","code":""},{"path":"https://irsn.github.io/Renext/reference/spacings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods computing spacings between Largest Order Statistics — spacings","text":"","code":"spacings(object, ...)  # S3 method for class 'numeric' spacings(object, wExp = TRUE, ...)  # S3 method for class 'data.frame' spacings(object, varName, wExp = TRUE, ...)  # S3 method for class 'Rendata' spacings(object, type = c(\"MAX\", \"OTS\", \"OT\"), wExp = TRUE, ...)"},{"path":"https://irsn.github.io/Renext/reference/spacings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods computing spacings between Largest Order Statistics — spacings","text":"object object containing marks \\(X_i\\). can vector     data frame data aggregated blocks. object class     data.frame one three data.frame slots: OTdata,     MAXdata OTSdata can used using suitable     value type.  varName Character vector length 1 giving name variable     object data.frame.  wExp Logical. TRUE, spacings weighted explained     Details.  type Character specifying data.frame used object class     \"Rendata\".  ... used yet.","code":""},{"path":"https://irsn.github.io/Renext/reference/spacings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Methods computing spacings between Largest Order Statistics — spacings","text":"spacings differences Largest Order   Statistics. useful estimation tasks diagnostics.   Given random variables \\(X_i\\), \\(\\)-th spacing \\(Y_i\\)   difference \\(X_{()}-X_{(+1)}\\) \\(\\)-th largest   order statistic \\(X_{()}\\) next decreasing order   .e. \\(X_{(+1)}\\). r.vs \\(X_i\\) form sample exponential Gumbel   distribution, spacings associated largest order   statistics tend independent exponentially   distributed. precisely, weighted spacings \\(\\times   Y_i\\) tend exponential   distribution. can used estimate shape parameter   underlying distribution using largest order   statistics. Moreover \\(r-1\\) spacings \\(Y_i\\) built   \\(r\\) largest order statistics \\(\\le r\\) tend   independent \\(r\\)-th largest order statistic \\(X_{(r)}\\). wExp TRUE, returned values weighted   spacings \\(\\times Y_i\\).","code":""},{"path":"https://irsn.github.io/Renext/reference/spacings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Methods computing spacings between Largest Order Statistics — spacings","text":"list vector containing spacings. data structured   blocks MAXdata slot object class   \"Rendata\", spacings computed form order statistics   within block, maintain independence next order   statistic decreasing order.","code":""},{"path":"https://irsn.github.io/Renext/reference/spacings.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Methods computing spacings between Largest Order Statistics — spacings","text":"Embrechts P., Klüppelberg C. Mikosch T. (1997) Modelling   Extremal Events Insurance Finance. Springer.","code":""},{"path":"https://irsn.github.io/Renext/reference/spacings.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Methods computing spacings between Largest Order Statistics — spacings","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/spacings.html","id":"caution","dir":"Reference","previous_headings":"","what":"Caution","title":"Methods computing spacings between Largest Order Statistics — spacings","text":"default, spacings scaled explained , thus assuming   marks exponentially distributed.","code":""},{"path":"https://irsn.github.io/Renext/reference/spacings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Methods computing spacings between Largest Order Statistics — spacings","text":"","code":"sp <- spacings(rgumbel(200, loc = 0, scale = 1)) expplot(sp)  sp1 <- spacings(rgev(200, loc = 0, scale = 1, shape = 0.3)) expplot(sp1)  ## spacings are computed by block sp2 <- spacings(object = Garonne$MAXdata,                 varName = Garonne$info$varName) expplot(unlist(sp2))  sp3 <- spacings(object = Garonne, type = \"OT\") expplot(sp3)"},{"path":"https://irsn.github.io/Renext/reference/summary.Rendata.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary and print methods for ","title":"Summary and print methods for ","text":"Summary method \"Rendata\" objects representing data   used renouvellement models.","code":""},{"path":"https://irsn.github.io/Renext/reference/summary.Rendata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary and print methods for ","text":"","code":"# S3 method for class 'Rendata' print(x, ...)     # S3 method for class 'Rendata' summary(object, ...)    # S3 method for class 'summary.Rendata' print(x, ...)"},{"path":"https://irsn.github.io/Renext/reference/summary.Rendata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary and print methods for ","text":"object object class \"Rendata\".  x object class \"summary.Rendata\", .e.  result     call summary.Rendata.  ... arguments passed methods.","code":""},{"path":"https://irsn.github.io/Renext/reference/summary.Rendata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary and print methods for ","text":"","code":"## Brest example: no historical data summary(Brest) #> o Dataset Surge Heights at Brest (France) #>    data 'Brest', variable 'Surge' (cm)  #>  #> o OT data (main sample) from  1846-01-01  to  2009-01-01  (eff. dur. 147.62 years) #>   #>          n       Min.    1st Qu.     Median       Mean    3rd Qu.       Max.  #> 1289.00000   30.02200   33.64700   38.30600   41.76007   46.58100  143.94900  #>  #> o missing 'OT' periods, total 15.38 years  #>  #>            n         Min.      1st Qu.       Median         Mean      3rd Qu.  #> 43.000000000  0.002737851  0.016427105  0.038329911  0.357639718  0.086242300  #>         Max.  #>  8.418891170  #>  #> o no 'MAX' historical data  #>  #> o no 'OTS' historical data  #>   ## Garonne example:  with historical data summary(Garonne) #> o Dataset La Garonne river flow #>    data 'Garonne', variable 'Flow' (m3/s)  #>  #> o OT data (main sample) from  1913-01-01  to  1978-01-01  (eff. dur.  65.00 years) #>   #>        n     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.  #>  151.000 2530.000 2900.000 3200.000 3591.675 3995.000 7500.000  #>  #> o no missing OT periods  #>  #> o 'MAX' historical info: 1 blocks, 12 obs., total duration = 143.09 years  #>  #> o no 'OTS' historical data  #>"},{"path":"https://irsn.github.io/Renext/reference/summary.Renouv.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary and print methods for ","title":"Summary and print methods for ","text":"Summary method \"Renouv\" objects representing 'Renouvellement' (POT)   fitted models.","code":""},{"path":"https://irsn.github.io/Renext/reference/summary.Renouv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary and print methods for ","text":"","code":"# S3 method for class 'Renouv' print(x,         digits = max(3L, getOption(\"digits\") - 3L),         ...)     # S3 method for class 'Renouv' summary(object,         correlation = FALSE,         symbolic.cor = FALSE,         ...)     # S3 method for class 'summary.Renouv' print(x,       coef = TRUE,       pred = TRUE,       probT = FALSE,       digits = max(3, getOption(\"digits\") - 3),       symbolic.cor = x$symbolic.cor,       signif.stars = getOption(\"show.signif.stars\"),       ...)     # S3 method for class 'summary.Renouv' format(x,       ...)"},{"path":"https://irsn.github.io/Renext/reference/summary.Renouv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary and print methods for ","text":"object object class \"Renouv\".  x object class \"summary.Renouv\", .e.  result call     summary.Renouv.  correlation Logical; TRUE, correlation matrix estimated     parameters returned printed.  coef Logical. FALSE, table coefficients t-ratios'     printed.  pred Logical. FALSE, table return periods/levels     printed.  probT FALSE, \\(p\\)-values t-tests     printed displayed.  digits number significant digits use printing.  symbolic.cor logical. TRUE, print correlations symbolic form     (see symnum) rather numbers.  signif.stars logical. TRUE, ‘significance stars’ printed     coefficient.  ... arguments passed methods.","code":""},{"path":"https://irsn.github.io/Renext/reference/summary.Renouv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summary and print methods for ","text":"print.summary.Renouv tries smart formatting   coefficients, standard errors, return levels, etc.   format.summary.Renouv returns limited content   character string. embed coefficients values   predictions.","code":""},{"path":"https://irsn.github.io/Renext/reference/summary.Renouv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary and print methods for ","text":"function summary.RenOUV computes returns list  summary statistics concerning object class \"Rendata\"  given object.  returned list object class  \"summary.Renouv\". function print.summary.Rendata returns anything.","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/summary.Renouv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary and print methods for ","text":"","code":"## use Brest data fit <- Renouv(Brest) #> Special inference for the exponential case without history #> Warning: uncertainty on the rate not taken into account yet  in the exponential with no history case  summary(fit) #> o Main sample 'Over Threshold' #>     . Threshold           30.00 #>     . Effect. duration   147.62 years #>     . Nb. of exceed.    1289 #>  #> o Estimated rate 'lambda' for Poisson process (events):  8.73 evt/year. #>  #> o Distribution for exceedances y: \"exponential\", with 1 par. \"rate\"  #>  #> o No transformation applied #>  #> o Coefficients #>  #>         Estimate  Std. Error  t value #> lambda 8.7318791 0.243209905 35.90265 #> rate   0.0850335 0.002368447 35.90265 #>  #> Degrees of freedom: 2 (param.) and 1289 (obs) #>  #> o Inference method used for return levels #> \"chi-square for exponential distribution (no historical data)\" #>  #> o Return levels #>  #>    period quant L.95 U.95 L.70 U.70 #> 33     10    83   80   86   81   84 #> 35     20    91   88   94   89   93 #> 39     50   101   98  106   99  104 #> 41    100   110  105  114  107  112 #> 43    200   118  113  123  115  120 #> 46    300   123  118  128  120  125 #> 48    400   126  121  131  123  129 #> 49    500   129  123  134  126  131 #> 51    600   131  125  136  128  134 #> 52    700   133  127  138  130  136 #> 53    800   134  129  140  131  137 #> 54    900   135  130  141  133  139 #> 55   1000   137  131  143  134  140 #>  #>  #> o no 'MAX' historical data #>  #> o no 'OTS' historical data #>  #> o Kolmogorov-Smirnov test #>  #> \tAsymptotic one-sample Kolmogorov-Smirnov test #>  #> data:  OTjitter(y.OT, threshold = 0) #> D = 0.021165, p-value = 0.6106 #> alternative hypothesis: two-sided #>  #>  #> o Implied model for block maxima #>   Distribution: gumbel  #>   Coeffficients #>      loc    scale  #> 55.48385 11.76007"},{"path":"https://irsn.github.io/Renext/reference/translude.html","id":null,"dir":"Reference","previous_headings":"","what":"Make translucient colors — translude","title":"Make translucient colors — translude","text":"Make translucient colors.","code":""},{"path":"https://irsn.github.io/Renext/reference/translude.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make translucient colors — translude","text":"","code":"translude(colors, alpha = 0.6)"},{"path":"https://irsn.github.io/Renext/reference/translude.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make translucient colors — translude","text":"colors vector colors format can understood     col2rgb.  alpha Vector level(s) opacity 0 1 (0 means fully     transparent 1 means opaque). recycling reach     required length, value vector used alpha     rgb.","code":""},{"path":"https://irsn.github.io/Renext/reference/translude.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make translucient colors — translude","text":"vector translucient (    semi-transparent) colors.","code":""},{"path":"https://irsn.github.io/Renext/reference/translude.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Make translucient colors — translude","text":"Using RColorBrewer package might better option   transluding chosen colors!","code":""},{"path":"https://irsn.github.io/Renext/reference/vcov.Renouv.html","id":null,"dir":"Reference","previous_headings":"","what":"Variance-covariance matrix of the estimates of a ","title":"Variance-covariance matrix of the estimates of a ","text":"Variance-covariance matrix estimates \"Renouv\" object.","code":""},{"path":"https://irsn.github.io/Renext/reference/vcov.Renouv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variance-covariance matrix of the estimates of a ","text":"","code":"# S3 method for class 'Renouv' vcov(object, ...)"},{"path":"https://irsn.github.io/Renext/reference/vcov.Renouv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variance-covariance matrix of the estimates of a ","text":"object Object class \"Renouv\".  ... used time.","code":""},{"path":"https://irsn.github.io/Renext/reference/vcov.Renouv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variance-covariance matrix of the estimates of a ","text":"variance-covariance matrix. rows columns correspond   parameters Renouv object. rate \"lambda\"   Poisson process, parameters distribution   excesses threshold, names depending chosen   distribution.","code":""},{"path":"https://irsn.github.io/Renext/reference/vcov.Renouv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Variance-covariance matrix of the estimates of a ","text":"Yves Deville","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/weibplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Classical Weibull distribution plot — weibplot","title":"Classical Weibull distribution plot — weibplot","text":"Plots vector using Weibull distribution scales","code":""},{"path":"https://irsn.github.io/Renext/reference/weibplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Classical Weibull distribution plot — weibplot","text":"","code":"weibplot(x,             plot.pos = \"exp\",             shape = NULL, scale = NULL,             labels = NULL,             mono = TRUE,             ...)"},{"path":"https://irsn.github.io/Renext/reference/weibplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Classical Weibull distribution plot — weibplot","text":"x vector plotted. plot.pos plotting position points: either \"exp\"     expected ranks \"med\" median rank approximation (see Details ). shape Shape parameter one several Weibull lines plotted. scale Scale parameter one several Weibull lines plotted. labels Text display legend Weibull lines     specified. mono Monochrome graph. ... Arguments passed plot.","code":""},{"path":"https://irsn.github.io/Renext/reference/weibplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Classical Weibull distribution plot — weibplot","text":"plot shows \\(\\log\\{-\\log[1-F(x)]\\}\\)   \\(\\log(x)\\) \\(F(x)\\) point \\(\\)   taken \\(/(n+1)\\) plot.pos \"exp\",   \"median rank\" approximation \\((-0.3)/(n+0.4)\\)   plot.pos \"med\".","code":""},{"path":"https://irsn.github.io/Renext/reference/weibplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Classical Weibull distribution plot — weibplot","text":"Yves Deville","code":""},{"path":"https://irsn.github.io/Renext/reference/weibplot.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Classical Weibull distribution plot — weibplot","text":"graph displayed uses log scale x. log-log scale y   emulated via construction suitable graduations. careful   adding graphical material (points, etc) graph functions   \"add plot\" family (points, lines, ...).","code":""},{"path":[]},{"path":"https://irsn.github.io/Renext/reference/weibplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Classical Weibull distribution plot — weibplot","text":"","code":"x <- rweibull(200, shape = 1.2, scale = 1) weibplot(x, main = \"Classical Weibull plot\")  ## Weibull lines weibplot(x, shape = c(0.9, 1.3), scale = 1)  weibplot(x, shape = c(0.9, 1.3), scale = 1,          labels = c(\"before\", \"after\"))  weibplot(x, shape = c(0.9, 1.3), scale = 1,          labels = c(\"before\", \"after\"),          mono = TRUE)"}]
